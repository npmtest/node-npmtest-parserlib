{"/home/travis/build/npmtest/node-npmtest-parserlib/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_parserlib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/lib.npmtest_parserlib.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/lib.npmtest_parserlib.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_parserlib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_parserlib = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_parserlib = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-parserlib && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_parserlib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_parserlib","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_parserlib.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_parserlib.rollup.js'] =","            local.assetsDict['/assets.npmtest_parserlib.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_parserlib.__dirname + '/lib.npmtest_parserlib.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":2}}},"branchMap":{},"code":["\"use strict\";","","module.exports = {","    css  : require(\"./css\"),","    util : require(\"./util\")","};",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["\"use strict\";","","module.exports = {","    Colors            : require(\"./Colors\"),","    Combinator        : require(\"./Combinator\"),","    Parser            : require(\"./Parser\"),","    PropertyName      : require(\"./PropertyName\"),","    PropertyValue     : require(\"./PropertyValue\"),","    PropertyValuePart : require(\"./PropertyValuePart\"),","    Matcher           : require(\"./Matcher\"),","    MediaFeature      : require(\"./MediaFeature\"),","    MediaQuery        : require(\"./MediaQuery\"),","    Selector          : require(\"./Selector\"),","    SelectorPart      : require(\"./SelectorPart\"),","    SelectorSubPart   : require(\"./SelectorSubPart\"),","    Specificity       : require(\"./Specificity\"),","    TokenStream       : require(\"./TokenStream\"),","    Tokens            : require(\"./Tokens\"),","    ValidationError   : require(\"./ValidationError\")","};",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Colors.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Colors.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":186,"column":2}}},"branchMap":{},"code":["\"use strict\";","","/* exported Colors */","","var Colors = module.exports = {","    __proto__       :null,","    aliceblue       :\"#f0f8ff\",","    antiquewhite    :\"#faebd7\",","    aqua            :\"#00ffff\",","    aquamarine      :\"#7fffd4\",","    azure           :\"#f0ffff\",","    beige           :\"#f5f5dc\",","    bisque          :\"#ffe4c4\",","    black           :\"#000000\",","    blanchedalmond  :\"#ffebcd\",","    blue            :\"#0000ff\",","    blueviolet      :\"#8a2be2\",","    brown           :\"#a52a2a\",","    burlywood       :\"#deb887\",","    cadetblue       :\"#5f9ea0\",","    chartreuse      :\"#7fff00\",","    chocolate       :\"#d2691e\",","    coral           :\"#ff7f50\",","    cornflowerblue  :\"#6495ed\",","    cornsilk        :\"#fff8dc\",","    crimson         :\"#dc143c\",","    cyan            :\"#00ffff\",","    darkblue        :\"#00008b\",","    darkcyan        :\"#008b8b\",","    darkgoldenrod   :\"#b8860b\",","    darkgray        :\"#a9a9a9\",","    darkgrey        :\"#a9a9a9\",","    darkgreen       :\"#006400\",","    darkkhaki       :\"#bdb76b\",","    darkmagenta     :\"#8b008b\",","    darkolivegreen  :\"#556b2f\",","    darkorange      :\"#ff8c00\",","    darkorchid      :\"#9932cc\",","    darkred         :\"#8b0000\",","    darksalmon      :\"#e9967a\",","    darkseagreen    :\"#8fbc8f\",","    darkslateblue   :\"#483d8b\",","    darkslategray   :\"#2f4f4f\",","    darkslategrey   :\"#2f4f4f\",","    darkturquoise   :\"#00ced1\",","    darkviolet      :\"#9400d3\",","    deeppink        :\"#ff1493\",","    deepskyblue     :\"#00bfff\",","    dimgray         :\"#696969\",","    dimgrey         :\"#696969\",","    dodgerblue      :\"#1e90ff\",","    firebrick       :\"#b22222\",","    floralwhite     :\"#fffaf0\",","    forestgreen     :\"#228b22\",","    fuchsia         :\"#ff00ff\",","    gainsboro       :\"#dcdcdc\",","    ghostwhite      :\"#f8f8ff\",","    gold            :\"#ffd700\",","    goldenrod       :\"#daa520\",","    gray            :\"#808080\",","    grey            :\"#808080\",","    green           :\"#008000\",","    greenyellow     :\"#adff2f\",","    honeydew        :\"#f0fff0\",","    hotpink         :\"#ff69b4\",","    indianred       :\"#cd5c5c\",","    indigo          :\"#4b0082\",","    ivory           :\"#fffff0\",","    khaki           :\"#f0e68c\",","    lavender        :\"#e6e6fa\",","    lavenderblush   :\"#fff0f5\",","    lawngreen       :\"#7cfc00\",","    lemonchiffon    :\"#fffacd\",","    lightblue       :\"#add8e6\",","    lightcoral      :\"#f08080\",","    lightcyan       :\"#e0ffff\",","    lightgoldenrodyellow  :\"#fafad2\",","    lightgray       :\"#d3d3d3\",","    lightgrey       :\"#d3d3d3\",","    lightgreen      :\"#90ee90\",","    lightpink       :\"#ffb6c1\",","    lightsalmon     :\"#ffa07a\",","    lightseagreen   :\"#20b2aa\",","    lightskyblue    :\"#87cefa\",","    lightslategray  :\"#778899\",","    lightslategrey  :\"#778899\",","    lightsteelblue  :\"#b0c4de\",","    lightyellow     :\"#ffffe0\",","    lime            :\"#00ff00\",","    limegreen       :\"#32cd32\",","    linen           :\"#faf0e6\",","    magenta         :\"#ff00ff\",","    maroon          :\"#800000\",","    mediumaquamarine:\"#66cdaa\",","    mediumblue      :\"#0000cd\",","    mediumorchid    :\"#ba55d3\",","    mediumpurple    :\"#9370d8\",","    mediumseagreen  :\"#3cb371\",","    mediumslateblue :\"#7b68ee\",","    mediumspringgreen   :\"#00fa9a\",","    mediumturquoise :\"#48d1cc\",","    mediumvioletred :\"#c71585\",","    midnightblue    :\"#191970\",","    mintcream       :\"#f5fffa\",","    mistyrose       :\"#ffe4e1\",","    moccasin        :\"#ffe4b5\",","    navajowhite     :\"#ffdead\",","    navy            :\"#000080\",","    oldlace         :\"#fdf5e6\",","    olive           :\"#808000\",","    olivedrab       :\"#6b8e23\",","    orange          :\"#ffa500\",","    orangered       :\"#ff4500\",","    orchid          :\"#da70d6\",","    palegoldenrod   :\"#eee8aa\",","    palegreen       :\"#98fb98\",","    paleturquoise   :\"#afeeee\",","    palevioletred   :\"#d87093\",","    papayawhip      :\"#ffefd5\",","    peachpuff       :\"#ffdab9\",","    peru            :\"#cd853f\",","    pink            :\"#ffc0cb\",","    plum            :\"#dda0dd\",","    powderblue      :\"#b0e0e6\",","    purple          :\"#800080\",","    red             :\"#ff0000\",","    rosybrown       :\"#bc8f8f\",","    royalblue       :\"#4169e1\",","    saddlebrown     :\"#8b4513\",","    salmon          :\"#fa8072\",","    sandybrown      :\"#f4a460\",","    seagreen        :\"#2e8b57\",","    seashell        :\"#fff5ee\",","    sienna          :\"#a0522d\",","    silver          :\"#c0c0c0\",","    skyblue         :\"#87ceeb\",","    slateblue       :\"#6a5acd\",","    slategray       :\"#708090\",","    slategrey       :\"#708090\",","    snow            :\"#fffafa\",","    springgreen     :\"#00ff7f\",","    steelblue       :\"#4682b4\",","    tan             :\"#d2b48c\",","    teal            :\"#008080\",","    thistle         :\"#d8bfd8\",","    tomato          :\"#ff6347\",","    turquoise       :\"#40e0d0\",","    violet          :\"#ee82ee\",","    wheat           :\"#f5deb3\",","    white           :\"#ffffff\",","    whitesmoke      :\"#f5f5f5\",","    yellow          :\"#ffff00\",","    yellowgreen     :\"#9acd32\",","    //'currentColor' color keyword https://www.w3.org/TR/css3-color/#currentcolor","    currentColor        :\"The value of the 'color' property.\",","    //CSS2 system colors https://www.w3.org/TR/css3-color/#css2-system","    activeBorder        :\"Active window border.\",","    activecaption       :\"Active window caption.\",","    appworkspace        :\"Background color of multiple document interface.\",","    background          :\"Desktop background.\",","    buttonface          :\"The face background color for 3-D elements that appear 3-D due to one layer of surrounding border.\",","    buttonhighlight     :\"The color of the border facing the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",","    buttonshadow        :\"The color of the border away from the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",","    buttontext          :\"Text on push buttons.\",","    captiontext         :\"Text in caption, size box, and scrollbar arrow box.\",","    graytext            :\"Grayed (disabled) text. This color is set to #000 if the current display driver does not support a solid gray color.\",","    greytext            :\"Greyed (disabled) text. This color is set to #000 if the current display driver does not support a solid grey color.\",","    highlight           :\"Item(s) selected in a control.\",","    highlighttext       :\"Text of item(s) selected in a control.\",","    inactiveborder      :\"Inactive window border.\",","    inactivecaption     :\"Inactive window caption.\",","    inactivecaptiontext :\"Color of text in an inactive caption.\",","    infobackground      :\"Background color for tooltip controls.\",","    infotext            :\"Text color for tooltip controls.\",","    menu                :\"Menu background.\",","    menutext            :\"Text in menus.\",","    scrollbar           :\"Scroll bar gray area.\",","    threeddarkshadow    :\"The color of the darker (generally outer) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",","    threedface          :\"The face background color for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",","    threedhighlight     :\"The color of the lighter (generally outer) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",","    threedlightshadow   :\"The color of the darker (generally inner) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",","    threedshadow        :\"The color of the lighter (generally inner) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",","    window              :\"Window background.\",","    windowframe         :\"Window frame.\",","    windowtext          :\"Text in windows.\"","};",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Combinator.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Combinator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"Combinator","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":19,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":67}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":26}},"7":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"9":{"start":{"line":33,"column":11},"end":{"line":39,"column":5}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":28}},"11":{"start":{"line":35,"column":11},"end":{"line":39,"column":5}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":39}},"13":{"start":{"line":37,"column":11},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":30}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":40}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":46}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":11}},{"start":{"line":35,"column":11},"end":{"line":35,"column":11}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":11}},{"start":{"line":37,"column":11},"end":{"line":37,"column":11}}]}},"code":["\"use strict\";","","module.exports = Combinator;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a selector combinator (whitespace, +, >)."," * @namespace parserlib.css"," * @class Combinator"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {String} text The text representation of the unit."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function Combinator(text, line, col) {","","    SyntaxUnit.call(this, text, line, col, Parser.COMBINATOR_TYPE);","","    /**","     * The type of modifier.","     * @type String","     * @property type","     */","    this.type = \"unknown\";","","    //pretty simple","    if (/^\\s+$/.test(text)) {","        this.type = \"descendant\";","    } else if (text === \">\") {","        this.type = \"child\";","    } else if (text === \"+\") {","        this.type = \"adjacent-sibling\";","    } else if (text === \"~\") {","        this.type = \"sibling\";","    }","","}","","Combinator.prototype = new SyntaxUnit();","Combinator.prototype.constructor = Combinator;","",""],"l":{"3":1,"5":1,"7":1,"19":1,"21":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"43":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/SyntaxUnit.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/SyntaxUnit.js","s":{"1":1,"2":1,"3":9,"4":9,"5":9,"6":9,"7":1,"8":0,"9":1,"10":0,"11":0},"b":{},"f":{"1":9,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"SyntaxUnit","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":23},"end":{"line":55,"column":39}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":13},"end":{"line":69,"column":24}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":14},"end":{"line":78,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":44,"column":1}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":19}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":21}},"6":{"start":{"line":43,"column":4},"end":{"line":43,"column":21}},"7":{"start":{"line":55,"column":0},"end":{"line":57,"column":2}},"8":{"start":{"line":56,"column":4},"end":{"line":56,"column":72}},"9":{"start":{"line":59,"column":0},"end":{"line":82,"column":2}},"10":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"11":{"start":{"line":79,"column":8},"end":{"line":79,"column":25}}},"branchMap":{},"code":["\"use strict\";","","module.exports = SyntaxUnit;","","/**"," * Base type to represent a single syntactic unit."," * @class SyntaxUnit"," * @namespace parserlib.util"," * @constructor"," * @param {String} text The text of the unit."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function SyntaxUnit(text, line, col, type) {","","","    /**","     * The column of text on which the unit resides.","     * @type int","     * @property col","     */","    this.col = col;","","    /**","     * The line of text on which the unit resides.","     * @type int","     * @property line","     */","    this.line = line;","","    /**","     * The text representation of the unit.","     * @type String","     * @property text","     */","    this.text = text;","","    /**","     * The type of syntax unit.","     * @type int","     * @property type","     */","    this.type = type;","}","","/**"," * Create a new syntax unit based solely on the given token."," * Convenience method for creating a new syntax unit when"," * it represents a single token instead of multiple."," * @param {Object} token The token object to represent."," * @return {parserlib.util.SyntaxUnit} The object representing the token."," * @static"," * @method fromToken"," */","SyntaxUnit.fromToken = function(token) {","    return new SyntaxUnit(token.value, token.startLine, token.startCol);","};","","SyntaxUnit.prototype = {","","    //restore constructor","    constructor: SyntaxUnit,","","    /**","     * Returns the text representation of the unit.","     * @return {String} The text representation of the unit.","     * @method valueOf","     */","    valueOf: function() {","        return this.toString();","    },","","    /**","     * Returns the text representation of the unit.","     * @return {String} The text representation of the unit.","     * @method toString","     */","    toString: function() {","        return this.text;","    }","","};",""],"l":{"3":1,"14":1,"22":9,"29":9,"36":9,"43":9,"55":1,"56":0,"59":1,"70":0,"79":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":1,"811":77,"812":77,"813":1},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0,0,0,0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0,0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[77,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"fnMap":{"1":{"name":"Parser","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":19},"end":{"line":57,"column":30}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":25},"end":{"line":83,"column":36}}},"4":{"name":"(anonymous_4)","line":235,"loc":{"start":{"line":235,"column":22},"end":{"line":235,"column":37}}},"5":{"name":"(anonymous_5)","line":266,"loc":{"start":{"line":266,"column":21},"end":{"line":266,"column":36}}},"6":{"name":"(anonymous_6)","line":308,"loc":{"start":{"line":308,"column":24},"end":{"line":308,"column":39}}},"7":{"name":"(anonymous_7)","line":358,"loc":{"start":{"line":358,"column":23},"end":{"line":358,"column":38}}},"8":{"name":"(anonymous_8)","line":404,"loc":{"start":{"line":404,"column":33},"end":{"line":404,"column":44}}},"9":{"name":"(anonymous_9)","line":439,"loc":{"start":{"line":439,"column":43},"end":{"line":439,"column":54}}},"10":{"name":"(anonymous_10)","line":473,"loc":{"start":{"line":473,"column":45},"end":{"line":473,"column":73}}},"11":{"name":"(anonymous_11)","line":489,"loc":{"start":{"line":489,"column":20},"end":{"line":489,"column":31}}},"12":{"name":"(anonymous_12)","line":550,"loc":{"start":{"line":550,"column":31},"end":{"line":550,"column":42}}},"13":{"name":"(anonymous_13)","line":579,"loc":{"start":{"line":579,"column":26},"end":{"line":579,"column":37}}},"14":{"name":"(anonymous_14)","line":636,"loc":{"start":{"line":636,"column":25},"end":{"line":636,"column":36}}},"15":{"name":"(anonymous_15)","line":653,"loc":{"start":{"line":653,"column":31},"end":{"line":653,"column":42}}},"16":{"name":"(anonymous_16)","line":682,"loc":{"start":{"line":682,"column":28},"end":{"line":682,"column":39}}},"17":{"name":"(anonymous_17)","line":698,"loc":{"start":{"line":698,"column":19},"end":{"line":698,"column":30}}},"18":{"name":"(anonymous_18)","line":755,"loc":{"start":{"line":755,"column":21},"end":{"line":755,"column":32}}},"19":{"name":"(anonymous_19)","line":792,"loc":{"start":{"line":792,"column":25},"end":{"line":792,"column":36}}},"20":{"name":"(anonymous_20)","line":831,"loc":{"start":{"line":831,"column":26},"end":{"line":831,"column":37}}},"21":{"name":"(anonymous_21)","line":848,"loc":{"start":{"line":848,"column":24},"end":{"line":848,"column":35}}},"22":{"name":"(anonymous_22)","line":881,"loc":{"start":{"line":881,"column":23},"end":{"line":881,"column":34}}},"23":{"name":"(anonymous_23)","line":914,"loc":{"start":{"line":914,"column":23},"end":{"line":914,"column":34}}},"24":{"name":"(anonymous_24)","line":992,"loc":{"start":{"line":992,"column":32},"end":{"line":992,"column":43}}},"25":{"name":"(anonymous_25)","line":1012,"loc":{"start":{"line":1012,"column":23},"end":{"line":1012,"column":44}}},"26":{"name":"(anonymous_26)","line":1034,"loc":{"start":{"line":1034,"column":25},"end":{"line":1034,"column":36}}},"27":{"name":"(anonymous_27)","line":1055,"loc":{"start":{"line":1055,"column":29},"end":{"line":1055,"column":40}}},"28":{"name":"(anonymous_28)","line":1072,"loc":{"start":{"line":1072,"column":23},"end":{"line":1072,"column":34}}},"29":{"name":"(anonymous_29)","line":1115,"loc":{"start":{"line":1115,"column":22},"end":{"line":1115,"column":33}}},"30":{"name":"(anonymous_30)","line":1190,"loc":{"start":{"line":1190,"column":30},"end":{"line":1190,"column":41}}},"31":{"name":"(anonymous_31)","line":1220,"loc":{"start":{"line":1220,"column":23},"end":{"line":1220,"column":34}}},"32":{"name":"(anonymous_32)","line":1296,"loc":{"start":{"line":1296,"column":39},"end":{"line":1296,"column":50}}},"33":{"name":"(anonymous_33)","line":1317,"loc":{"start":{"line":1317,"column":24},"end":{"line":1317,"column":35}}},"34":{"name":"(anonymous_34)","line":1382,"loc":{"start":{"line":1382,"column":28},"end":{"line":1382,"column":39}}},"35":{"name":"(anonymous_35)","line":1418,"loc":{"start":{"line":1418,"column":20},"end":{"line":1418,"column":31}}},"36":{"name":"(anonymous_36)","line":1439,"loc":{"start":{"line":1439,"column":27},"end":{"line":1439,"column":38}}},"37":{"name":"(anonymous_37)","line":1459,"loc":{"start":{"line":1459,"column":31},"end":{"line":1459,"column":42}}},"38":{"name":"(anonymous_38)","line":1484,"loc":{"start":{"line":1484,"column":24},"end":{"line":1484,"column":35}}},"39":{"name":"(anonymous_39)","line":1508,"loc":{"start":{"line":1508,"column":21},"end":{"line":1508,"column":32}}},"40":{"name":"(anonymous_40)","line":1562,"loc":{"start":{"line":1562,"column":21},"end":{"line":1562,"column":32}}},"41":{"name":"(anonymous_41)","line":1605,"loc":{"start":{"line":1605,"column":32},"end":{"line":1605,"column":43}}},"42":{"name":"(anonymous_42)","line":1627,"loc":{"start":{"line":1627,"column":25},"end":{"line":1627,"column":36}}},"43":{"name":"(anonymous_43)","line":1651,"loc":{"start":{"line":1651,"column":23},"end":{"line":1651,"column":34}}},"44":{"name":"(anonymous_44)","line":1684,"loc":{"start":{"line":1684,"column":27},"end":{"line":1684,"column":38}}},"45":{"name":"(anonymous_45)","line":1695,"loc":{"start":{"line":1695,"column":24},"end":{"line":1695,"column":35}}},"46":{"name":"(anonymous_46)","line":1735,"loc":{"start":{"line":1735,"column":26},"end":{"line":1735,"column":37}}},"47":{"name":"(anonymous_47)","line":1800,"loc":{"start":{"line":1800,"column":19},"end":{"line":1800,"column":30}}},"48":{"name":"(anonymous_48)","line":1814,"loc":{"start":{"line":1814,"column":19},"end":{"line":1814,"column":40}}},"49":{"name":"(anonymous_49)","line":1861,"loc":{"start":{"line":1861,"column":19},"end":{"line":1861,"column":40}}},"50":{"name":"(anonymous_50)","line":1972,"loc":{"start":{"line":1972,"column":23},"end":{"line":1972,"column":34}}},"51":{"name":"(anonymous_51)","line":2030,"loc":{"start":{"line":2030,"column":26},"end":{"line":2030,"column":37}}},"52":{"name":"(anonymous_52)","line":2080,"loc":{"start":{"line":2080,"column":23},"end":{"line":2080,"column":34}}},"53":{"name":"(anonymous_53)","line":2114,"loc":{"start":{"line":2114,"column":24},"end":{"line":2114,"column":35}}},"54":{"name":"(anonymous_54)","line":2171,"loc":{"start":{"line":2171,"column":28},"end":{"line":2171,"column":39}}},"55":{"name":"(anonymous_55)","line":2185,"loc":{"start":{"line":2185,"column":28},"end":{"line":2185,"column":39}}},"56":{"name":"(anonymous_56)","line":2213,"loc":{"start":{"line":2213,"column":23},"end":{"line":2213,"column":34}}},"57":{"name":"(anonymous_57)","line":2237,"loc":{"start":{"line":2237,"column":18},"end":{"line":2237,"column":29}}},"58":{"name":"(anonymous_58)","line":2277,"loc":{"start":{"line":2277,"column":24},"end":{"line":2277,"column":35}}},"59":{"name":"(anonymous_59)","line":2295,"loc":{"start":{"line":2295,"column":31},"end":{"line":2295,"column":65}}},"60":{"name":"(anonymous_60)","line":2380,"loc":{"start":{"line":2380,"column":29},"end":{"line":2380,"column":40}}},"61":{"name":"(anonymous_61)","line":2400,"loc":{"start":{"line":2400,"column":30},"end":{"line":2400,"column":46}}},"62":{"name":"(anonymous_62)","line":2410,"loc":{"start":{"line":2410,"column":24},"end":{"line":2410,"column":35}}},"63":{"name":"(anonymous_63)","line":2419,"loc":{"start":{"line":2419,"column":31},"end":{"line":2419,"column":57}}},"64":{"name":"(anonymous_64)","line":2427,"loc":{"start":{"line":2427,"column":19},"end":{"line":2427,"column":35}}},"65":{"name":"(anonymous_65)","line":2432,"loc":{"start":{"line":2432,"column":29},"end":{"line":2432,"column":45}}},"66":{"name":"(anonymous_66)","line":2437,"loc":{"start":{"line":2437,"column":29},"end":{"line":2437,"column":45}}},"67":{"name":"(anonymous_67)","line":2454,"loc":{"start":{"line":2454,"column":32},"end":{"line":2454,"column":48}}},"68":{"name":"(anonymous_68)","line":2478,"loc":{"start":{"line":2478,"column":23},"end":{"line":2478,"column":39}}},"69":{"name":"(anonymous_69)","line":2503,"loc":{"start":{"line":2503,"column":27},"end":{"line":2503,"column":43}}},"70":{"name":"(anonymous_70)","line":2529,"loc":{"start":{"line":2529,"column":33},"end":{"line":2529,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"17":{"start":{"line":34,"column":0},"end":{"line":43,"column":1}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":33}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"21":{"start":{"line":46,"column":0},"end":{"line":46,"column":24}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":27}},"23":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}},"24":{"start":{"line":49,"column":0},"end":{"line":49,"column":28}},"25":{"start":{"line":50,"column":0},"end":{"line":50,"column":30}},"26":{"start":{"line":51,"column":0},"end":{"line":51,"column":31}},"27":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}},"28":{"start":{"line":53,"column":0},"end":{"line":53,"column":25}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":30}},"30":{"start":{"line":55,"column":0},"end":{"line":55,"column":34}},"31":{"start":{"line":57,"column":0},"end":{"line":2544,"column":4}},"32":{"start":{"line":59,"column":4},"end":{"line":2534,"column":10}},"33":{"start":{"line":94,"column":16},"end":{"line":97,"column":23}},"34":{"start":{"line":99,"column":16},"end":{"line":99,"column":45}},"35":{"start":{"line":102,"column":16},"end":{"line":102,"column":32}},"36":{"start":{"line":104,"column":16},"end":{"line":104,"column":34}},"37":{"start":{"line":107,"column":16},"end":{"line":110,"column":17}},"38":{"start":{"line":108,"column":20},"end":{"line":108,"column":35}},"39":{"start":{"line":109,"column":20},"end":{"line":109,"column":38}},"40":{"start":{"line":113,"column":16},"end":{"line":116,"column":17}},"41":{"start":{"line":114,"column":20},"end":{"line":114,"column":38}},"42":{"start":{"line":115,"column":20},"end":{"line":115,"column":38}},"43":{"start":{"line":119,"column":16},"end":{"line":119,"column":40}},"44":{"start":{"line":122,"column":16},"end":{"line":226,"column":17}},"45":{"start":{"line":124,"column":20},"end":{"line":223,"column":21}},"46":{"start":{"line":126,"column":24},"end":{"line":210,"column":25}},"47":{"start":{"line":128,"column":32},"end":{"line":128,"column":46}},"48":{"start":{"line":129,"column":32},"end":{"line":129,"column":50}},"49":{"start":{"line":130,"column":32},"end":{"line":130,"column":38}},"50":{"start":{"line":132,"column":32},"end":{"line":132,"column":45}},"51":{"start":{"line":133,"column":32},"end":{"line":133,"column":50}},"52":{"start":{"line":134,"column":32},"end":{"line":134,"column":38}},"53":{"start":{"line":136,"column":32},"end":{"line":136,"column":50}},"54":{"start":{"line":137,"column":32},"end":{"line":137,"column":50}},"55":{"start":{"line":138,"column":32},"end":{"line":138,"column":38}},"56":{"start":{"line":140,"column":32},"end":{"line":140,"column":50}},"57":{"start":{"line":141,"column":32},"end":{"line":141,"column":50}},"58":{"start":{"line":142,"column":32},"end":{"line":142,"column":38}},"59":{"start":{"line":144,"column":32},"end":{"line":144,"column":49}},"60":{"start":{"line":145,"column":32},"end":{"line":145,"column":50}},"61":{"start":{"line":146,"column":32},"end":{"line":146,"column":38}},"62":{"start":{"line":148,"column":32},"end":{"line":148,"column":49}},"63":{"start":{"line":149,"column":32},"end":{"line":149,"column":50}},"64":{"start":{"line":150,"column":32},"end":{"line":150,"column":38}},"65":{"start":{"line":152,"column":32},"end":{"line":152,"column":49}},"66":{"start":{"line":153,"column":32},"end":{"line":153,"column":50}},"67":{"start":{"line":154,"column":32},"end":{"line":154,"column":38}},"68":{"start":{"line":156,"column":32},"end":{"line":156,"column":50}},"69":{"start":{"line":157,"column":32},"end":{"line":182,"column":33}},"70":{"start":{"line":160,"column":36},"end":{"line":166,"column":39}},"71":{"start":{"line":169,"column":36},"end":{"line":169,"column":44}},"72":{"start":{"line":170,"column":36},"end":{"line":172,"column":37}},"73":{"start":{"line":171,"column":40},"end":{"line":171,"column":48}},"74":{"start":{"line":174,"column":36},"end":{"line":177,"column":37}},"75":{"start":{"line":175,"column":40},"end":{"line":175,"column":77}},"76":{"start":{"line":176,"column":40},"end":{"line":176,"column":48}},"77":{"start":{"line":181,"column":36},"end":{"line":181,"column":134}},"78":{"start":{"line":183,"column":32},"end":{"line":183,"column":38}},"79":{"start":{"line":185,"column":32},"end":{"line":185,"column":55}},"80":{"start":{"line":186,"column":32},"end":{"line":186,"column":38}},"81":{"start":{"line":188,"column":32},"end":{"line":209,"column":33}},"82":{"start":{"line":191,"column":36},"end":{"line":207,"column":37}},"83":{"start":{"line":193,"column":44},"end":{"line":193,"column":70}},"84":{"start":{"line":194,"column":44},"end":{"line":194,"column":65}},"85":{"start":{"line":195,"column":44},"end":{"line":195,"column":129}},"86":{"start":{"line":197,"column":44},"end":{"line":197,"column":70}},"87":{"start":{"line":198,"column":44},"end":{"line":198,"column":64}},"88":{"start":{"line":199,"column":44},"end":{"line":199,"column":128}},"89":{"start":{"line":201,"column":44},"end":{"line":201,"column":70}},"90":{"start":{"line":202,"column":44},"end":{"line":202,"column":67}},"91":{"start":{"line":203,"column":44},"end":{"line":203,"column":131}},"92":{"start":{"line":205,"column":44},"end":{"line":205,"column":62}},"93":{"start":{"line":206,"column":44},"end":{"line":206,"column":87}},"94":{"start":{"line":212,"column":24},"end":{"line":222,"column":25}},"95":{"start":{"line":213,"column":28},"end":{"line":219,"column":31}},"96":{"start":{"line":221,"column":28},"end":{"line":221,"column":37}},"97":{"start":{"line":225,"column":20},"end":{"line":225,"column":44}},"98":{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},"99":{"start":{"line":229,"column":20},"end":{"line":229,"column":63}},"100":{"start":{"line":232,"column":16},"end":{"line":232,"column":43}},"101":{"start":{"line":236,"column":16},"end":{"line":240,"column":24}},"102":{"start":{"line":242,"column":16},"end":{"line":263,"column":17}},"103":{"start":{"line":243,"column":20},"end":{"line":243,"column":57}},"104":{"start":{"line":244,"column":20},"end":{"line":244,"column":55}},"105":{"start":{"line":246,"column":20},"end":{"line":246,"column":43}},"106":{"start":{"line":247,"column":20},"end":{"line":247,"column":57}},"107":{"start":{"line":249,"column":20},"end":{"line":249,"column":48}},"108":{"start":{"line":250,"column":20},"end":{"line":250,"column":42}},"109":{"start":{"line":252,"column":20},"end":{"line":252,"column":43}},"110":{"start":{"line":253,"column":20},"end":{"line":253,"column":60}},"111":{"start":{"line":255,"column":20},"end":{"line":262,"column":21}},"112":{"start":{"line":256,"column":24},"end":{"line":261,"column":27}},"113":{"start":{"line":273,"column":16},"end":{"line":276,"column":37}},"114":{"start":{"line":279,"column":16},"end":{"line":279,"column":57}},"115":{"start":{"line":280,"column":16},"end":{"line":280,"column":50}},"116":{"start":{"line":281,"column":16},"end":{"line":281,"column":39}},"117":{"start":{"line":283,"column":16},"end":{"line":283,"column":67}},"118":{"start":{"line":286,"column":16},"end":{"line":286,"column":100}},"119":{"start":{"line":288,"column":16},"end":{"line":288,"column":39}},"120":{"start":{"line":290,"column":16},"end":{"line":290,"column":53}},"121":{"start":{"line":293,"column":16},"end":{"line":293,"column":56}},"122":{"start":{"line":294,"column":16},"end":{"line":294,"column":39}},"123":{"start":{"line":296,"column":16},"end":{"line":304,"column":17}},"124":{"start":{"line":297,"column":20},"end":{"line":303,"column":23}},"125":{"start":{"line":314,"column":16},"end":{"line":318,"column":24}},"126":{"start":{"line":321,"column":16},"end":{"line":321,"column":60}},"127":{"start":{"line":322,"column":16},"end":{"line":322,"column":53}},"128":{"start":{"line":323,"column":16},"end":{"line":323,"column":51}},"129":{"start":{"line":324,"column":16},"end":{"line":324,"column":39}},"130":{"start":{"line":327,"column":16},"end":{"line":330,"column":17}},"131":{"start":{"line":328,"column":20},"end":{"line":328,"column":55}},"132":{"start":{"line":329,"column":20},"end":{"line":329,"column":43}},"133":{"start":{"line":332,"column":16},"end":{"line":332,"column":67}},"134":{"start":{"line":338,"column":16},"end":{"line":338,"column":95}},"135":{"start":{"line":340,"column":16},"end":{"line":340,"column":39}},"136":{"start":{"line":343,"column":16},"end":{"line":343,"column":56}},"137":{"start":{"line":344,"column":16},"end":{"line":344,"column":39}},"138":{"start":{"line":346,"column":16},"end":{"line":354,"column":17}},"139":{"start":{"line":347,"column":20},"end":{"line":353,"column":23}},"140":{"start":{"line":364,"column":16},"end":{"line":366,"column":24}},"141":{"start":{"line":368,"column":16},"end":{"line":401,"column":17}},"142":{"start":{"line":369,"column":20},"end":{"line":369,"column":57}},"143":{"start":{"line":370,"column":20},"end":{"line":370,"column":55}},"144":{"start":{"line":372,"column":20},"end":{"line":372,"column":43}},"145":{"start":{"line":373,"column":20},"end":{"line":373,"column":47}},"146":{"start":{"line":374,"column":20},"end":{"line":374,"column":43}},"147":{"start":{"line":376,"column":20},"end":{"line":376,"column":57}},"148":{"start":{"line":377,"column":20},"end":{"line":377,"column":43}},"149":{"start":{"line":379,"column":20},"end":{"line":385,"column":21}},"150":{"start":{"line":380,"column":24},"end":{"line":384,"column":27}},"151":{"start":{"line":387,"column":20},"end":{"line":391,"column":21}},"152":{"start":{"line":388,"column":24},"end":{"line":390,"column":25}},"153":{"start":{"line":389,"column":28},"end":{"line":389,"column":34}},"154":{"start":{"line":393,"column":20},"end":{"line":393,"column":57}},"155":{"start":{"line":394,"column":20},"end":{"line":394,"column":43}},"156":{"start":{"line":396,"column":20},"end":{"line":400,"column":23}},"157":{"start":{"line":411,"column":16},"end":{"line":412,"column":26}},"158":{"start":{"line":414,"column":16},"end":{"line":436,"column":17}},"159":{"start":{"line":415,"column":20},"end":{"line":415,"column":68}},"160":{"start":{"line":417,"column":20},"end":{"line":422,"column":21}},"161":{"start":{"line":418,"column":24},"end":{"line":418,"column":56}},"162":{"start":{"line":419,"column":24},"end":{"line":419,"column":61}},"163":{"start":{"line":421,"column":24},"end":{"line":421,"column":44}},"164":{"start":{"line":424,"column":20},"end":{"line":424,"column":57}},"165":{"start":{"line":425,"column":20},"end":{"line":425,"column":43}},"166":{"start":{"line":427,"column":20},"end":{"line":435,"column":21}},"167":{"start":{"line":428,"column":24},"end":{"line":428,"column":70}},"168":{"start":{"line":429,"column":24},"end":{"line":434,"column":25}},"169":{"start":{"line":430,"column":28},"end":{"line":430,"column":64}},"170":{"start":{"line":431,"column":28},"end":{"line":431,"column":51}},"171":{"start":{"line":432,"column":28},"end":{"line":432,"column":65}},"172":{"start":{"line":433,"column":28},"end":{"line":433,"column":51}},"173":{"start":{"line":446,"column":16},"end":{"line":447,"column":26}},"174":{"start":{"line":449,"column":16},"end":{"line":470,"column":17}},"175":{"start":{"line":450,"column":20},"end":{"line":450,"column":43}},"176":{"start":{"line":451,"column":20},"end":{"line":467,"column":21}},"177":{"start":{"line":453,"column":24},"end":{"line":453,"column":72}},"178":{"start":{"line":454,"column":24},"end":{"line":462,"column":25}},"179":{"start":{"line":455,"column":28},"end":{"line":455,"column":51}},"180":{"start":{"line":456,"column":28},"end":{"line":456,"column":55}},"181":{"start":{"line":457,"column":28},"end":{"line":457,"column":51}},"182":{"start":{"line":458,"column":28},"end":{"line":458,"column":65}},"183":{"start":{"line":460,"column":28},"end":{"line":460,"column":48}},"184":{"start":{"line":461,"column":28},"end":{"line":461,"column":72}},"185":{"start":{"line":464,"column":24},"end":{"line":464,"column":51}},"186":{"start":{"line":465,"column":24},"end":{"line":465,"column":47}},"187":{"start":{"line":466,"column":24},"end":{"line":466,"column":61}},"188":{"start":{"line":469,"column":20},"end":{"line":469,"column":59}},"189":{"start":{"line":479,"column":16},"end":{"line":479,"column":52}},"190":{"start":{"line":481,"column":16},"end":{"line":483,"column":17}},"191":{"start":{"line":482,"column":20},"end":{"line":482,"column":57}},"192":{"start":{"line":484,"column":16},"end":{"line":484,"column":39}},"193":{"start":{"line":485,"column":16},"end":{"line":485,"column":36}},"194":{"start":{"line":486,"column":16},"end":{"line":486,"column":53}},"195":{"start":{"line":495,"column":16},"end":{"line":498,"column":30}},"196":{"start":{"line":501,"column":16},"end":{"line":501,"column":56}},"197":{"start":{"line":502,"column":16},"end":{"line":502,"column":53}},"198":{"start":{"line":503,"column":16},"end":{"line":503,"column":51}},"199":{"start":{"line":505,"column":16},"end":{"line":505,"column":39}},"200":{"start":{"line":507,"column":16},"end":{"line":507,"column":53}},"201":{"start":{"line":509,"column":16},"end":{"line":509,"column":53}},"202":{"start":{"line":510,"column":16},"end":{"line":510,"column":39}},"203":{"start":{"line":512,"column":16},"end":{"line":517,"column":19}},"204":{"start":{"line":519,"column":16},"end":{"line":535,"column":17}},"205":{"start":{"line":520,"column":20},"end":{"line":534,"column":21}},"206":{"start":{"line":521,"column":24},"end":{"line":521,"column":37}},"207":{"start":{"line":522,"column":27},"end":{"line":534,"column":21}},"208":{"start":{"line":523,"column":24},"end":{"line":523,"column":42}},"209":{"start":{"line":524,"column":27},"end":{"line":534,"column":21}},"210":{"start":{"line":525,"column":24},"end":{"line":525,"column":41}},"211":{"start":{"line":526,"column":27},"end":{"line":534,"column":21}},"212":{"start":{"line":527,"column":24},"end":{"line":527,"column":41}},"213":{"start":{"line":528,"column":27},"end":{"line":534,"column":21}},"214":{"start":{"line":529,"column":24},"end":{"line":529,"column":41}},"215":{"start":{"line":530,"column":27},"end":{"line":534,"column":21}},"216":{"start":{"line":531,"column":24},"end":{"line":531,"column":38}},"217":{"start":{"line":532,"column":27},"end":{"line":534,"column":21}},"218":{"start":{"line":533,"column":24},"end":{"line":533,"column":30}},"219":{"start":{"line":537,"column":16},"end":{"line":537,"column":53}},"220":{"start":{"line":538,"column":16},"end":{"line":538,"column":39}},"221":{"start":{"line":540,"column":16},"end":{"line":545,"column":19}},"222":{"start":{"line":556,"column":16},"end":{"line":557,"column":37}},"223":{"start":{"line":560,"column":16},"end":{"line":560,"column":39}},"224":{"start":{"line":562,"column":16},"end":{"line":564,"column":17}},"225":{"start":{"line":563,"column":20},"end":{"line":563,"column":56}},"226":{"start":{"line":566,"column":16},"end":{"line":569,"column":17}},"227":{"start":{"line":567,"column":20},"end":{"line":567,"column":43}},"228":{"start":{"line":568,"column":20},"end":{"line":568,"column":56}},"229":{"start":{"line":571,"column":16},"end":{"line":571,"column":33}},"230":{"start":{"line":586,"column":16},"end":{"line":590,"column":37}},"231":{"start":{"line":592,"column":16},"end":{"line":602,"column":17}},"232":{"start":{"line":593,"column":20},"end":{"line":593,"column":68}},"233":{"start":{"line":596,"column":20},"end":{"line":601,"column":21}},"234":{"start":{"line":597,"column":24},"end":{"line":597,"column":44}},"235":{"start":{"line":598,"column":24},"end":{"line":598,"column":37}},"236":{"start":{"line":600,"column":24},"end":{"line":600,"column":52}},"237":{"start":{"line":604,"column":16},"end":{"line":604,"column":39}},"238":{"start":{"line":606,"column":16},"end":{"line":616,"column":17}},"239":{"start":{"line":607,"column":20},"end":{"line":607,"column":46}},"240":{"start":{"line":608,"column":20},"end":{"line":610,"column":21}},"241":{"start":{"line":609,"column":24},"end":{"line":609,"column":52}},"242":{"start":{"line":611,"column":23},"end":{"line":616,"column":17}},"243":{"start":{"line":612,"column":20},"end":{"line":614,"column":21}},"244":{"start":{"line":613,"column":24},"end":{"line":613,"column":50}},"245":{"start":{"line":615,"column":20},"end":{"line":615,"column":63}},"246":{"start":{"line":618,"column":16},"end":{"line":630,"column":17}},"247":{"start":{"line":619,"column":20},"end":{"line":619,"column":32}},"248":{"start":{"line":621,"column":20},"end":{"line":621,"column":43}},"249":{"start":{"line":622,"column":20},"end":{"line":629,"column":21}},"250":{"start":{"line":623,"column":24},"end":{"line":625,"column":25}},"251":{"start":{"line":624,"column":28},"end":{"line":624,"column":71}},"252":{"start":{"line":627,"column":24},"end":{"line":627,"column":47}},"253":{"start":{"line":628,"column":24},"end":{"line":628,"column":67}},"254":{"start":{"line":632,"column":16},"end":{"line":632,"column":97}},"255":{"start":{"line":642,"column":16},"end":{"line":642,"column":45}},"256":{"start":{"line":659,"column":16},"end":{"line":662,"column":39}},"257":{"start":{"line":664,"column":16},"end":{"line":664,"column":53}},"258":{"start":{"line":666,"column":16},"end":{"line":666,"column":48}},"259":{"start":{"line":667,"column":16},"end":{"line":667,"column":39}},"260":{"start":{"line":669,"column":16},"end":{"line":673,"column":17}},"261":{"start":{"line":670,"column":20},"end":{"line":670,"column":43}},"262":{"start":{"line":671,"column":20},"end":{"line":671,"column":46}},"263":{"start":{"line":672,"column":20},"end":{"line":672,"column":52}},"264":{"start":{"line":675,"column":16},"end":{"line":675,"column":53}},"265":{"start":{"line":676,"column":16},"end":{"line":676,"column":39}},"266":{"start":{"line":678,"column":16},"end":{"line":678,"column":130}},"267":{"start":{"line":688,"column":16},"end":{"line":688,"column":52}},"268":{"start":{"line":690,"column":16},"end":{"line":690,"column":39}},"269":{"start":{"line":692,"column":16},"end":{"line":692,"column":52}},"270":{"start":{"line":694,"column":16},"end":{"line":694,"column":65}},"271":{"start":{"line":705,"column":16},"end":{"line":709,"column":39}},"272":{"start":{"line":712,"column":16},"end":{"line":712,"column":55}},"273":{"start":{"line":713,"column":16},"end":{"line":713,"column":53}},"274":{"start":{"line":714,"column":16},"end":{"line":714,"column":51}},"275":{"start":{"line":716,"column":16},"end":{"line":716,"column":39}},"276":{"start":{"line":718,"column":16},"end":{"line":725,"column":17}},"277":{"start":{"line":719,"column":20},"end":{"line":719,"column":59}},"278":{"start":{"line":722,"column":20},"end":{"line":724,"column":21}},"279":{"start":{"line":723,"column":24},"end":{"line":723,"column":67}},"280":{"start":{"line":728,"column":16},"end":{"line":730,"column":17}},"281":{"start":{"line":729,"column":20},"end":{"line":729,"column":53}},"282":{"start":{"line":732,"column":16},"end":{"line":732,"column":39}},"283":{"start":{"line":734,"column":16},"end":{"line":740,"column":19}},"284":{"start":{"line":742,"column":16},"end":{"line":742,"column":51}},"285":{"start":{"line":744,"column":16},"end":{"line":750,"column":19}},"286":{"start":{"line":761,"column":16},"end":{"line":764,"column":53}},"287":{"start":{"line":766,"column":16},"end":{"line":788,"column":17}},"288":{"start":{"line":767,"column":20},"end":{"line":767,"column":57}},"289":{"start":{"line":768,"column":20},"end":{"line":768,"column":55}},"290":{"start":{"line":770,"column":20},"end":{"line":775,"column":23}},"291":{"start":{"line":777,"column":20},"end":{"line":777,"column":49}},"292":{"start":{"line":779,"column":20},"end":{"line":784,"column":23}},"293":{"start":{"line":785,"column":20},"end":{"line":785,"column":32}},"294":{"start":{"line":787,"column":20},"end":{"line":787,"column":33}},"295":{"start":{"line":815,"column":16},"end":{"line":815,"column":52}},"296":{"start":{"line":817,"column":16},"end":{"line":827,"column":17}},"297":{"start":{"line":824,"column":20},"end":{"line":824,"column":69}},"298":{"start":{"line":826,"column":20},"end":{"line":826,"column":32}},"299":{"start":{"line":838,"column":16},"end":{"line":838,"column":52}},"300":{"start":{"line":840,"column":16},"end":{"line":840,"column":52}},"301":{"start":{"line":841,"column":16},"end":{"line":841,"column":52}},"302":{"start":{"line":845,"column":16},"end":{"line":845,"column":49}},"303":{"start":{"line":855,"column":16},"end":{"line":857,"column":24}},"304":{"start":{"line":860,"column":16},"end":{"line":860,"column":60}},"305":{"start":{"line":861,"column":16},"end":{"line":861,"column":53}},"306":{"start":{"line":862,"column":16},"end":{"line":862,"column":51}},"307":{"start":{"line":864,"column":16},"end":{"line":864,"column":39}},"308":{"start":{"line":866,"column":16},"end":{"line":870,"column":19}},"309":{"start":{"line":872,"column":16},"end":{"line":872,"column":45}},"310":{"start":{"line":874,"column":16},"end":{"line":878,"column":19}},"311":{"start":{"line":888,"column":16},"end":{"line":890,"column":24}},"312":{"start":{"line":892,"column":16},"end":{"line":892,"column":59}},"313":{"start":{"line":893,"column":16},"end":{"line":893,"column":53}},"314":{"start":{"line":894,"column":16},"end":{"line":894,"column":51}},"315":{"start":{"line":896,"column":16},"end":{"line":896,"column":39}},"316":{"start":{"line":898,"column":16},"end":{"line":902,"column":19}},"317":{"start":{"line":904,"column":16},"end":{"line":904,"column":45}},"318":{"start":{"line":906,"column":16},"end":{"line":910,"column":19}},"319":{"start":{"line":923,"column":16},"end":{"line":926,"column":32}},"320":{"start":{"line":928,"column":16},"end":{"line":928,"column":59}},"321":{"start":{"line":929,"column":16},"end":{"line":929,"column":44}},"322":{"start":{"line":930,"column":16},"end":{"line":932,"column":17}},"323":{"start":{"line":931,"column":20},"end":{"line":931,"column":39}},"324":{"start":{"line":934,"column":16},"end":{"line":934,"column":39}},"325":{"start":{"line":935,"column":16},"end":{"line":935,"column":58}},"326":{"start":{"line":937,"column":16},"end":{"line":940,"column":17}},"327":{"start":{"line":938,"column":20},"end":{"line":938,"column":43}},"328":{"start":{"line":939,"column":20},"end":{"line":939,"column":62}},"329":{"start":{"line":942,"column":16},"end":{"line":942,"column":53}},"330":{"start":{"line":943,"column":16},"end":{"line":943,"column":39}},"331":{"start":{"line":945,"column":16},"end":{"line":951,"column":19}},"332":{"start":{"line":953,"column":16},"end":{"line":953,"column":30}},"333":{"start":{"line":954,"column":16},"end":{"line":977,"column":17}},"334":{"start":{"line":955,"column":20},"end":{"line":976,"column":21}},"335":{"start":{"line":957,"column":28},"end":{"line":957,"column":41}},"336":{"start":{"line":958,"column":28},"end":{"line":958,"column":34}},"337":{"start":{"line":960,"column":28},"end":{"line":960,"column":46}},"338":{"start":{"line":961,"column":28},"end":{"line":961,"column":34}},"339":{"start":{"line":963,"column":28},"end":{"line":963,"column":45}},"340":{"start":{"line":964,"column":28},"end":{"line":964,"column":34}},"341":{"start":{"line":966,"column":28},"end":{"line":966,"column":42}},"342":{"start":{"line":967,"column":28},"end":{"line":967,"column":34}},"343":{"start":{"line":969,"column":28},"end":{"line":969,"column":46}},"344":{"start":{"line":970,"column":28},"end":{"line":970,"column":34}},"345":{"start":{"line":972,"column":28},"end":{"line":972,"column":45}},"346":{"start":{"line":973,"column":28},"end":{"line":973,"column":34}},"347":{"start":{"line":975,"column":28},"end":{"line":975,"column":58}},"348":{"start":{"line":979,"column":16},"end":{"line":979,"column":53}},"349":{"start":{"line":980,"column":16},"end":{"line":980,"column":44}},"350":{"start":{"line":981,"column":16},"end":{"line":981,"column":39}},"351":{"start":{"line":983,"column":16},"end":{"line":989,"column":19}},"352":{"start":{"line":999,"column":16},"end":{"line":1000,"column":26}},"353":{"start":{"line":1002,"column":16},"end":{"line":1007,"column":17}},"354":{"start":{"line":1003,"column":20},"end":{"line":1003,"column":54}},"355":{"start":{"line":1004,"column":20},"end":{"line":1004,"column":43}},"356":{"start":{"line":1006,"column":20},"end":{"line":1006,"column":45}},"357":{"start":{"line":1009,"column":16},"end":{"line":1009,"column":29}},"358":{"start":{"line":1022,"column":16},"end":{"line":1023,"column":39}},"359":{"start":{"line":1025,"column":16},"end":{"line":1029,"column":17}},"360":{"start":{"line":1027,"column":20},"end":{"line":1027,"column":49}},"361":{"start":{"line":1028,"column":20},"end":{"line":1028,"column":43}},"362":{"start":{"line":1030,"column":16},"end":{"line":1030,"column":73}},"363":{"start":{"line":1042,"column":16},"end":{"line":1044,"column":26}},"364":{"start":{"line":1046,"column":16},"end":{"line":1050,"column":17}},"365":{"start":{"line":1047,"column":20},"end":{"line":1047,"column":48}},"366":{"start":{"line":1048,"column":20},"end":{"line":1048,"column":89}},"367":{"start":{"line":1049,"column":20},"end":{"line":1049,"column":43}},"368":{"start":{"line":1052,"column":16},"end":{"line":1052,"column":29}},"369":{"start":{"line":1063,"column":16},"end":{"line":1063,"column":52}},"370":{"start":{"line":1065,"column":16},"end":{"line":1069,"column":17}},"371":{"start":{"line":1066,"column":20},"end":{"line":1066,"column":53}},"372":{"start":{"line":1068,"column":20},"end":{"line":1068,"column":32}},"373":{"start":{"line":1080,"column":16},"end":{"line":1086,"column":24}},"374":{"start":{"line":1089,"column":16},"end":{"line":1095,"column":17}},"375":{"start":{"line":1090,"column":20},"end":{"line":1090,"column":38}},"376":{"start":{"line":1091,"column":20},"end":{"line":1091,"column":48}},"377":{"start":{"line":1092,"column":20},"end":{"line":1092,"column":39}},"378":{"start":{"line":1093,"column":20},"end":{"line":1093,"column":43}},"379":{"start":{"line":1094,"column":20},"end":{"line":1094,"column":41}},"380":{"start":{"line":1097,"column":16},"end":{"line":1109,"column":17}},"381":{"start":{"line":1098,"column":20},"end":{"line":1098,"column":48}},"382":{"start":{"line":1099,"column":20},"end":{"line":1099,"column":45}},"383":{"start":{"line":1102,"column":20},"end":{"line":1105,"column":21}},"384":{"start":{"line":1103,"column":24},"end":{"line":1103,"column":35}},"385":{"start":{"line":1104,"column":24},"end":{"line":1104,"column":61}},"386":{"start":{"line":1107,"column":20},"end":{"line":1107,"column":111}},"387":{"start":{"line":1108,"column":20},"end":{"line":1108,"column":43}},"388":{"start":{"line":1111,"column":16},"end":{"line":1111,"column":29}},"389":{"start":{"line":1123,"column":16},"end":{"line":1125,"column":30}},"390":{"start":{"line":1132,"column":16},"end":{"line":1162,"column":17}},"391":{"start":{"line":1133,"column":20},"end":{"line":1133,"column":56}},"392":{"start":{"line":1135,"column":20},"end":{"line":1158,"column":21}},"393":{"start":{"line":1138,"column":24},"end":{"line":1144,"column":27}},"394":{"start":{"line":1147,"column":24},"end":{"line":1147,"column":66}},"395":{"start":{"line":1148,"column":24},"end":{"line":1153,"column":25}},"396":{"start":{"line":1152,"column":28},"end":{"line":1152,"column":37}},"397":{"start":{"line":1157,"column":24},"end":{"line":1157,"column":33}},"398":{"start":{"line":1161,"column":20},"end":{"line":1161,"column":32}},"399":{"start":{"line":1165,"column":16},"end":{"line":1183,"column":17}},"400":{"start":{"line":1167,"column":20},"end":{"line":1172,"column":23}},"401":{"start":{"line":1174,"column":20},"end":{"line":1174,"column":49}},"402":{"start":{"line":1176,"column":20},"end":{"line":1181,"column":23}},"403":{"start":{"line":1185,"column":16},"end":{"line":1185,"column":33}},"404":{"start":{"line":1197,"column":16},"end":{"line":1199,"column":29}},"405":{"start":{"line":1201,"column":16},"end":{"line":1201,"column":44}},"406":{"start":{"line":1202,"column":16},"end":{"line":1214,"column":17}},"407":{"start":{"line":1204,"column":20},"end":{"line":1204,"column":45}},"408":{"start":{"line":1205,"column":20},"end":{"line":1213,"column":21}},"409":{"start":{"line":1206,"column":24},"end":{"line":1206,"column":47}},"410":{"start":{"line":1207,"column":24},"end":{"line":1207,"column":52}},"411":{"start":{"line":1208,"column":24},"end":{"line":1212,"column":25}},"412":{"start":{"line":1209,"column":28},"end":{"line":1209,"column":53}},"413":{"start":{"line":1211,"column":28},"end":{"line":1211,"column":69}},"414":{"start":{"line":1216,"column":16},"end":{"line":1216,"column":59}},"415":{"start":{"line":1227,"column":16},"end":{"line":1231,"column":39}},"416":{"start":{"line":1234,"column":16},"end":{"line":1234,"column":64}},"417":{"start":{"line":1235,"column":16},"end":{"line":1237,"column":17}},"418":{"start":{"line":1236,"column":20},"end":{"line":1236,"column":32}},"419":{"start":{"line":1239,"column":16},"end":{"line":1239,"column":44}},"420":{"start":{"line":1241,"column":16},"end":{"line":1290,"column":31}},"421":{"start":{"line":1244,"column":20},"end":{"line":1244,"column":52}},"422":{"start":{"line":1246,"column":20},"end":{"line":1289,"column":21}},"423":{"start":{"line":1247,"column":24},"end":{"line":1247,"column":50}},"424":{"start":{"line":1248,"column":24},"end":{"line":1248,"column":72}},"425":{"start":{"line":1251,"column":24},"end":{"line":1257,"column":25}},"426":{"start":{"line":1252,"column":28},"end":{"line":1252,"column":69}},"427":{"start":{"line":1256,"column":28},"end":{"line":1256,"column":56}},"428":{"start":{"line":1261,"column":24},"end":{"line":1287,"column":25}},"429":{"start":{"line":1264,"column":28},"end":{"line":1264,"column":136}},"430":{"start":{"line":1267,"column":28},"end":{"line":1267,"column":60}},"431":{"start":{"line":1270,"column":28},"end":{"line":1270,"column":76}},"432":{"start":{"line":1271,"column":28},"end":{"line":1284,"column":29}},"433":{"start":{"line":1272,"column":32},"end":{"line":1274,"column":33}},"434":{"start":{"line":1273,"column":36},"end":{"line":1273,"column":77}},"435":{"start":{"line":1277,"column":32},"end":{"line":1281,"column":33}},"436":{"start":{"line":1278,"column":36},"end":{"line":1278,"column":62}},"437":{"start":{"line":1280,"column":36},"end":{"line":1280,"column":54}},"438":{"start":{"line":1283,"column":32},"end":{"line":1283,"column":60}},"439":{"start":{"line":1286,"column":28},"end":{"line":1286,"column":34}},"440":{"start":{"line":1292,"column":16},"end":{"line":1292,"column":81}},"441":{"start":{"line":1305,"column":16},"end":{"line":1331,"column":24}},"442":{"start":{"line":1318,"column":28},"end":{"line":1320,"column":41}},"443":{"start":{"line":1335,"column":16},"end":{"line":1335,"column":51}},"444":{"start":{"line":1336,"column":16},"end":{"line":1336,"column":49}},"445":{"start":{"line":1338,"column":16},"end":{"line":1338,"column":52}},"446":{"start":{"line":1339,"column":16},"end":{"line":1341,"column":17}},"447":{"start":{"line":1340,"column":20},"end":{"line":1340,"column":52}},"448":{"start":{"line":1343,"column":16},"end":{"line":1345,"column":17}},"449":{"start":{"line":1344,"column":20},"end":{"line":1344,"column":48}},"450":{"start":{"line":1347,"column":16},"end":{"line":1373,"column":17}},"451":{"start":{"line":1350,"column":20},"end":{"line":1352,"column":21}},"452":{"start":{"line":1351,"column":24},"end":{"line":1351,"column":30}},"453":{"start":{"line":1355,"column":20},"end":{"line":1357,"column":21}},"454":{"start":{"line":1356,"column":24},"end":{"line":1356,"column":63}},"455":{"start":{"line":1359,"column":20},"end":{"line":1372,"column":21}},"456":{"start":{"line":1362,"column":24},"end":{"line":1366,"column":25}},"457":{"start":{"line":1363,"column":28},"end":{"line":1363,"column":40}},"458":{"start":{"line":1365,"column":28},"end":{"line":1365,"column":34}},"459":{"start":{"line":1368,"column":24},"end":{"line":1368,"column":30}},"460":{"start":{"line":1369,"column":24},"end":{"line":1369,"column":50}},"461":{"start":{"line":1370,"column":24},"end":{"line":1370,"column":61}},"462":{"start":{"line":1371,"column":24},"end":{"line":1371,"column":41}},"463":{"start":{"line":1376,"column":16},"end":{"line":1378,"column":29}},"464":{"start":{"line":1389,"column":16},"end":{"line":1391,"column":55}},"465":{"start":{"line":1393,"column":16},"end":{"line":1414,"column":17}},"466":{"start":{"line":1400,"column":20},"end":{"line":1405,"column":21}},"467":{"start":{"line":1401,"column":24},"end":{"line":1401,"column":44}},"468":{"start":{"line":1402,"column":24},"end":{"line":1404,"column":25}},"469":{"start":{"line":1403,"column":28},"end":{"line":1403,"column":48}},"470":{"start":{"line":1407,"column":20},"end":{"line":1407,"column":32}},"471":{"start":{"line":1409,"column":20},"end":{"line":1412,"column":21}},"472":{"start":{"line":1410,"column":24},"end":{"line":1410,"column":65}},"473":{"start":{"line":1411,"column":24},"end":{"line":1411,"column":53}},"474":{"start":{"line":1413,"column":20},"end":{"line":1413,"column":39}},"475":{"start":{"line":1425,"column":16},"end":{"line":1426,"column":26}},"476":{"start":{"line":1428,"column":16},"end":{"line":1434,"column":17}},"477":{"start":{"line":1429,"column":20},"end":{"line":1429,"column":56}},"478":{"start":{"line":1430,"column":20},"end":{"line":1430,"column":48}},"479":{"start":{"line":1431,"column":20},"end":{"line":1431,"column":112}},"480":{"start":{"line":1433,"column":20},"end":{"line":1433,"column":32}},"481":{"start":{"line":1446,"column":16},"end":{"line":1447,"column":26}},"482":{"start":{"line":1449,"column":16},"end":{"line":1455,"column":17}},"483":{"start":{"line":1450,"column":20},"end":{"line":1450,"column":48}},"484":{"start":{"line":1451,"column":20},"end":{"line":1451,"column":108}},"485":{"start":{"line":1454,"column":20},"end":{"line":1454,"column":32}},"486":{"start":{"line":1465,"column":16},"end":{"line":1466,"column":37}},"487":{"start":{"line":1469,"column":16},"end":{"line":1478,"column":17}},"488":{"start":{"line":1471,"column":20},"end":{"line":1473,"column":21}},"489":{"start":{"line":1472,"column":24},"end":{"line":1472,"column":59}},"490":{"start":{"line":1475,"column":20},"end":{"line":1475,"column":55}},"491":{"start":{"line":1476,"column":20},"end":{"line":1476,"column":33}},"492":{"start":{"line":1480,"column":16},"end":{"line":1480,"column":51}},"493":{"start":{"line":1490,"column":16},"end":{"line":1492,"column":23}},"494":{"start":{"line":1494,"column":16},"end":{"line":1494,"column":46}},"495":{"start":{"line":1495,"column":16},"end":{"line":1497,"column":17}},"496":{"start":{"line":1496,"column":20},"end":{"line":1496,"column":32}},"497":{"start":{"line":1499,"column":16},"end":{"line":1501,"column":17}},"498":{"start":{"line":1500,"column":20},"end":{"line":1500,"column":33}},"499":{"start":{"line":1503,"column":16},"end":{"line":1503,"column":51}},"500":{"start":{"line":1522,"column":16},"end":{"line":1525,"column":26}},"501":{"start":{"line":1527,"column":16},"end":{"line":1558,"column":17}},"502":{"start":{"line":1528,"column":20},"end":{"line":1528,"column":48}},"503":{"start":{"line":1529,"column":20},"end":{"line":1529,"column":40}},"504":{"start":{"line":1530,"column":20},"end":{"line":1530,"column":52}},"505":{"start":{"line":1532,"column":20},"end":{"line":1532,"column":50}},"506":{"start":{"line":1534,"column":20},"end":{"line":1536,"column":21}},"507":{"start":{"line":1535,"column":24},"end":{"line":1535,"column":36}},"508":{"start":{"line":1538,"column":20},"end":{"line":1538,"column":56}},"509":{"start":{"line":1539,"column":20},"end":{"line":1539,"column":55}},"510":{"start":{"line":1540,"column":20},"end":{"line":1540,"column":52}},"511":{"start":{"line":1542,"column":20},"end":{"line":1551,"column":21}},"512":{"start":{"line":1545,"column":24},"end":{"line":1545,"column":59}},"513":{"start":{"line":1546,"column":24},"end":{"line":1546,"column":56}},"514":{"start":{"line":1548,"column":24},"end":{"line":1548,"column":77}},"515":{"start":{"line":1549,"column":24},"end":{"line":1549,"column":59}},"516":{"start":{"line":1550,"column":24},"end":{"line":1550,"column":56}},"517":{"start":{"line":1553,"column":20},"end":{"line":1553,"column":59}},"518":{"start":{"line":1555,"column":20},"end":{"line":1555,"column":106}},"519":{"start":{"line":1557,"column":20},"end":{"line":1557,"column":32}},"520":{"start":{"line":1570,"column":16},"end":{"line":1574,"column":24}},"521":{"start":{"line":1576,"column":16},"end":{"line":1599,"column":17}},"522":{"start":{"line":1578,"column":20},"end":{"line":1580,"column":21}},"523":{"start":{"line":1579,"column":24},"end":{"line":1579,"column":38}},"524":{"start":{"line":1582,"column":20},"end":{"line":1590,"column":21}},"525":{"start":{"line":1583,"column":24},"end":{"line":1583,"column":59}},"526":{"start":{"line":1584,"column":24},"end":{"line":1584,"column":61}},"527":{"start":{"line":1585,"column":24},"end":{"line":1585,"column":75}},"528":{"start":{"line":1586,"column":27},"end":{"line":1590,"column":21}},"529":{"start":{"line":1587,"column":24},"end":{"line":1587,"column":59}},"530":{"start":{"line":1588,"column":24},"end":{"line":1588,"column":73}},"531":{"start":{"line":1589,"column":24},"end":{"line":1589,"column":59}},"532":{"start":{"line":1592,"column":20},"end":{"line":1598,"column":21}},"533":{"start":{"line":1593,"column":24},"end":{"line":1593,"column":91}},"534":{"start":{"line":1595,"column":24},"end":{"line":1596,"column":67}},"535":{"start":{"line":1597,"column":24},"end":{"line":1597,"column":164}},"536":{"start":{"line":1601,"column":16},"end":{"line":1601,"column":30}},"537":{"start":{"line":1612,"column":16},"end":{"line":1613,"column":33}},"538":{"start":{"line":1615,"column":16},"end":{"line":1621,"column":17}},"539":{"start":{"line":1616,"column":20},"end":{"line":1616,"column":54}},"540":{"start":{"line":1617,"column":20},"end":{"line":1617,"column":52}},"541":{"start":{"line":1618,"column":20},"end":{"line":1618,"column":48}},"542":{"start":{"line":1619,"column":20},"end":{"line":1619,"column":57}},"543":{"start":{"line":1620,"column":20},"end":{"line":1620,"column":33}},"544":{"start":{"line":1623,"column":16},"end":{"line":1623,"column":29}},"545":{"start":{"line":1634,"column":16},"end":{"line":1635,"column":37}},"546":{"start":{"line":1637,"column":16},"end":{"line":1644,"column":17}},"547":{"start":{"line":1642,"column":20},"end":{"line":1642,"column":55}},"548":{"start":{"line":1643,"column":20},"end":{"line":1643,"column":52}},"549":{"start":{"line":1646,"column":16},"end":{"line":1646,"column":51}},"550":{"start":{"line":1658,"column":16},"end":{"line":1663,"column":39}},"551":{"start":{"line":1665,"column":16},"end":{"line":1678,"column":17}},"552":{"start":{"line":1666,"column":20},"end":{"line":1666,"column":54}},"553":{"start":{"line":1667,"column":20},"end":{"line":1667,"column":57}},"554":{"start":{"line":1668,"column":20},"end":{"line":1668,"column":55}},"555":{"start":{"line":1669,"column":20},"end":{"line":1669,"column":52}},"556":{"start":{"line":1670,"column":20},"end":{"line":1670,"column":47}},"557":{"start":{"line":1671,"column":20},"end":{"line":1671,"column":33}},"558":{"start":{"line":1672,"column":20},"end":{"line":1672,"column":52}},"559":{"start":{"line":1673,"column":20},"end":{"line":1673,"column":53}},"560":{"start":{"line":1674,"column":20},"end":{"line":1674,"column":55}},"561":{"start":{"line":1676,"column":20},"end":{"line":1676,"column":75}},"562":{"start":{"line":1677,"column":20},"end":{"line":1677,"column":43}},"563":{"start":{"line":1680,"column":16},"end":{"line":1680,"column":31}},"564":{"start":{"line":1691,"column":16},"end":{"line":1709,"column":25}},"565":{"start":{"line":1696,"column":28},"end":{"line":1698,"column":41}},"566":{"start":{"line":1711,"column":16},"end":{"line":1711,"column":51}},"567":{"start":{"line":1712,"column":16},"end":{"line":1712,"column":49}},"568":{"start":{"line":1714,"column":16},"end":{"line":1718,"column":17}},"569":{"start":{"line":1716,"column":20},"end":{"line":1716,"column":45}},"570":{"start":{"line":1717,"column":20},"end":{"line":1717,"column":24}},"571":{"start":{"line":1721,"column":16},"end":{"line":1723,"column":17}},"572":{"start":{"line":1722,"column":20},"end":{"line":1722,"column":61}},"573":{"start":{"line":1726,"column":16},"end":{"line":1730,"column":17}},"574":{"start":{"line":1727,"column":20},"end":{"line":1727,"column":80}},"575":{"start":{"line":1729,"column":20},"end":{"line":1729,"column":84}},"576":{"start":{"line":1732,"column":16},"end":{"line":1732,"column":28}},"577":{"start":{"line":1744,"column":16},"end":{"line":1749,"column":37}},"578":{"start":{"line":1751,"column":16},"end":{"line":1751,"column":44}},"579":{"start":{"line":1752,"column":16},"end":{"line":1797,"column":17}},"580":{"start":{"line":1754,"column":20},"end":{"line":1754,"column":56}},"581":{"start":{"line":1755,"column":20},"end":{"line":1755,"column":43}},"582":{"start":{"line":1757,"column":20},"end":{"line":1757,"column":40}},"583":{"start":{"line":1760,"column":20},"end":{"line":1762,"column":21}},"584":{"start":{"line":1761,"column":24},"end":{"line":1761,"column":65}},"585":{"start":{"line":1764,"column":20},"end":{"line":1764,"column":40}},"586":{"start":{"line":1771,"column":20},"end":{"line":1771,"column":55}},"587":{"start":{"line":1772,"column":20},"end":{"line":1776,"column":21}},"588":{"start":{"line":1775,"column":24},"end":{"line":1775,"column":53}},"589":{"start":{"line":1778,"column":20},"end":{"line":1782,"column":21}},"590":{"start":{"line":1779,"column":24},"end":{"line":1779,"column":67}},"591":{"start":{"line":1781,"column":24},"end":{"line":1781,"column":37}},"592":{"start":{"line":1784,"column":20},"end":{"line":1792,"column":23}},"593":{"start":{"line":1794,"column":20},"end":{"line":1794,"column":32}},"594":{"start":{"line":1796,"column":20},"end":{"line":1796,"column":33}},"595":{"start":{"line":1807,"column":16},"end":{"line":1808,"column":74}},"596":{"start":{"line":1810,"column":16},"end":{"line":1810,"column":39}},"597":{"start":{"line":1811,"column":16},"end":{"line":1811,"column":30}},"598":{"start":{"line":1821,"column":16},"end":{"line":1824,"column":39}},"599":{"start":{"line":1826,"column":16},"end":{"line":1826,"column":47}},"600":{"start":{"line":1827,"column":16},"end":{"line":1851,"column":17}},"601":{"start":{"line":1829,"column":20},"end":{"line":1829,"column":39}},"602":{"start":{"line":1831,"column":20},"end":{"line":1850,"column":35}},"603":{"start":{"line":1832,"column":24},"end":{"line":1832,"column":62}},"604":{"start":{"line":1835,"column":24},"end":{"line":1837,"column":25}},"605":{"start":{"line":1836,"column":28},"end":{"line":1836,"column":50}},"606":{"start":{"line":1843,"column":24},"end":{"line":1843,"column":55}},"607":{"start":{"line":1845,"column":24},"end":{"line":1849,"column":25}},"608":{"start":{"line":1846,"column":28},"end":{"line":1846,"column":34}},"609":{"start":{"line":1848,"column":28},"end":{"line":1848,"column":47}},"610":{"start":{"line":1858,"column":16},"end":{"line":1858,"column":107}},"611":{"start":{"line":1872,"column":16},"end":{"line":1879,"column":24}},"612":{"start":{"line":1882,"column":16},"end":{"line":1882,"column":47}},"613":{"start":{"line":1883,"column":16},"end":{"line":1886,"column":17}},"614":{"start":{"line":1884,"column":20},"end":{"line":1884,"column":57}},"615":{"start":{"line":1885,"column":20},"end":{"line":1885,"column":55}},"616":{"start":{"line":1889,"column":16},"end":{"line":1964,"column":17}},"617":{"start":{"line":1891,"column":20},"end":{"line":1891,"column":48}},"618":{"start":{"line":1892,"column":20},"end":{"line":1895,"column":21}},"619":{"start":{"line":1893,"column":24},"end":{"line":1893,"column":61}},"620":{"start":{"line":1894,"column":24},"end":{"line":1894,"column":59}},"621":{"start":{"line":1898,"column":23},"end":{"line":1964,"column":17}},"622":{"start":{"line":1900,"column":20},"end":{"line":1900,"column":48}},"623":{"start":{"line":1901,"column":20},"end":{"line":1901,"column":44}},"624":{"start":{"line":1902,"column":20},"end":{"line":1902,"column":70}},"625":{"start":{"line":1903,"column":20},"end":{"line":1906,"column":21}},"626":{"start":{"line":1904,"column":24},"end":{"line":1904,"column":61}},"627":{"start":{"line":1905,"column":24},"end":{"line":1905,"column":59}},"628":{"start":{"line":1907,"column":20},"end":{"line":1907,"column":64}},"629":{"start":{"line":1908,"column":20},"end":{"line":1908,"column":37}},"630":{"start":{"line":1909,"column":20},"end":{"line":1909,"column":43}},"631":{"start":{"line":1912,"column":23},"end":{"line":1964,"column":17}},"632":{"start":{"line":1916,"column":20},"end":{"line":1916,"column":54}},"633":{"start":{"line":1917,"column":20},"end":{"line":1923,"column":21}},"634":{"start":{"line":1918,"column":24},"end":{"line":1918,"column":61}},"635":{"start":{"line":1919,"column":24},"end":{"line":1919,"column":59}},"636":{"start":{"line":1922,"column":24},"end":{"line":1922,"column":80}},"637":{"start":{"line":1924,"column":20},"end":{"line":1924,"column":43}},"638":{"start":{"line":1928,"column":20},"end":{"line":1928,"column":45}},"639":{"start":{"line":1929,"column":20},"end":{"line":1962,"column":21}},"640":{"start":{"line":1932,"column":24},"end":{"line":1935,"column":25}},"641":{"start":{"line":1933,"column":28},"end":{"line":1933,"column":63}},"642":{"start":{"line":1934,"column":28},"end":{"line":1934,"column":61}},"643":{"start":{"line":1938,"column":24},"end":{"line":1949,"column":25}},"644":{"start":{"line":1944,"column":28},"end":{"line":1948,"column":29}},"645":{"start":{"line":1945,"column":32},"end":{"line":1945,"column":60}},"646":{"start":{"line":1947,"column":32},"end":{"line":1947,"column":57}},"647":{"start":{"line":1957,"column":24},"end":{"line":1957,"column":44}},"648":{"start":{"line":1958,"column":24},"end":{"line":1961,"column":25}},"649":{"start":{"line":1959,"column":28},"end":{"line":1959,"column":51}},"650":{"start":{"line":1960,"column":28},"end":{"line":1960,"column":49}},"651":{"start":{"line":1966,"column":16},"end":{"line":1968,"column":29}},"652":{"start":{"line":1980,"column":16},"end":{"line":1983,"column":23}},"653":{"start":{"line":1985,"column":16},"end":{"line":2025,"column":17}},"654":{"start":{"line":1986,"column":20},"end":{"line":1986,"column":61}},"655":{"start":{"line":1987,"column":20},"end":{"line":1987,"column":43}},"656":{"start":{"line":1988,"column":20},"end":{"line":1988,"column":44}},"657":{"start":{"line":1989,"column":20},"end":{"line":1989,"column":41}},"658":{"start":{"line":1992,"column":20},"end":{"line":2018,"column":21}},"659":{"start":{"line":1993,"column":24},"end":{"line":2017,"column":78}},"660":{"start":{"line":1995,"column":28},"end":{"line":1997,"column":29}},"661":{"start":{"line":1996,"column":32},"end":{"line":1996,"column":74}},"662":{"start":{"line":2000,"column":28},"end":{"line":2002,"column":29}},"663":{"start":{"line":2001,"column":32},"end":{"line":2001,"column":74}},"664":{"start":{"line":2004,"column":28},"end":{"line":2004,"column":60}},"665":{"start":{"line":2005,"column":28},"end":{"line":2005,"column":70}},"666":{"start":{"line":2007,"column":28},"end":{"line":2007,"column":61}},"667":{"start":{"line":2008,"column":28},"end":{"line":2008,"column":70}},"668":{"start":{"line":2011,"column":28},"end":{"line":2011,"column":52}},"669":{"start":{"line":2012,"column":28},"end":{"line":2016,"column":29}},"670":{"start":{"line":2013,"column":32},"end":{"line":2013,"column":50}},"671":{"start":{"line":2014,"column":32},"end":{"line":2014,"column":74}},"672":{"start":{"line":2015,"column":32},"end":{"line":2015,"column":56}},"673":{"start":{"line":2022,"column":20},"end":{"line":2022,"column":53}},"674":{"start":{"line":2023,"column":20},"end":{"line":2023,"column":40}},"675":{"start":{"line":2024,"column":20},"end":{"line":2024,"column":43}},"676":{"start":{"line":2027,"column":16},"end":{"line":2027,"column":36}},"677":{"start":{"line":2038,"column":16},"end":{"line":2040,"column":23}},"678":{"start":{"line":2043,"column":16},"end":{"line":2075,"column":17}},"679":{"start":{"line":2044,"column":20},"end":{"line":2044,"column":61}},"680":{"start":{"line":2046,"column":20},"end":{"line":2070,"column":74}},"681":{"start":{"line":2048,"column":24},"end":{"line":2050,"column":25}},"682":{"start":{"line":2049,"column":28},"end":{"line":2049,"column":70}},"683":{"start":{"line":2053,"column":24},"end":{"line":2055,"column":25}},"684":{"start":{"line":2054,"column":28},"end":{"line":2054,"column":70}},"685":{"start":{"line":2057,"column":24},"end":{"line":2057,"column":56}},"686":{"start":{"line":2058,"column":24},"end":{"line":2058,"column":66}},"687":{"start":{"line":2060,"column":24},"end":{"line":2060,"column":57}},"688":{"start":{"line":2061,"column":24},"end":{"line":2061,"column":66}},"689":{"start":{"line":2064,"column":24},"end":{"line":2064,"column":48}},"690":{"start":{"line":2065,"column":24},"end":{"line":2069,"column":25}},"691":{"start":{"line":2066,"column":28},"end":{"line":2066,"column":46}},"692":{"start":{"line":2067,"column":28},"end":{"line":2067,"column":70}},"693":{"start":{"line":2068,"column":28},"end":{"line":2068,"column":52}},"694":{"start":{"line":2072,"column":20},"end":{"line":2072,"column":53}},"695":{"start":{"line":2073,"column":20},"end":{"line":2073,"column":40}},"696":{"start":{"line":2074,"column":20},"end":{"line":2074,"column":43}},"697":{"start":{"line":2077,"column":16},"end":{"line":2077,"column":36}},"698":{"start":{"line":2091,"column":16},"end":{"line":2093,"column":26}},"699":{"start":{"line":2095,"column":16},"end":{"line":2105,"column":17}},"700":{"start":{"line":2099,"column":20},"end":{"line":2099,"column":48}},"701":{"start":{"line":2100,"column":20},"end":{"line":2100,"column":40}},"702":{"start":{"line":2101,"column":20},"end":{"line":2103,"column":21}},"703":{"start":{"line":2102,"column":24},"end":{"line":2102,"column":190}},"704":{"start":{"line":2104,"column":20},"end":{"line":2104,"column":43}},"705":{"start":{"line":2107,"column":16},"end":{"line":2107,"column":29}},"706":{"start":{"line":2121,"column":16},"end":{"line":2125,"column":32}},"707":{"start":{"line":2127,"column":16},"end":{"line":2127,"column":60}},"708":{"start":{"line":2128,"column":16},"end":{"line":2128,"column":44}},"709":{"start":{"line":2129,"column":16},"end":{"line":2131,"column":17}},"710":{"start":{"line":2130,"column":20},"end":{"line":2130,"column":39}},"711":{"start":{"line":2133,"column":16},"end":{"line":2133,"column":39}},"712":{"start":{"line":2134,"column":16},"end":{"line":2134,"column":45}},"713":{"start":{"line":2136,"column":16},"end":{"line":2136,"column":39}},"714":{"start":{"line":2137,"column":16},"end":{"line":2137,"column":53}},"715":{"start":{"line":2139,"column":16},"end":{"line":2145,"column":19}},"716":{"start":{"line":2147,"column":16},"end":{"line":2147,"column":39}},"717":{"start":{"line":2148,"column":16},"end":{"line":2148,"column":40}},"718":{"start":{"line":2151,"column":16},"end":{"line":2155,"column":17}},"719":{"start":{"line":2152,"column":20},"end":{"line":2152,"column":42}},"720":{"start":{"line":2153,"column":20},"end":{"line":2153,"column":43}},"721":{"start":{"line":2154,"column":20},"end":{"line":2154,"column":44}},"722":{"start":{"line":2157,"column":16},"end":{"line":2163,"column":19}},"723":{"start":{"line":2165,"column":16},"end":{"line":2165,"column":39}},"724":{"start":{"line":2166,"column":16},"end":{"line":2166,"column":53}},"725":{"start":{"line":2167,"column":16},"end":{"line":2167,"column":39}},"726":{"start":{"line":2179,"column":16},"end":{"line":2179,"column":52}},"727":{"start":{"line":2181,"column":16},"end":{"line":2181,"column":69}},"728":{"start":{"line":2182,"column":16},"end":{"line":2182,"column":65}},"729":{"start":{"line":2193,"column":16},"end":{"line":2193,"column":47}},"730":{"start":{"line":2195,"column":16},"end":{"line":2200,"column":19}},"731":{"start":{"line":2202,"column":16},"end":{"line":2202,"column":45}},"732":{"start":{"line":2204,"column":16},"end":{"line":2209,"column":19}},"733":{"start":{"line":2220,"column":16},"end":{"line":2221,"column":33}},"734":{"start":{"line":2224,"column":16},"end":{"line":2224,"column":42}},"735":{"start":{"line":2226,"column":16},"end":{"line":2226,"column":39}},"736":{"start":{"line":2228,"column":16},"end":{"line":2232,"column":17}},"737":{"start":{"line":2229,"column":20},"end":{"line":2229,"column":43}},"738":{"start":{"line":2230,"column":20},"end":{"line":2230,"column":46}},"739":{"start":{"line":2231,"column":20},"end":{"line":2231,"column":43}},"740":{"start":{"line":2234,"column":16},"end":{"line":2234,"column":31}},"741":{"start":{"line":2247,"column":16},"end":{"line":2248,"column":26}},"742":{"start":{"line":2250,"column":16},"end":{"line":2260,"column":17}},"743":{"start":{"line":2251,"column":20},"end":{"line":2251,"column":69}},"744":{"start":{"line":2252,"column":23},"end":{"line":2260,"column":17}},"745":{"start":{"line":2253,"column":20},"end":{"line":2253,"column":48}},"746":{"start":{"line":2255,"column":20},"end":{"line":2257,"column":21}},"747":{"start":{"line":2256,"column":24},"end":{"line":2256,"column":59}},"748":{"start":{"line":2259,"column":20},"end":{"line":2259,"column":40}},"749":{"start":{"line":2263,"column":16},"end":{"line":2263,"column":57}},"750":{"start":{"line":2278,"column":16},"end":{"line":2280,"column":17}},"751":{"start":{"line":2305,"column":16},"end":{"line":2306,"column":23}},"752":{"start":{"line":2309,"column":16},"end":{"line":2309,"column":39}},"753":{"start":{"line":2311,"column":16},"end":{"line":2313,"column":17}},"754":{"start":{"line":2312,"column":20},"end":{"line":2312,"column":57}},"755":{"start":{"line":2315,"column":16},"end":{"line":2315,"column":39}},"756":{"start":{"line":2317,"column":16},"end":{"line":2367,"column":17}},"757":{"start":{"line":2319,"column":20},"end":{"line":2335,"column":21}},"758":{"start":{"line":2321,"column":24},"end":{"line":2329,"column":25}},"759":{"start":{"line":2323,"column":31},"end":{"line":2329,"column":25}},"760":{"start":{"line":2324,"column":28},"end":{"line":2326,"column":29}},"761":{"start":{"line":2325,"column":32},"end":{"line":2325,"column":38}},"762":{"start":{"line":2328,"column":28},"end":{"line":2328,"column":34}},"763":{"start":{"line":2334,"column":24},"end":{"line":2334,"column":47}},"764":{"start":{"line":2337,"column":20},"end":{"line":2337,"column":57}},"765":{"start":{"line":2338,"column":20},"end":{"line":2338,"column":43}},"766":{"start":{"line":2341,"column":20},"end":{"line":2366,"column":21}},"767":{"start":{"line":2344,"column":24},"end":{"line":2350,"column":27}},"768":{"start":{"line":2353,"column":24},"end":{"line":2353,"column":84}},"769":{"start":{"line":2354,"column":24},"end":{"line":2361,"column":25}},"770":{"start":{"line":2356,"column":28},"end":{"line":2356,"column":71}},"771":{"start":{"line":2357,"column":31},"end":{"line":2361,"column":25}},"772":{"start":{"line":2360,"column":28},"end":{"line":2360,"column":37}},"773":{"start":{"line":2365,"column":24},"end":{"line":2365,"column":33}},"774":{"start":{"line":2382,"column":16},"end":{"line":2383,"column":28}},"775":{"start":{"line":2385,"column":16},"end":{"line":2387,"column":17}},"776":{"start":{"line":2386,"column":20},"end":{"line":2386,"column":52}},"777":{"start":{"line":2389,"column":16},"end":{"line":2389,"column":26}},"778":{"start":{"line":2401,"column":16},"end":{"line":2401,"column":174}},"779":{"start":{"line":2411,"column":16},"end":{"line":2413,"column":17}},"780":{"start":{"line":2412,"column":20},"end":{"line":2412,"column":67}},"781":{"start":{"line":2420,"column":16},"end":{"line":2420,"column":53}},"782":{"start":{"line":2428,"column":16},"end":{"line":2428,"column":67}},"783":{"start":{"line":2429,"column":16},"end":{"line":2429,"column":35}},"784":{"start":{"line":2434,"column":16},"end":{"line":2434,"column":41}},"785":{"start":{"line":2438,"column":16},"end":{"line":2438,"column":67}},"786":{"start":{"line":2439,"column":16},"end":{"line":2439,"column":49}},"787":{"start":{"line":2442,"column":16},"end":{"line":2442,"column":34}},"788":{"start":{"line":2445,"column":16},"end":{"line":2445,"column":30}},"789":{"start":{"line":2456,"column":16},"end":{"line":2456,"column":67}},"790":{"start":{"line":2457,"column":16},"end":{"line":2457,"column":39}},"791":{"start":{"line":2459,"column":16},"end":{"line":2459,"column":42}},"792":{"start":{"line":2462,"column":16},"end":{"line":2462,"column":39}},"793":{"start":{"line":2465,"column":16},"end":{"line":2465,"column":34}},"794":{"start":{"line":2468,"column":16},"end":{"line":2468,"column":30}},"795":{"start":{"line":2479,"column":16},"end":{"line":2479,"column":67}},"796":{"start":{"line":2482,"column":16},"end":{"line":2482,"column":39}},"797":{"start":{"line":2484,"column":16},"end":{"line":2484,"column":45}},"798":{"start":{"line":2487,"column":16},"end":{"line":2487,"column":39}},"799":{"start":{"line":2490,"column":16},"end":{"line":2490,"column":34}},"800":{"start":{"line":2493,"column":16},"end":{"line":2493,"column":30}},"801":{"start":{"line":2505,"column":16},"end":{"line":2505,"column":67}},"802":{"start":{"line":2508,"column":16},"end":{"line":2508,"column":39}},"803":{"start":{"line":2510,"column":16},"end":{"line":2510,"column":46}},"804":{"start":{"line":2513,"column":16},"end":{"line":2513,"column":39}},"805":{"start":{"line":2516,"column":16},"end":{"line":2516,"column":34}},"806":{"start":{"line":2519,"column":16},"end":{"line":2519,"column":30}},"807":{"start":{"line":2530,"column":16},"end":{"line":2530,"column":29}},"808":{"start":{"line":2531,"column":16},"end":{"line":2531,"column":67}},"809":{"start":{"line":2532,"column":16},"end":{"line":2532,"column":41}},"810":{"start":{"line":2537,"column":4},"end":{"line":2541,"column":5}},"811":{"start":{"line":2538,"column":8},"end":{"line":2540,"column":9}},"812":{"start":{"line":2539,"column":12},"end":{"line":2539,"column":42}},"813":{"start":{"line":2543,"column":4},"end":{"line":2543,"column":17}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":26}},{"start":{"line":40,"column":30},"end":{"line":40,"column":32}}]},"2":{"line":126,"type":"switch","locations":[{"start":{"line":127,"column":28},"end":{"line":130,"column":38}},{"start":{"line":131,"column":28},"end":{"line":134,"column":38}},{"start":{"line":135,"column":28},"end":{"line":138,"column":38}},{"start":{"line":139,"column":28},"end":{"line":142,"column":38}},{"start":{"line":143,"column":28},"end":{"line":146,"column":38}},{"start":{"line":147,"column":28},"end":{"line":150,"column":38}},{"start":{"line":151,"column":28},"end":{"line":154,"column":38}},{"start":{"line":155,"column":28},"end":{"line":183,"column":38}},{"start":{"line":184,"column":28},"end":{"line":186,"column":38}},{"start":{"line":187,"column":28},"end":{"line":209,"column":33}}]},"3":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":32},"end":{"line":157,"column":32}},{"start":{"line":157,"column":32},"end":{"line":157,"column":32}}]},"4":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":32},"end":{"line":188,"column":32}},{"start":{"line":188,"column":32},"end":{"line":188,"column":32}}]},"5":{"line":191,"type":"switch","locations":[{"start":{"line":192,"column":40},"end":{"line":195,"column":129}},{"start":{"line":196,"column":40},"end":{"line":199,"column":128}},{"start":{"line":200,"column":40},"end":{"line":203,"column":131}},{"start":{"line":204,"column":40},"end":{"line":206,"column":87}}]},"6":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":24},"end":{"line":212,"column":24}},{"start":{"line":212,"column":24},"end":{"line":212,"column":24}}]},"7":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":28},"end":{"line":212,"column":53}},{"start":{"line":212,"column":57},"end":{"line":212,"column":77}}]},"8":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":16},"end":{"line":228,"column":16}},{"start":{"line":228,"column":16},"end":{"line":228,"column":16}}]},"9":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":16},"end":{"line":242,"column":16}},{"start":{"line":242,"column":16},"end":{"line":242,"column":16}}]},"10":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":20},"end":{"line":255,"column":20}},{"start":{"line":255,"column":20},"end":{"line":255,"column":20}}]},"11":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":16},"end":{"line":296,"column":16}},{"start":{"line":296,"column":16},"end":{"line":296,"column":16}}]},"12":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":16},"end":{"line":327,"column":16}},{"start":{"line":327,"column":16},"end":{"line":327,"column":16}}]},"13":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":16}},{"start":{"line":346,"column":16},"end":{"line":346,"column":16}}]},"14":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":16},"end":{"line":368,"column":16}},{"start":{"line":368,"column":16},"end":{"line":368,"column":16}}]},"15":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":20},"end":{"line":379,"column":20}},{"start":{"line":379,"column":20},"end":{"line":379,"column":20}}]},"16":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":24},"end":{"line":388,"column":24}},{"start":{"line":388,"column":24},"end":{"line":388,"column":24}}]},"17":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":16},"end":{"line":414,"column":16}},{"start":{"line":414,"column":16},"end":{"line":414,"column":16}}]},"18":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":20},"end":{"line":417,"column":20}},{"start":{"line":417,"column":20},"end":{"line":417,"column":20}}]},"19":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":24},"end":{"line":429,"column":24}},{"start":{"line":429,"column":24},"end":{"line":429,"column":24}}]},"20":{"line":429,"type":"binary-expr","locations":[{"start":{"line":429,"column":28},"end":{"line":429,"column":43}},{"start":{"line":429,"column":47},"end":{"line":429,"column":61}}]},"21":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":16},"end":{"line":449,"column":16}},{"start":{"line":449,"column":16},"end":{"line":449,"column":16}}]},"22":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":20},"end":{"line":451,"column":20}},{"start":{"line":451,"column":20},"end":{"line":451,"column":20}}]},"23":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":24},"end":{"line":454,"column":24}},{"start":{"line":454,"column":24},"end":{"line":454,"column":24}}]},"24":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":16},"end":{"line":481,"column":16}},{"start":{"line":481,"column":16},"end":{"line":481,"column":16}}]},"25":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":20},"end":{"line":520,"column":20}},{"start":{"line":520,"column":20},"end":{"line":520,"column":20}}]},"26":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":27},"end":{"line":522,"column":27}},{"start":{"line":522,"column":27},"end":{"line":522,"column":27}}]},"27":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":27},"end":{"line":524,"column":27}},{"start":{"line":524,"column":27},"end":{"line":524,"column":27}}]},"28":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":27},"end":{"line":526,"column":27}},{"start":{"line":526,"column":27},"end":{"line":526,"column":27}}]},"29":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":27},"end":{"line":528,"column":27}},{"start":{"line":528,"column":27},"end":{"line":528,"column":27}}]},"30":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":27},"end":{"line":530,"column":27}},{"start":{"line":530,"column":27},"end":{"line":530,"column":27}}]},"31":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":27},"end":{"line":532,"column":27}},{"start":{"line":532,"column":27},"end":{"line":532,"column":27}}]},"32":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":16},"end":{"line":562,"column":16}},{"start":{"line":562,"column":16},"end":{"line":562,"column":16}}]},"33":{"line":562,"type":"binary-expr","locations":[{"start":{"line":562,"column":20},"end":{"line":562,"column":55}},{"start":{"line":562,"column":59},"end":{"line":562,"column":95}}]},"34":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":16},"end":{"line":592,"column":16}},{"start":{"line":592,"column":16},"end":{"line":592,"column":16}}]},"35":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":20},"end":{"line":596,"column":20}},{"start":{"line":596,"column":20},"end":{"line":596,"column":20}}]},"36":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":24},"end":{"line":596,"column":40}},{"start":{"line":596,"column":44},"end":{"line":596,"column":59}}]},"37":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":16},"end":{"line":606,"column":16}},{"start":{"line":606,"column":16},"end":{"line":606,"column":16}}]},"38":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":20},"end":{"line":608,"column":20}},{"start":{"line":608,"column":20},"end":{"line":608,"column":20}}]},"39":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":23},"end":{"line":611,"column":23}},{"start":{"line":611,"column":23},"end":{"line":611,"column":23}}]},"40":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":20},"end":{"line":612,"column":20}},{"start":{"line":612,"column":20},"end":{"line":612,"column":20}}]},"41":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":16},"end":{"line":618,"column":16}},{"start":{"line":618,"column":16},"end":{"line":618,"column":16}}]},"42":{"line":618,"type":"binary-expr","locations":[{"start":{"line":618,"column":20},"end":{"line":618,"column":33}},{"start":{"line":618,"column":37},"end":{"line":618,"column":61}}]},"43":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":24},"end":{"line":623,"column":24}},{"start":{"line":623,"column":24},"end":{"line":623,"column":24}}]},"44":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":16},"end":{"line":669,"column":16}},{"start":{"line":669,"column":16},"end":{"line":669,"column":16}}]},"45":{"line":678,"type":"cond-expr","locations":[{"start":{"line":678,"column":62},"end":{"line":678,"column":121}},{"start":{"line":678,"column":124},"end":{"line":678,"column":128}}]},"46":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":16},"end":{"line":718,"column":16}},{"start":{"line":718,"column":16},"end":{"line":718,"column":16}}]},"47":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":20},"end":{"line":722,"column":20}},{"start":{"line":722,"column":20},"end":{"line":722,"column":20}}]},"48":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":16},"end":{"line":728,"column":16}},{"start":{"line":728,"column":16},"end":{"line":728,"column":16}}]},"49":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":16},"end":{"line":766,"column":16}},{"start":{"line":766,"column":16},"end":{"line":766,"column":16}}]},"50":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":16},"end":{"line":817,"column":16}},{"start":{"line":817,"column":16},"end":{"line":817,"column":16}}]},"51":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":16},"end":{"line":930,"column":16}},{"start":{"line":930,"column":16},"end":{"line":930,"column":16}}]},"52":{"line":955,"type":"switch","locations":[{"start":{"line":956,"column":24},"end":{"line":958,"column":34}},{"start":{"line":959,"column":24},"end":{"line":961,"column":34}},{"start":{"line":962,"column":24},"end":{"line":964,"column":34}},{"start":{"line":965,"column":24},"end":{"line":967,"column":34}},{"start":{"line":968,"column":24},"end":{"line":970,"column":34}},{"start":{"line":971,"column":24},"end":{"line":973,"column":34}},{"start":{"line":974,"column":24},"end":{"line":975,"column":58}}]},"53":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":16},"end":{"line":1002,"column":16}},{"start":{"line":1002,"column":16},"end":{"line":1002,"column":16}}]},"54":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":16},"end":{"line":1025,"column":16}},{"start":{"line":1025,"column":16},"end":{"line":1025,"column":16}}]},"55":{"line":1025,"type":"binary-expr","locations":[{"start":{"line":1025,"column":20},"end":{"line":1025,"column":67}},{"start":{"line":1026,"column":21},"end":{"line":1026,"column":31}},{"start":{"line":1026,"column":35},"end":{"line":1026,"column":94}}]},"56":{"line":1030,"type":"cond-expr","locations":[{"start":{"line":1030,"column":31},"end":{"line":1030,"column":65}},{"start":{"line":1030,"column":68},"end":{"line":1030,"column":72}}]},"57":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}},{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}}]},"58":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":16},"end":{"line":1065,"column":16}},{"start":{"line":1065,"column":16},"end":{"line":1065,"column":16}}]},"59":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":16},"end":{"line":1089,"column":16}},{"start":{"line":1089,"column":16},"end":{"line":1089,"column":16}}]},"60":{"line":1089,"type":"binary-expr","locations":[{"start":{"line":1089,"column":20},"end":{"line":1089,"column":54}},{"start":{"line":1089,"column":58},"end":{"line":1089,"column":79}}]},"61":{"line":1097,"type":"if","locations":[{"start":{"line":1097,"column":16},"end":{"line":1097,"column":16}},{"start":{"line":1097,"column":16},"end":{"line":1097,"column":16}}]},"62":{"line":1102,"type":"if","locations":[{"start":{"line":1102,"column":20},"end":{"line":1102,"column":20}},{"start":{"line":1102,"column":20},"end":{"line":1102,"column":20}}]},"63":{"line":1102,"type":"binary-expr","locations":[{"start":{"line":1102,"column":24},"end":{"line":1102,"column":52}},{"start":{"line":1102,"column":56},"end":{"line":1102,"column":83}}]},"64":{"line":1107,"type":"binary-expr","locations":[{"start":{"line":1107,"column":64},"end":{"line":1107,"column":68}},{"start":{"line":1107,"column":70},"end":{"line":1107,"column":85}}]},"65":{"line":1107,"type":"binary-expr","locations":[{"start":{"line":1107,"column":89},"end":{"line":1107,"column":92}},{"start":{"line":1107,"column":94},"end":{"line":1107,"column":108}}]},"66":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":20},"end":{"line":1135,"column":20}},{"start":{"line":1135,"column":20},"end":{"line":1135,"column":20}}]},"67":{"line":1135,"type":"binary-expr","locations":[{"start":{"line":1135,"column":24},"end":{"line":1135,"column":49}},{"start":{"line":1135,"column":53},"end":{"line":1135,"column":73}}]},"68":{"line":1148,"type":"if","locations":[{"start":{"line":1148,"column":24},"end":{"line":1148,"column":24}},{"start":{"line":1148,"column":24},"end":{"line":1148,"column":24}}]},"69":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":16},"end":{"line":1165,"column":16}},{"start":{"line":1165,"column":16},"end":{"line":1165,"column":16}}]},"70":{"line":1202,"type":"if","locations":[{"start":{"line":1202,"column":16},"end":{"line":1202,"column":16}},{"start":{"line":1202,"column":16},"end":{"line":1202,"column":16}}]},"71":{"line":1208,"type":"if","locations":[{"start":{"line":1208,"column":24},"end":{"line":1208,"column":24}},{"start":{"line":1208,"column":24},"end":{"line":1208,"column":24}}]},"72":{"line":1216,"type":"cond-expr","locations":[{"start":{"line":1216,"column":42},"end":{"line":1216,"column":51}},{"start":{"line":1216,"column":54},"end":{"line":1216,"column":58}}]},"73":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":16},"end":{"line":1235,"column":16}},{"start":{"line":1235,"column":16},"end":{"line":1235,"column":16}}]},"74":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":20},"end":{"line":1246,"column":20}},{"start":{"line":1246,"column":20},"end":{"line":1246,"column":20}}]},"75":{"line":1251,"type":"if","locations":[{"start":{"line":1251,"column":24},"end":{"line":1251,"column":24}},{"start":{"line":1251,"column":24},"end":{"line":1251,"column":24}}]},"76":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":24},"end":{"line":1261,"column":24}},{"start":{"line":1261,"column":24},"end":{"line":1261,"column":24}}]},"77":{"line":1271,"type":"if","locations":[{"start":{"line":1271,"column":28},"end":{"line":1271,"column":28}},{"start":{"line":1271,"column":28},"end":{"line":1271,"column":28}}]},"78":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":32},"end":{"line":1272,"column":32}},{"start":{"line":1272,"column":32},"end":{"line":1272,"column":32}}]},"79":{"line":1277,"type":"if","locations":[{"start":{"line":1277,"column":32},"end":{"line":1277,"column":32}},{"start":{"line":1277,"column":32},"end":{"line":1277,"column":32}}]},"80":{"line":1318,"type":"cond-expr","locations":[{"start":{"line":1319,"column":36},"end":{"line":1319,"column":149}},{"start":{"line":1320,"column":36},"end":{"line":1320,"column":40}}]},"81":{"line":1339,"type":"if","locations":[{"start":{"line":1339,"column":16},"end":{"line":1339,"column":16}},{"start":{"line":1339,"column":16},"end":{"line":1339,"column":16}}]},"82":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":16},"end":{"line":1343,"column":16}},{"start":{"line":1343,"column":16},"end":{"line":1343,"column":16}}]},"83":{"line":1350,"type":"if","locations":[{"start":{"line":1350,"column":20},"end":{"line":1350,"column":20}},{"start":{"line":1350,"column":20},"end":{"line":1350,"column":20}}]},"84":{"line":1355,"type":"binary-expr","locations":[{"start":{"line":1355,"column":27},"end":{"line":1355,"column":34}},{"start":{"line":1355,"column":38},"end":{"line":1355,"column":56}}]},"85":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":20},"end":{"line":1359,"column":20}},{"start":{"line":1359,"column":20},"end":{"line":1359,"column":20}}]},"86":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":24},"end":{"line":1362,"column":24}},{"start":{"line":1362,"column":24},"end":{"line":1362,"column":24}}]},"87":{"line":1376,"type":"cond-expr","locations":[{"start":{"line":1377,"column":24},"end":{"line":1377,"column":89}},{"start":{"line":1378,"column":24},"end":{"line":1378,"column":28}}]},"88":{"line":1393,"type":"if","locations":[{"start":{"line":1393,"column":16},"end":{"line":1393,"column":16}},{"start":{"line":1393,"column":16},"end":{"line":1393,"column":16}}]},"89":{"line":1400,"type":"if","locations":[{"start":{"line":1400,"column":20},"end":{"line":1400,"column":20}},{"start":{"line":1400,"column":20},"end":{"line":1400,"column":20}}]},"90":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":24},"end":{"line":1402,"column":24}},{"start":{"line":1402,"column":24},"end":{"line":1402,"column":24}}]},"91":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":20},"end":{"line":1409,"column":20}},{"start":{"line":1409,"column":20},"end":{"line":1409,"column":20}}]},"92":{"line":1428,"type":"if","locations":[{"start":{"line":1428,"column":16},"end":{"line":1428,"column":16}},{"start":{"line":1428,"column":16},"end":{"line":1428,"column":16}}]},"93":{"line":1449,"type":"if","locations":[{"start":{"line":1449,"column":16},"end":{"line":1449,"column":16}},{"start":{"line":1449,"column":16},"end":{"line":1449,"column":16}}]},"94":{"line":1469,"type":"if","locations":[{"start":{"line":1469,"column":16},"end":{"line":1469,"column":16}},{"start":{"line":1469,"column":16},"end":{"line":1469,"column":16}}]},"95":{"line":1469,"type":"binary-expr","locations":[{"start":{"line":1469,"column":20},"end":{"line":1469,"column":53}},{"start":{"line":1469,"column":57},"end":{"line":1469,"column":90}}]},"96":{"line":1471,"type":"if","locations":[{"start":{"line":1471,"column":20},"end":{"line":1471,"column":20}},{"start":{"line":1471,"column":20},"end":{"line":1471,"column":20}}]},"97":{"line":1480,"type":"cond-expr","locations":[{"start":{"line":1480,"column":38},"end":{"line":1480,"column":43}},{"start":{"line":1480,"column":46},"end":{"line":1480,"column":50}}]},"98":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":16},"end":{"line":1495,"column":16}},{"start":{"line":1495,"column":16},"end":{"line":1495,"column":16}}]},"99":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":16},"end":{"line":1499,"column":16}},{"start":{"line":1499,"column":16},"end":{"line":1499,"column":16}}]},"100":{"line":1503,"type":"cond-expr","locations":[{"start":{"line":1503,"column":38},"end":{"line":1503,"column":43}},{"start":{"line":1503,"column":46},"end":{"line":1503,"column":50}}]},"101":{"line":1527,"type":"if","locations":[{"start":{"line":1527,"column":16},"end":{"line":1527,"column":16}},{"start":{"line":1527,"column":16},"end":{"line":1527,"column":16}}]},"102":{"line":1534,"type":"if","locations":[{"start":{"line":1534,"column":20},"end":{"line":1534,"column":20}},{"start":{"line":1534,"column":20},"end":{"line":1534,"column":20}}]},"103":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":20},"end":{"line":1542,"column":20}},{"start":{"line":1542,"column":20},"end":{"line":1542,"column":20}}]},"104":{"line":1576,"type":"if","locations":[{"start":{"line":1576,"column":16},"end":{"line":1576,"column":16}},{"start":{"line":1576,"column":16},"end":{"line":1576,"column":16}}]},"105":{"line":1578,"type":"if","locations":[{"start":{"line":1578,"column":20},"end":{"line":1578,"column":20}},{"start":{"line":1578,"column":20},"end":{"line":1578,"column":20}}]},"106":{"line":1582,"type":"if","locations":[{"start":{"line":1582,"column":20},"end":{"line":1582,"column":20}},{"start":{"line":1582,"column":20},"end":{"line":1582,"column":20}}]},"107":{"line":1586,"type":"if","locations":[{"start":{"line":1586,"column":27},"end":{"line":1586,"column":27}},{"start":{"line":1586,"column":27},"end":{"line":1586,"column":27}}]},"108":{"line":1592,"type":"if","locations":[{"start":{"line":1592,"column":20},"end":{"line":1592,"column":20}},{"start":{"line":1592,"column":20},"end":{"line":1592,"column":20}}]},"109":{"line":1615,"type":"if","locations":[{"start":{"line":1615,"column":16},"end":{"line":1615,"column":16}},{"start":{"line":1615,"column":16},"end":{"line":1615,"column":16}}]},"110":{"line":1646,"type":"cond-expr","locations":[{"start":{"line":1646,"column":38},"end":{"line":1646,"column":43}},{"start":{"line":1646,"column":46},"end":{"line":1646,"column":50}}]},"111":{"line":1665,"type":"if","locations":[{"start":{"line":1665,"column":16},"end":{"line":1665,"column":16}},{"start":{"line":1665,"column":16},"end":{"line":1665,"column":16}}]},"112":{"line":1696,"type":"cond-expr","locations":[{"start":{"line":1697,"column":36},"end":{"line":1697,"column":149}},{"start":{"line":1698,"column":36},"end":{"line":1698,"column":40}}]},"113":{"line":1714,"type":"binary-expr","locations":[{"start":{"line":1714,"column":23},"end":{"line":1714,"column":30}},{"start":{"line":1714,"column":34},"end":{"line":1714,"column":46}}]},"114":{"line":1721,"type":"if","locations":[{"start":{"line":1721,"column":16},"end":{"line":1721,"column":16}},{"start":{"line":1721,"column":16},"end":{"line":1721,"column":16}}]},"115":{"line":1726,"type":"if","locations":[{"start":{"line":1726,"column":16},"end":{"line":1726,"column":16}},{"start":{"line":1726,"column":16},"end":{"line":1726,"column":16}}]},"116":{"line":1752,"type":"if","locations":[{"start":{"line":1752,"column":16},"end":{"line":1752,"column":16}},{"start":{"line":1752,"column":16},"end":{"line":1752,"column":16}}]},"117":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":20},"end":{"line":1760,"column":20}},{"start":{"line":1760,"column":20},"end":{"line":1760,"column":20}}]},"118":{"line":1760,"type":"binary-expr","locations":[{"start":{"line":1760,"column":24},"end":{"line":1760,"column":29}},{"start":{"line":1760,"column":33},"end":{"line":1760,"column":50}}]},"119":{"line":1772,"type":"if","locations":[{"start":{"line":1772,"column":20},"end":{"line":1772,"column":20}},{"start":{"line":1772,"column":20},"end":{"line":1772,"column":20}}]},"120":{"line":1772,"type":"binary-expr","locations":[{"start":{"line":1772,"column":24},"end":{"line":1772,"column":45}},{"start":{"line":1772,"column":49},"end":{"line":1772,"column":70}},{"start":{"line":1773,"column":28},"end":{"line":1773,"column":55}},{"start":{"line":1773,"column":59},"end":{"line":1773,"column":80}}]},"121":{"line":1827,"type":"if","locations":[{"start":{"line":1827,"column":16},"end":{"line":1827,"column":16}},{"start":{"line":1827,"column":16},"end":{"line":1827,"column":16}}]},"122":{"line":1835,"type":"if","locations":[{"start":{"line":1835,"column":24},"end":{"line":1835,"column":24}},{"start":{"line":1835,"column":24},"end":{"line":1835,"column":24}}]},"123":{"line":1845,"type":"if","locations":[{"start":{"line":1845,"column":24},"end":{"line":1845,"column":24}},{"start":{"line":1845,"column":24},"end":{"line":1845,"column":24}}]},"124":{"line":1858,"type":"cond-expr","locations":[{"start":{"line":1858,"column":43},"end":{"line":1858,"column":99}},{"start":{"line":1858,"column":102},"end":{"line":1858,"column":106}}]},"125":{"line":1883,"type":"if","locations":[{"start":{"line":1883,"column":16},"end":{"line":1883,"column":16}},{"start":{"line":1883,"column":16},"end":{"line":1883,"column":16}}]},"126":{"line":1889,"type":"if","locations":[{"start":{"line":1889,"column":16},"end":{"line":1889,"column":16}},{"start":{"line":1889,"column":16},"end":{"line":1889,"column":16}}]},"127":{"line":1889,"type":"binary-expr","locations":[{"start":{"line":1889,"column":20},"end":{"line":1889,"column":61}},{"start":{"line":1889,"column":65},"end":{"line":1889,"column":87}}]},"128":{"line":1892,"type":"if","locations":[{"start":{"line":1892,"column":20},"end":{"line":1892,"column":20}},{"start":{"line":1892,"column":20},"end":{"line":1892,"column":20}}]},"129":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":23},"end":{"line":1898,"column":23}},{"start":{"line":1898,"column":23},"end":{"line":1898,"column":23}}]},"130":{"line":1898,"type":"binary-expr","locations":[{"start":{"line":1898,"column":27},"end":{"line":1898,"column":37}},{"start":{"line":1898,"column":41},"end":{"line":1898,"column":107}}]},"131":{"line":1903,"type":"if","locations":[{"start":{"line":1903,"column":20},"end":{"line":1903,"column":20}},{"start":{"line":1903,"column":20},"end":{"line":1903,"column":20}}]},"132":{"line":1912,"type":"if","locations":[{"start":{"line":1912,"column":23},"end":{"line":1912,"column":23}},{"start":{"line":1912,"column":23},"end":{"line":1912,"column":23}}]},"133":{"line":1917,"type":"if","locations":[{"start":{"line":1917,"column":20},"end":{"line":1917,"column":20}},{"start":{"line":1917,"column":20},"end":{"line":1917,"column":20}}]},"134":{"line":1929,"type":"if","locations":[{"start":{"line":1929,"column":20},"end":{"line":1929,"column":20}},{"start":{"line":1929,"column":20},"end":{"line":1929,"column":20}}]},"135":{"line":1932,"type":"if","locations":[{"start":{"line":1932,"column":24},"end":{"line":1932,"column":24}},{"start":{"line":1932,"column":24},"end":{"line":1932,"column":24}}]},"136":{"line":1938,"type":"if","locations":[{"start":{"line":1938,"column":24},"end":{"line":1938,"column":24}},{"start":{"line":1938,"column":24},"end":{"line":1938,"column":24}}]},"137":{"line":1944,"type":"if","locations":[{"start":{"line":1944,"column":28},"end":{"line":1944,"column":28}},{"start":{"line":1944,"column":28},"end":{"line":1944,"column":28}}]},"138":{"line":1944,"type":"binary-expr","locations":[{"start":{"line":1944,"column":32},"end":{"line":1944,"column":67}},{"start":{"line":1944,"column":71},"end":{"line":1944,"column":93}}]},"139":{"line":1958,"type":"if","locations":[{"start":{"line":1958,"column":24},"end":{"line":1958,"column":24}},{"start":{"line":1958,"column":24},"end":{"line":1958,"column":24}}]},"140":{"line":1966,"type":"cond-expr","locations":[{"start":{"line":1966,"column":39},"end":{"line":1966,"column":43}},{"start":{"line":1966,"column":46},"end":{"line":1968,"column":28}}]},"141":{"line":1966,"type":"cond-expr","locations":[{"start":{"line":1967,"column":24},"end":{"line":1967,"column":96}},{"start":{"line":1968,"column":24},"end":{"line":1968,"column":28}}]},"142":{"line":1967,"type":"cond-expr","locations":[{"start":{"line":1967,"column":63},"end":{"line":1967,"column":76}},{"start":{"line":1967,"column":79},"end":{"line":1967,"column":84}}]},"143":{"line":1985,"type":"if","locations":[{"start":{"line":1985,"column":16},"end":{"line":1985,"column":16}},{"start":{"line":1985,"column":16},"end":{"line":1985,"column":16}}]},"144":{"line":1992,"type":"if","locations":[{"start":{"line":1992,"column":20},"end":{"line":1992,"column":20}},{"start":{"line":1992,"column":20},"end":{"line":1992,"column":20}}]},"145":{"line":1992,"type":"binary-expr","locations":[{"start":{"line":1992,"column":24},"end":{"line":1992,"column":46}},{"start":{"line":1992,"column":50},"end":{"line":1992,"column":86}}]},"146":{"line":1995,"type":"if","locations":[{"start":{"line":1995,"column":28},"end":{"line":1995,"column":28}},{"start":{"line":1995,"column":28},"end":{"line":1995,"column":28}}]},"147":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":28},"end":{"line":2000,"column":28}},{"start":{"line":2000,"column":28},"end":{"line":2000,"column":28}}]},"148":{"line":2012,"type":"binary-expr","locations":[{"start":{"line":2012,"column":35},"end":{"line":2012,"column":54}},{"start":{"line":2012,"column":58},"end":{"line":2012,"column":73}},{"start":{"line":2012,"column":77},"end":{"line":2012,"column":97}}]},"149":{"line":2043,"type":"if","locations":[{"start":{"line":2043,"column":16},"end":{"line":2043,"column":16}},{"start":{"line":2043,"column":16},"end":{"line":2043,"column":16}}]},"150":{"line":2048,"type":"if","locations":[{"start":{"line":2048,"column":24},"end":{"line":2048,"column":24}},{"start":{"line":2048,"column":24},"end":{"line":2048,"column":24}}]},"151":{"line":2053,"type":"if","locations":[{"start":{"line":2053,"column":24},"end":{"line":2053,"column":24}},{"start":{"line":2053,"column":24},"end":{"line":2053,"column":24}}]},"152":{"line":2065,"type":"binary-expr","locations":[{"start":{"line":2065,"column":31},"end":{"line":2065,"column":50}},{"start":{"line":2065,"column":54},"end":{"line":2065,"column":69}},{"start":{"line":2065,"column":73},"end":{"line":2065,"column":93}}]},"153":{"line":2095,"type":"if","locations":[{"start":{"line":2095,"column":16},"end":{"line":2095,"column":16}},{"start":{"line":2095,"column":16},"end":{"line":2095,"column":16}}]},"154":{"line":2101,"type":"if","locations":[{"start":{"line":2101,"column":20},"end":{"line":2101,"column":20}},{"start":{"line":2101,"column":20},"end":{"line":2101,"column":20}}]},"155":{"line":2129,"type":"if","locations":[{"start":{"line":2129,"column":16},"end":{"line":2129,"column":16}},{"start":{"line":2129,"column":16},"end":{"line":2129,"column":16}}]},"156":{"line":2151,"type":"binary-expr","locations":[{"start":{"line":2151,"column":23},"end":{"line":2151,"column":42}},{"start":{"line":2151,"column":46},"end":{"line":2151,"column":70}}]},"157":{"line":2250,"type":"if","locations":[{"start":{"line":2250,"column":16},"end":{"line":2250,"column":16}},{"start":{"line":2250,"column":16},"end":{"line":2250,"column":16}}]},"158":{"line":2252,"type":"if","locations":[{"start":{"line":2252,"column":23},"end":{"line":2252,"column":23}},{"start":{"line":2252,"column":23},"end":{"line":2252,"column":23}}]},"159":{"line":2255,"type":"if","locations":[{"start":{"line":2255,"column":20},"end":{"line":2255,"column":20}},{"start":{"line":2255,"column":20},"end":{"line":2255,"column":20}}]},"160":{"line":2311,"type":"if","locations":[{"start":{"line":2311,"column":16},"end":{"line":2311,"column":16}},{"start":{"line":2311,"column":16},"end":{"line":2311,"column":16}}]},"161":{"line":2321,"type":"if","locations":[{"start":{"line":2321,"column":24},"end":{"line":2321,"column":24}},{"start":{"line":2321,"column":24},"end":{"line":2321,"column":24}}]},"162":{"line":2321,"type":"binary-expr","locations":[{"start":{"line":2321,"column":28},"end":{"line":2321,"column":63}},{"start":{"line":2321,"column":68},"end":{"line":2321,"column":79}},{"start":{"line":2321,"column":83},"end":{"line":2321,"column":97}}]},"163":{"line":2323,"type":"if","locations":[{"start":{"line":2323,"column":31},"end":{"line":2323,"column":31}},{"start":{"line":2323,"column":31},"end":{"line":2323,"column":31}}]},"164":{"line":2324,"type":"if","locations":[{"start":{"line":2324,"column":28},"end":{"line":2324,"column":28}},{"start":{"line":2324,"column":28},"end":{"line":2324,"column":28}}]},"165":{"line":2341,"type":"if","locations":[{"start":{"line":2341,"column":20},"end":{"line":2341,"column":20}},{"start":{"line":2341,"column":20},"end":{"line":2341,"column":20}}]},"166":{"line":2341,"type":"binary-expr","locations":[{"start":{"line":2341,"column":24},"end":{"line":2341,"column":49}},{"start":{"line":2341,"column":53},"end":{"line":2341,"column":73}}]},"167":{"line":2354,"type":"if","locations":[{"start":{"line":2354,"column":24},"end":{"line":2354,"column":24}},{"start":{"line":2354,"column":24},"end":{"line":2354,"column":24}}]},"168":{"line":2357,"type":"if","locations":[{"start":{"line":2357,"column":31},"end":{"line":2357,"column":31}},{"start":{"line":2357,"column":31},"end":{"line":2357,"column":31}}]},"169":{"line":2411,"type":"if","locations":[{"start":{"line":2411,"column":16},"end":{"line":2411,"column":16}},{"start":{"line":2411,"column":16},"end":{"line":2411,"column":16}}]},"170":{"line":2538,"type":"if","locations":[{"start":{"line":2538,"column":8},"end":{"line":2538,"column":8}},{"start":{"line":2538,"column":8},"end":{"line":2538,"column":8}}]}},"code":["\"use strict\";","","module.exports = Parser;","","var EventTarget = require(\"../util/EventTarget\");","var SyntaxError = require(\"../util/SyntaxError\");","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Combinator = require(\"./Combinator\");","var MediaFeature = require(\"./MediaFeature\");","var MediaQuery = require(\"./MediaQuery\");","var PropertyName = require(\"./PropertyName\");","var PropertyValue = require(\"./PropertyValue\");","var PropertyValuePart = require(\"./PropertyValuePart\");","var Selector = require(\"./Selector\");","var SelectorPart = require(\"./SelectorPart\");","var SelectorSubPart = require(\"./SelectorSubPart\");","var TokenStream = require(\"./TokenStream\");","var Tokens = require(\"./Tokens\");","var Validation = require(\"./Validation\");","","/**"," * A CSS3 parser."," * @namespace parserlib.css"," * @class Parser"," * @constructor"," * @param {Object} options (Optional) Various options for the parser:"," *      starHack (true|false) to allow IE6 star hack as valid,"," *      underscoreHack (true|false) to interpret leading underscores"," *      as IE6-7 targeting for known properties, ieFilters (true|false)"," *      to indicate that IE < 8 filters should be accepted and not throw"," *      syntax errors."," */","function Parser(options) {","","    //inherit event functionality","    EventTarget.call(this);","","","    this.options = options || {};","","    this._tokenStream = null;","}","","//Static constants","Parser.DEFAULT_TYPE = 0;","Parser.COMBINATOR_TYPE = 1;","Parser.MEDIA_FEATURE_TYPE = 2;","Parser.MEDIA_QUERY_TYPE = 3;","Parser.PROPERTY_NAME_TYPE = 4;","Parser.PROPERTY_VALUE_TYPE = 5;","Parser.PROPERTY_VALUE_PART_TYPE = 6;","Parser.SELECTOR_TYPE = 7;","Parser.SELECTOR_PART_TYPE = 8;","Parser.SELECTOR_SUB_PART_TYPE = 9;","","Parser.prototype = function() {","","    var proto = new EventTarget(),  //new prototype","        prop,","        additions =  {","            __proto__: null,","","            //restore constructor","            constructor: Parser,","","            //instance constants - yuck","            DEFAULT_TYPE : 0,","            COMBINATOR_TYPE : 1,","            MEDIA_FEATURE_TYPE : 2,","            MEDIA_QUERY_TYPE : 3,","            PROPERTY_NAME_TYPE : 4,","            PROPERTY_VALUE_TYPE : 5,","            PROPERTY_VALUE_PART_TYPE : 6,","            SELECTOR_TYPE : 7,","            SELECTOR_PART_TYPE : 8,","            SELECTOR_SUB_PART_TYPE : 9,","","            //-----------------------------------------------------------------","            // Grammar","            //-----------------------------------------------------------------","","            _stylesheet: function() {","","                /*","                 * stylesheet","                 *  : [ CHARSET_SYM S* STRING S* ';' ]?","                 *    [S|CDO|CDC]* [ import [S|CDO|CDC]* ]*","                 *    [ namespace [S|CDO|CDC]* ]*","                 *    [ [ ruleset | media | page | font_face | keyframes_rule | supports_rule ] [S|CDO|CDC]* ]*","                 *  ;","                 */","","                var tokenStream = this._tokenStream,","                    count,","                    token,","                    tt;","","                this.fire(\"startstylesheet\");","","                //try to read character set","                this._charset();","","                this._skipCruft();","","                //try to read imports - may be more than one","                while (tokenStream.peek() === Tokens.IMPORT_SYM) {","                    this._import();","                    this._skipCruft();","                }","","                //try to read namespaces - may be more than one","                while (tokenStream.peek() === Tokens.NAMESPACE_SYM) {","                    this._namespace();","                    this._skipCruft();","                }","","                //get the next token","                tt = tokenStream.peek();","","                //try to read the rest","                while (tt > Tokens.EOF) {","","                    try {","","                        switch (tt) {","                            case Tokens.MEDIA_SYM:","                                this._media();","                                this._skipCruft();","                                break;","                            case Tokens.PAGE_SYM:","                                this._page();","                                this._skipCruft();","                                break;","                            case Tokens.FONT_FACE_SYM:","                                this._font_face();","                                this._skipCruft();","                                break;","                            case Tokens.KEYFRAMES_SYM:","                                this._keyframes();","                                this._skipCruft();","                                break;","                            case Tokens.VIEWPORT_SYM:","                                this._viewport();","                                this._skipCruft();","                                break;","                            case Tokens.DOCUMENT_SYM:","                                this._document();","                                this._skipCruft();","                                break;","                            case Tokens.SUPPORTS_SYM:","                                this._supports();","                                this._skipCruft();","                                break;","                            case Tokens.UNKNOWN_SYM:  //unknown @ rule","                                tokenStream.get();","                                if (!this.options.strict) {","","                                    //fire error event","                                    this.fire({","                                        type:       \"error\",","                                        error:      null,","                                        message:    \"Unknown @ rule: \" + tokenStream.LT(0).value + \".\",","                                        line:       tokenStream.LT(0).startLine,","                                        col:        tokenStream.LT(0).startCol","                                    });","","                                    //skip braces","                                    count=0;","                                    while (tokenStream.advance([Tokens.LBRACE, Tokens.RBRACE]) === Tokens.LBRACE) {","                                        count++;    //keep track of nesting depth","                                    }","","                                    while (count) {","                                        tokenStream.advance([Tokens.RBRACE]);","                                        count--;","                                    }","","                                } else {","                                    //not a syntax error, rethrow it","                                    throw new SyntaxError(\"Unknown @ rule.\", tokenStream.LT(0).startLine, tokenStream.LT(0).startCol);","                                }","                                break;","                            case Tokens.S:","                                this._readWhitespace();","                                break;","                            default:","                                if (!this._ruleset()) {","","                                    //error handling for known issues","                                    switch (tt) {","                                        case Tokens.CHARSET_SYM:","                                            token = tokenStream.LT(1);","                                            this._charset(false);","                                            throw new SyntaxError(\"@charset not allowed here.\", token.startLine, token.startCol);","                                        case Tokens.IMPORT_SYM:","                                            token = tokenStream.LT(1);","                                            this._import(false);","                                            throw new SyntaxError(\"@import not allowed here.\", token.startLine, token.startCol);","                                        case Tokens.NAMESPACE_SYM:","                                            token = tokenStream.LT(1);","                                            this._namespace(false);","                                            throw new SyntaxError(\"@namespace not allowed here.\", token.startLine, token.startCol);","                                        default:","                                            tokenStream.get();  //get the last token","                                            this._unexpectedToken(tokenStream.token());","                                    }","","                                }","                        }","                    } catch (ex) {","                        if (ex instanceof SyntaxError && !this.options.strict) {","                            this.fire({","                                type:       \"error\",","                                error:      ex,","                                message:    ex.message,","                                line:       ex.line,","                                col:        ex.col","                            });","                        } else {","                            throw ex;","                        }","                    }","","                    tt = tokenStream.peek();","                }","","                if (tt !== Tokens.EOF) {","                    this._unexpectedToken(tokenStream.token());","                }","","                this.fire(\"endstylesheet\");","            },","","            _charset: function(emit) {","                var tokenStream = this._tokenStream,","                    charset,","                    token,","                    line,","                    col;","","                if (tokenStream.match(Tokens.CHARSET_SYM)) {","                    line = tokenStream.token().startLine;","                    col = tokenStream.token().startCol;","","                    this._readWhitespace();","                    tokenStream.mustMatch(Tokens.STRING);","","                    token = tokenStream.token();","                    charset = token.value;","","                    this._readWhitespace();","                    tokenStream.mustMatch(Tokens.SEMICOLON);","","                    if (emit !== false) {","                        this.fire({","                            type:   \"charset\",","                            charset:charset,","                            line:   line,","                            col:    col","                        });","                    }","                }","            },","","            _import: function(emit) {","                /*","                 * import","                 *   : IMPORT_SYM S*","                 *    [STRING|URI] S* media_query_list? ';' S*","                 */","","                var tokenStream = this._tokenStream,","                    uri,","                    importToken,","                    mediaList   = [];","","                //read import symbol","                tokenStream.mustMatch(Tokens.IMPORT_SYM);","                importToken = tokenStream.token();","                this._readWhitespace();","","                tokenStream.mustMatch([Tokens.STRING, Tokens.URI]);","","                //grab the URI value","                uri = tokenStream.token().value.replace(/^(?:url\\()?[\"']?([^\"']+?)[\"']?\\)?$/, \"$1\");","","                this._readWhitespace();","","                mediaList = this._media_query_list();","","                //must end with a semicolon","                tokenStream.mustMatch(Tokens.SEMICOLON);","                this._readWhitespace();","","                if (emit !== false) {","                    this.fire({","                        type:   \"import\",","                        uri:    uri,","                        media:  mediaList,","                        line:   importToken.startLine,","                        col:    importToken.startCol","                    });","                }","","            },","","            _namespace: function(emit) {","                /*","                 * namespace","                 *   : NAMESPACE_SYM S* [namespace_prefix S*]? [STRING|URI] S* ';' S*","                 */","","                var tokenStream = this._tokenStream,","                    line,","                    col,","                    prefix,","                    uri;","","                //read import symbol","                tokenStream.mustMatch(Tokens.NAMESPACE_SYM);","                line = tokenStream.token().startLine;","                col = tokenStream.token().startCol;","                this._readWhitespace();","","                //it's a namespace prefix - no _namespace_prefix() method because it's just an IDENT","                if (tokenStream.match(Tokens.IDENT)) {","                    prefix = tokenStream.token().value;","                    this._readWhitespace();","                }","","                tokenStream.mustMatch([Tokens.STRING, Tokens.URI]);","                /*if (!tokenStream.match(Tokens.STRING)){","                    tokenStream.mustMatch(Tokens.URI);","                }*/","","                //grab the URI value","                uri = tokenStream.token().value.replace(/(?:url\\()?[\"']([^\"']+)[\"']\\)?/, \"$1\");","","                this._readWhitespace();","","                //must end with a semicolon","                tokenStream.mustMatch(Tokens.SEMICOLON);","                this._readWhitespace();","","                if (emit !== false) {","                    this.fire({","                        type:   \"namespace\",","                        prefix: prefix,","                        uri:    uri,","                        line:   line,","                        col:    col","                    });","                }","","            },","","            _supports: function(emit) {","                /*","                 * supports_rule","                 *  : SUPPORTS_SYM S* supports_condition S* group_rule_body","                 *  ;","                 */","                var tokenStream = this._tokenStream,","                    line,","                    col;","","                if (tokenStream.match(Tokens.SUPPORTS_SYM)) {","                    line = tokenStream.token().startLine;","                    col = tokenStream.token().startCol;","","                    this._readWhitespace();","                    this._supports_condition();","                    this._readWhitespace();","","                    tokenStream.mustMatch(Tokens.LBRACE);","                    this._readWhitespace();","","                    if (emit !== false) {","                        this.fire({","                            type:   \"startsupports\",","                            line:   line,","                            col:    col","                        });","                    }","","                    while (true) {","                        if (!this._ruleset()) {","                            break;","                        }","                    }","","                    tokenStream.mustMatch(Tokens.RBRACE);","                    this._readWhitespace();","","                    this.fire({","                        type:   \"endsupports\",","                        line:   line,","                        col:    col","                    });","                }","            },","","            _supports_condition: function() {","                /*","                 * supports_condition","                 *  : supports_negation | supports_conjunction | supports_disjunction |","                 *    supports_condition_in_parens","                 *  ;","                 */","                var tokenStream = this._tokenStream,","                    ident;","","                if (tokenStream.match(Tokens.IDENT)) {","                    ident = tokenStream.token().value.toLowerCase();","","                    if (ident === \"not\") {","                        tokenStream.mustMatch(Tokens.S);","                        this._supports_condition_in_parens();","                    } else {","                        tokenStream.unget();","                    }","                } else {","                    this._supports_condition_in_parens();","                    this._readWhitespace();","","                    while (tokenStream.peek() === Tokens.IDENT) {","                        ident = tokenStream.LT(1).value.toLowerCase();","                        if (ident === \"and\" || ident === \"or\") {","                            tokenStream.mustMatch(Tokens.IDENT);","                            this._readWhitespace();","                            this._supports_condition_in_parens();","                            this._readWhitespace();","                        }","                    }","                }","            },","","            _supports_condition_in_parens: function() {","                /*","                 * supports_condition_in_parens","                 *  : ( '(' S* supports_condition S* ')' ) | supports_declaration_condition |","                 *    general_enclosed","                 *  ;","                 */","                var tokenStream = this._tokenStream,","                    ident;","","                if (tokenStream.match(Tokens.LPAREN)) {","                    this._readWhitespace();","                    if (tokenStream.match(Tokens.IDENT)) {","                        // look ahead for not keyword, if not given, continue with declaration condition.","                        ident = tokenStream.token().value.toLowerCase();","                        if (ident === \"not\") {","                            this._readWhitespace();","                            this._supports_condition();","                            this._readWhitespace();","                            tokenStream.mustMatch(Tokens.RPAREN);","                        } else {","                            tokenStream.unget();","                            this._supports_declaration_condition(false);","                        }","                    } else {","                        this._supports_condition();","                        this._readWhitespace();","                        tokenStream.mustMatch(Tokens.RPAREN);","                    }","                } else {","                    this._supports_declaration_condition();","                }","            },","","            _supports_declaration_condition: function(requireStartParen) {","                /*","                 * supports_declaration_condition","                 *  : '(' S* declaration ')'","                 *  ;","                 */","                var tokenStream = this._tokenStream;","","                if (requireStartParen !== false) {","                    tokenStream.mustMatch(Tokens.LPAREN);","                }","                this._readWhitespace();","                this._declaration();","                tokenStream.mustMatch(Tokens.RPAREN);","            },","","            _media: function() {","                /*","                 * media","                 *   : MEDIA_SYM S* media_query_list S* '{' S* ruleset* '}' S*","                 *   ;","                 */","                var tokenStream     = this._tokenStream,","                    line,","                    col,","                    mediaList;//       = [];","","                //look for @media","                tokenStream.mustMatch(Tokens.MEDIA_SYM);","                line = tokenStream.token().startLine;","                col = tokenStream.token().startCol;","","                this._readWhitespace();","","                mediaList = this._media_query_list();","","                tokenStream.mustMatch(Tokens.LBRACE);","                this._readWhitespace();","","                this.fire({","                    type:   \"startmedia\",","                    media:  mediaList,","                    line:   line,","                    col:    col","                });","","                while (true) {","                    if (tokenStream.peek() === Tokens.PAGE_SYM) {","                        this._page();","                    } else if (tokenStream.peek() === Tokens.FONT_FACE_SYM) {","                        this._font_face();","                    } else if (tokenStream.peek() === Tokens.VIEWPORT_SYM) {","                        this._viewport();","                    } else if (tokenStream.peek() === Tokens.DOCUMENT_SYM) {","                        this._document();","                    } else if (tokenStream.peek() === Tokens.SUPPORTS_SYM) {","                        this._supports();","                    } else if (tokenStream.peek() === Tokens.MEDIA_SYM) {","                        this._media();","                    } else if (!this._ruleset()) {","                        break;","                    }","                }","","                tokenStream.mustMatch(Tokens.RBRACE);","                this._readWhitespace();","","                this.fire({","                    type:   \"endmedia\",","                    media:  mediaList,","                    line:   line,","                    col:    col","                });","            },","","","            //CSS3 Media Queries","            _media_query_list: function() {","                /*","                 * media_query_list","                 *   : S* [media_query [ ',' S* media_query ]* ]?","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    mediaList   = [];","","","                this._readWhitespace();","","                if (tokenStream.peek() === Tokens.IDENT || tokenStream.peek() === Tokens.LPAREN) {","                    mediaList.push(this._media_query());","                }","","                while (tokenStream.match(Tokens.COMMA)) {","                    this._readWhitespace();","                    mediaList.push(this._media_query());","                }","","                return mediaList;","            },","","            /*","             * Note: \"expression\" in the grammar maps to the _media_expression","             * method.","","             */","            _media_query: function() {","                /*","                 * media_query","                 *   : [ONLY | NOT]? S* media_type S* [ AND S* expression ]*","                 *   | expression [ AND S* expression ]*","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    type        = null,","                    ident       = null,","                    token       = null,","                    expressions = [];","","                if (tokenStream.match(Tokens.IDENT)) {","                    ident = tokenStream.token().value.toLowerCase();","","                    //since there's no custom tokens for these, need to manually check","                    if (ident !== \"only\" && ident !== \"not\") {","                        tokenStream.unget();","                        ident = null;","                    } else {","                        token = tokenStream.token();","                    }","                }","","                this._readWhitespace();","","                if (tokenStream.peek() === Tokens.IDENT) {","                    type = this._media_type();","                    if (token === null) {","                        token = tokenStream.token();","                    }","                } else if (tokenStream.peek() === Tokens.LPAREN) {","                    if (token === null) {","                        token = tokenStream.LT(1);","                    }","                    expressions.push(this._media_expression());","                }","","                if (type === null && expressions.length === 0) {","                    return null;","                } else {","                    this._readWhitespace();","                    while (tokenStream.match(Tokens.IDENT)) {","                        if (tokenStream.token().value.toLowerCase() !== \"and\") {","                            this._unexpectedToken(tokenStream.token());","                        }","","                        this._readWhitespace();","                        expressions.push(this._media_expression());","                    }","                }","","                return new MediaQuery(ident, type, expressions, token.startLine, token.startCol);","            },","","            //CSS3 Media Queries","            _media_type: function() {","                /*","                 * media_type","                 *   : IDENT","                 *   ;","                 */","                return this._media_feature();","            },","","            /**","             * Note: in CSS3 Media Queries, this is called \"expression\".","             * Renamed here to avoid conflict with CSS3 Selectors","             * definition of \"expression\". Also note that \"expr\" in the","             * grammar now maps to \"expression\" from CSS3 selectors.","             * @method _media_expression","             * @private","             */","            _media_expression: function() {","                /*","                 * expression","                 *  : '(' S* media_feature S* [ ':' S* expr ]? ')' S*","                 *  ;","                 */","                var tokenStream = this._tokenStream,","                    feature     = null,","                    token,","                    expression  = null;","","                tokenStream.mustMatch(Tokens.LPAREN);","","                feature = this._media_feature();","                this._readWhitespace();","","                if (tokenStream.match(Tokens.COLON)) {","                    this._readWhitespace();","                    token = tokenStream.LT(1);","                    expression = this._expression();","                }","","                tokenStream.mustMatch(Tokens.RPAREN);","                this._readWhitespace();","","                return new MediaFeature(feature, expression ? new SyntaxUnit(expression, token.startLine, token.startCol) : null);","            },","","            //CSS3 Media Queries","            _media_feature: function() {","                /*","                 * media_feature","                 *   : IDENT","                 *   ;","                 */","                var tokenStream = this._tokenStream;","","                this._readWhitespace();","","                tokenStream.mustMatch(Tokens.IDENT);","","                return SyntaxUnit.fromToken(tokenStream.token());","            },","","            //CSS3 Paged Media","            _page: function() {","                /*","                 * page:","                 *    PAGE_SYM S* IDENT? pseudo_page? S*","                 *    '{' S* [ declaration | margin ]? [ ';' S* [ declaration | margin ]? ]* '}' S*","                 *    ;","                 */","                var tokenStream = this._tokenStream,","                    line,","                    col,","                    identifier  = null,","                    pseudoPage  = null;","","                //look for @page","                tokenStream.mustMatch(Tokens.PAGE_SYM);","                line = tokenStream.token().startLine;","                col = tokenStream.token().startCol;","","                this._readWhitespace();","","                if (tokenStream.match(Tokens.IDENT)) {","                    identifier = tokenStream.token().value;","","                    //The value 'auto' may not be used as a page name and MUST be treated as a syntax error.","                    if (identifier.toLowerCase() === \"auto\") {","                        this._unexpectedToken(tokenStream.token());","                    }","                }","","                //see if there's a colon upcoming","                if (tokenStream.peek() === Tokens.COLON) {","                    pseudoPage = this._pseudo_page();","                }","","                this._readWhitespace();","","                this.fire({","                    type:   \"startpage\",","                    id:     identifier,","                    pseudo: pseudoPage,","                    line:   line,","                    col:    col","                });","","                this._readDeclarations(true, true);","","                this.fire({","                    type:   \"endpage\",","                    id:     identifier,","                    pseudo: pseudoPage,","                    line:   line,","                    col:    col","                });","","            },","","            //CSS3 Paged Media","            _margin: function() {","                /*","                 * margin :","                 *    margin_sym S* '{' declaration [ ';' S* declaration? ]* '}' S*","                 *    ;","                 */","                var tokenStream = this._tokenStream,","                    line,","                    col,","                    marginSym   = this._margin_sym();","","                if (marginSym) {","                    line = tokenStream.token().startLine;","                    col = tokenStream.token().startCol;","","                    this.fire({","                        type: \"startpagemargin\",","                        margin: marginSym,","                        line:   line,","                        col:    col","                    });","","                    this._readDeclarations(true);","","                    this.fire({","                        type: \"endpagemargin\",","                        margin: marginSym,","                        line:   line,","                        col:    col","                    });","                    return true;","                } else {","                    return false;","                }","            },","","            //CSS3 Paged Media","            _margin_sym: function() {","","                /*","                 * margin_sym :","                 *    TOPLEFTCORNER_SYM |","                 *    TOPLEFT_SYM |","                 *    TOPCENTER_SYM |","                 *    TOPRIGHT_SYM |","                 *    TOPRIGHTCORNER_SYM |","                 *    BOTTOMLEFTCORNER_SYM |","                 *    BOTTOMLEFT_SYM |","                 *    BOTTOMCENTER_SYM |","                 *    BOTTOMRIGHT_SYM |","                 *    BOTTOMRIGHTCORNER_SYM |","                 *    LEFTTOP_SYM |","                 *    LEFTMIDDLE_SYM |","                 *    LEFTBOTTOM_SYM |","                 *    RIGHTTOP_SYM |","                 *    RIGHTMIDDLE_SYM |","                 *    RIGHTBOTTOM_SYM","                 *    ;","                 */","","                var tokenStream = this._tokenStream;","","                if (tokenStream.match([Tokens.TOPLEFTCORNER_SYM, Tokens.TOPLEFT_SYM,","                        Tokens.TOPCENTER_SYM, Tokens.TOPRIGHT_SYM, Tokens.TOPRIGHTCORNER_SYM,","                        Tokens.BOTTOMLEFTCORNER_SYM, Tokens.BOTTOMLEFT_SYM,","                        Tokens.BOTTOMCENTER_SYM, Tokens.BOTTOMRIGHT_SYM,","                        Tokens.BOTTOMRIGHTCORNER_SYM, Tokens.LEFTTOP_SYM,","                        Tokens.LEFTMIDDLE_SYM, Tokens.LEFTBOTTOM_SYM, Tokens.RIGHTTOP_SYM,","                        Tokens.RIGHTMIDDLE_SYM, Tokens.RIGHTBOTTOM_SYM])) {","                    return SyntaxUnit.fromToken(tokenStream.token());","                } else {","                    return null;","                }","","            },","","            _pseudo_page: function() {","                /*","                 * pseudo_page","                 *   : ':' IDENT","                 *   ;","                 */","","                var tokenStream = this._tokenStream;","","                tokenStream.mustMatch(Tokens.COLON);","                tokenStream.mustMatch(Tokens.IDENT);","","                //TODO: CSS3 Paged Media says only \"left\", \"center\", and \"right\" are allowed","","                return tokenStream.token().value;","            },","","            _font_face: function() {","                /*","                 * font_face","                 *   : FONT_FACE_SYM S*","                 *     '{' S* declaration [ ';' S* declaration ]* '}' S*","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    line,","                    col;","","                //look for @page","                tokenStream.mustMatch(Tokens.FONT_FACE_SYM);","                line = tokenStream.token().startLine;","                col = tokenStream.token().startCol;","","                this._readWhitespace();","","                this.fire({","                    type:   \"startfontface\",","                    line:   line,","                    col:    col","                });","","                this._readDeclarations(true);","","                this.fire({","                    type:   \"endfontface\",","                    line:   line,","                    col:    col","                });","            },","","            _viewport: function() {","                /*","                 * viewport","                 *   : VIEWPORT_SYM S*","                 *     '{' S* declaration? [ ';' S* declaration? ]* '}' S*","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    line,","                    col;","","                tokenStream.mustMatch(Tokens.VIEWPORT_SYM);","                line = tokenStream.token().startLine;","                col = tokenStream.token().startCol;","","                this._readWhitespace();","","                this.fire({","                    type:   \"startviewport\",","                    line:   line,","                    col:    col","                });","","                this._readDeclarations(true);","","                this.fire({","                    type:   \"endviewport\",","                    line:   line,","                    col:    col","                });","","            },","","            _document: function() {","                /*","                 * document","                 *   : DOCUMENT_SYM S*","                 *     _document_function [ ',' S* _document_function ]* S*","                 *     '{' S* ruleset* '}'","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    token,","                    functions = [],","                    prefix = \"\";","","                tokenStream.mustMatch(Tokens.DOCUMENT_SYM);","                token = tokenStream.token();","                if (/^@\\-([^\\-]+)\\-/.test(token.value)) {","                    prefix = RegExp.$1;","                }","","                this._readWhitespace();","                functions.push(this._document_function());","","                while (tokenStream.match(Tokens.COMMA)) {","                    this._readWhitespace();","                    functions.push(this._document_function());","                }","","                tokenStream.mustMatch(Tokens.LBRACE);","                this._readWhitespace();","","                this.fire({","                    type:      \"startdocument\",","                    functions: functions,","                    prefix:    prefix,","                    line:      token.startLine,","                    col:       token.startCol","                });","","                var ok = true;","                while (ok) {","                    switch (tokenStream.peek()) {","                        case Tokens.PAGE_SYM:","                            this._page();","                            break;","                        case Tokens.FONT_FACE_SYM:","                            this._font_face();","                            break;","                        case Tokens.VIEWPORT_SYM:","                            this._viewport();","                            break;","                        case Tokens.MEDIA_SYM:","                            this._media();","                            break;","                        case Tokens.KEYFRAMES_SYM:","                            this._keyframes();","                            break;","                        case Tokens.DOCUMENT_SYM:","                            this._document();","                            break;","                        default:","                            ok = Boolean(this._ruleset());","                    }","                }","","                tokenStream.mustMatch(Tokens.RBRACE);","                token = tokenStream.token();","                this._readWhitespace();","","                this.fire({","                    type:      \"enddocument\",","                    functions: functions,","                    prefix:    prefix,","                    line:      token.startLine,","                    col:       token.startCol","                });","            },","","            _document_function: function() {","                /*","                 * document_function","                 *   : function | URI S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    value;","","                if (tokenStream.match(Tokens.URI)) {","                    value = tokenStream.token().value;","                    this._readWhitespace();","                } else {","                    value = this._function();","                }","","                return value;","            },","","            _operator: function(inFunction) {","","                /*","                 * operator (outside function)","                 *  : '/' S* | ',' S* | /( empty )/","                 * operator (inside function)","                 *  : '/' S* | '+' S* | '*' S* | '-' S* /( empty )/","                 *  ;","                 */","","                var tokenStream = this._tokenStream,","                    token       = null;","","                if (tokenStream.match([Tokens.SLASH, Tokens.COMMA]) ||","                    (inFunction && tokenStream.match([Tokens.PLUS, Tokens.STAR, Tokens.MINUS]))) {","                    token =  tokenStream.token();","                    this._readWhitespace();","                }","                return token ? PropertyValuePart.fromToken(token) : null;","","            },","","            _combinator: function() {","","                /*","                 * combinator","                 *  : PLUS S* | GREATER S* | TILDE S* | S+","                 *  ;","                 */","","                var tokenStream = this._tokenStream,","                    value       = null,","                    token;","","                if (tokenStream.match([Tokens.PLUS, Tokens.GREATER, Tokens.TILDE])) {","                    token = tokenStream.token();","                    value = new Combinator(token.value, token.startLine, token.startCol);","                    this._readWhitespace();","                }","","                return value;","            },","","            _unary_operator: function() {","","                /*","                 * unary_operator","                 *  : '-' | '+'","                 *  ;","                 */","","                var tokenStream = this._tokenStream;","","                if (tokenStream.match([Tokens.MINUS, Tokens.PLUS])) {","                    return tokenStream.token().value;","                } else {","                    return null;","                }","            },","","            _property: function() {","","                /*","                 * property","                 *   : IDENT S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    value       = null,","                    hack        = null,","                    tokenValue,","                    token,","                    line,","                    col;","","                //check for star hack - throws error if not allowed","                if (tokenStream.peek() === Tokens.STAR && this.options.starHack) {","                    tokenStream.get();","                    token = tokenStream.token();","                    hack = token.value;","                    line = token.startLine;","                    col = token.startCol;","                }","","                if (tokenStream.match(Tokens.IDENT)) {","                    token = tokenStream.token();","                    tokenValue = token.value;","","                    //check for underscore hack - no error if not allowed because it's valid CSS syntax","                    if (tokenValue.charAt(0) === \"_\" && this.options.underscoreHack) {","                        hack = \"_\";","                        tokenValue = tokenValue.substring(1);","                    }","","                    value = new PropertyName(tokenValue, hack, (line||token.startLine), (col||token.startCol));","                    this._readWhitespace();","                }","","                return value;","            },","","            //Augmented with CSS3 Selectors","            _ruleset: function() {","                /*","                 * ruleset","                 *   : selectors_group","                 *     '{' S* declaration? [ ';' S* declaration? ]* '}' S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    tt,","                    selectors;","","","                /*","                 * Error Recovery: If even a single selector fails to parse,","                 * then the entire ruleset should be thrown away.","                 */","                try {","                    selectors = this._selectors_group();","                } catch (ex) {","                    if (ex instanceof SyntaxError && !this.options.strict) {","","                        //fire error event","                        this.fire({","                            type:       \"error\",","                            error:      ex,","                            message:    ex.message,","                            line:       ex.line,","                            col:        ex.col","                        });","","                        //skip over everything until closing brace","                        tt = tokenStream.advance([Tokens.RBRACE]);","                        if (tt === Tokens.RBRACE) {","                            //if there's a right brace, the rule is finished so don't do anything","                        } else {","                            //otherwise, rethrow the error because it wasn't handled properly","                            throw ex;","                        }","","                    } else {","                        //not a syntax error, rethrow it","                        throw ex;","                    }","","                    //trigger parser to continue","                    return true;","                }","","                //if it got here, all selectors parsed","                if (selectors) {","","                    this.fire({","                        type:       \"startrule\",","                        selectors:  selectors,","                        line:       selectors[0].line,","                        col:        selectors[0].col","                    });","","                    this._readDeclarations(true);","","                    this.fire({","                        type:       \"endrule\",","                        selectors:  selectors,","                        line:       selectors[0].line,","                        col:        selectors[0].col","                    });","","                }","","                return selectors;","","            },","","            //CSS3 Selectors","            _selectors_group: function() {","","                /*","                 * selectors_group","                 *   : selector [ COMMA S* selector ]*","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    selectors   = [],","                    selector;","","                selector = this._selector();","                if (selector !== null) {","","                    selectors.push(selector);","                    while (tokenStream.match(Tokens.COMMA)) {","                        this._readWhitespace();","                        selector = this._selector();","                        if (selector !== null) {","                            selectors.push(selector);","                        } else {","                            this._unexpectedToken(tokenStream.LT(1));","                        }","                    }","                }","","                return selectors.length ? selectors : null;","            },","","            //CSS3 Selectors","            _selector: function() {","                /*","                 * selector","                 *   : simple_selector_sequence [ combinator simple_selector_sequence ]*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    selector    = [],","                    nextSelector = null,","                    combinator  = null,","                    ws          = null;","","                //if there's no simple selector, then there's no selector","                nextSelector = this._simple_selector_sequence();","                if (nextSelector === null) {","                    return null;","                }","","                selector.push(nextSelector);","","                do {","","                    //look for a combinator","                    combinator = this._combinator();","","                    if (combinator !== null) {","                        selector.push(combinator);","                        nextSelector = this._simple_selector_sequence();","","                        //there must be a next selector","                        if (nextSelector === null) {","                            this._unexpectedToken(tokenStream.LT(1));","                        } else {","","                            //nextSelector is an instance of SelectorPart","                            selector.push(nextSelector);","                        }","                    } else {","","                        //if there's not whitespace, we're done","                        if (this._readWhitespace()) {","","                            //add whitespace separator","                            ws = new Combinator(tokenStream.token().value, tokenStream.token().startLine, tokenStream.token().startCol);","","                            //combinator is not required","                            combinator = this._combinator();","","                            //selector is required if there's a combinator","                            nextSelector = this._simple_selector_sequence();","                            if (nextSelector === null) {","                                if (combinator !== null) {","                                    this._unexpectedToken(tokenStream.LT(1));","                                }","                            } else {","","                                if (combinator !== null) {","                                    selector.push(combinator);","                                } else {","                                    selector.push(ws);","                                }","","                                selector.push(nextSelector);","                            }","                        } else {","                            break;","                        }","","                    }","                } while (true);","","                return new Selector(selector, selector[0].line, selector[0].col);","            },","","            //CSS3 Selectors","            _simple_selector_sequence: function() {","                /*","                 * simple_selector_sequence","                 *   : [ type_selector | universal ]","                 *     [ HASH | class | attrib | pseudo | negation ]*","                 *   | [ HASH | class | attrib | pseudo | negation ]+","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","","                    //parts of a simple selector","                    elementName = null,","                    modifiers   = [],","","                    //complete selector text","                    selectorText= \"\",","","                    //the different parts after the element name to search for","                    components  = [","                        //HASH","                        function() {","                            return tokenStream.match(Tokens.HASH) ?","                                    new SelectorSubPart(tokenStream.token().value, \"id\", tokenStream.token().startLine, tokenStream.token().startCol) :","                                    null;","                        },","                        this._class,","                        this._attrib,","                        this._pseudo,","                        this._negation","                    ],","                    i           = 0,","                    len         = components.length,","                    component   = null,","                    line,","                    col;","","","                //get starting line and column for the selector","                line = tokenStream.LT(1).startLine;","                col = tokenStream.LT(1).startCol;","","                elementName = this._type_selector();","                if (!elementName) {","                    elementName = this._universal();","                }","","                if (elementName !== null) {","                    selectorText += elementName;","                }","","                while (true) {","","                    //whitespace means we're done","                    if (tokenStream.peek() === Tokens.S) {","                        break;","                    }","","                    //check for each component","                    while (i < len && component === null) {","                        component = components[i++].call(this);","                    }","","                    if (component === null) {","","                        //we don't have a selector","                        if (selectorText === \"\") {","                            return null;","                        } else {","                            break;","                        }","                    } else {","                        i = 0;","                        modifiers.push(component);","                        selectorText += component.toString();","                        component = null;","                    }","                }","","","                return selectorText !== \"\" ?","                        new SelectorPart(elementName, modifiers, selectorText, line, col) :","                        null;","            },","","            //CSS3 Selectors","            _type_selector: function() {","                /*","                 * type_selector","                 *   : [ namespace_prefix ]? element_name","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    ns          = this._namespace_prefix(),","                    elementName = this._element_name();","","                if (!elementName) {","                    /*","                     * Need to back out the namespace that was read due to both","                     * type_selector and universal reading namespace_prefix","                     * first. Kind of hacky, but only way I can figure out","                     * right now how to not change the grammar.","                     */","                    if (ns) {","                        tokenStream.unget();","                        if (ns.length > 1) {","                            tokenStream.unget();","                        }","                    }","","                    return null;","                } else {","                    if (ns) {","                        elementName.text = ns + elementName.text;","                        elementName.col -= ns.length;","                    }","                    return elementName;","                }","            },","","            //CSS3 Selectors","            _class: function() {","                /*","                 * class","                 *   : '.' IDENT","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    token;","","                if (tokenStream.match(Tokens.DOT)) {","                    tokenStream.mustMatch(Tokens.IDENT);","                    token = tokenStream.token();","                    return new SelectorSubPart(\".\" + token.value, \"class\", token.startLine, token.startCol - 1);","                } else {","                    return null;","                }","","            },","","            //CSS3 Selectors","            _element_name: function() {","                /*","                 * element_name","                 *   : IDENT","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    token;","","                if (tokenStream.match(Tokens.IDENT)) {","                    token = tokenStream.token();","                    return new SelectorSubPart(token.value, \"elementName\", token.startLine, token.startCol);","","                } else {","                    return null;","                }","            },","","            //CSS3 Selectors","            _namespace_prefix: function() {","                /*","                 * namespace_prefix","                 *   : [ IDENT | '*' ]? '|'","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    value       = \"\";","","                //verify that this is a namespace prefix","                if (tokenStream.LA(1) === Tokens.PIPE || tokenStream.LA(2) === Tokens.PIPE) {","","                    if (tokenStream.match([Tokens.IDENT, Tokens.STAR])) {","                        value += tokenStream.token().value;","                    }","","                    tokenStream.mustMatch(Tokens.PIPE);","                    value += \"|\";","","                }","","                return value.length ? value : null;","            },","","            //CSS3 Selectors","            _universal: function() {","                /*","                 * universal","                 *   : [ namespace_prefix ]? '*'","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    value       = \"\",","                    ns;","","                ns = this._namespace_prefix();","                if (ns) {","                    value += ns;","                }","","                if (tokenStream.match(Tokens.STAR)) {","                    value += \"*\";","                }","","                return value.length ? value : null;","","            },","","            //CSS3 Selectors","            _attrib: function() {","                /*","                 * attrib","                 *   : '[' S* [ namespace_prefix ]? IDENT S*","                 *         [ [ PREFIXMATCH |","                 *             SUFFIXMATCH |","                 *             SUBSTRINGMATCH |","                 *             '=' |","                 *             INCLUDES |","                 *             DASHMATCH ] S* [ IDENT | STRING ] S*","                 *         ]? ']'","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    value       = null,","                    ns,","                    token;","","                if (tokenStream.match(Tokens.LBRACKET)) {","                    token = tokenStream.token();","                    value = token.value;","                    value += this._readWhitespace();","","                    ns = this._namespace_prefix();","","                    if (ns) {","                        value += ns;","                    }","","                    tokenStream.mustMatch(Tokens.IDENT);","                    value += tokenStream.token().value;","                    value += this._readWhitespace();","","                    if (tokenStream.match([Tokens.PREFIXMATCH, Tokens.SUFFIXMATCH, Tokens.SUBSTRINGMATCH,","                            Tokens.EQUALS, Tokens.INCLUDES, Tokens.DASHMATCH])) {","","                        value += tokenStream.token().value;","                        value += this._readWhitespace();","","                        tokenStream.mustMatch([Tokens.IDENT, Tokens.STRING]);","                        value += tokenStream.token().value;","                        value += this._readWhitespace();","                    }","","                    tokenStream.mustMatch(Tokens.RBRACKET);","","                    return new SelectorSubPart(value + \"]\", \"attribute\", token.startLine, token.startCol);","                } else {","                    return null;","                }","            },","","            //CSS3 Selectors","            _pseudo: function() {","","                /*","                 * pseudo","                 *   : ':' ':'? [ IDENT | functional_pseudo ]","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    pseudo      = null,","                    colons      = \":\",","                    line,","                    col;","","                if (tokenStream.match(Tokens.COLON)) {","","                    if (tokenStream.match(Tokens.COLON)) {","                        colons += \":\";","                    }","","                    if (tokenStream.match(Tokens.IDENT)) {","                        pseudo = tokenStream.token().value;","                        line = tokenStream.token().startLine;","                        col = tokenStream.token().startCol - colons.length;","                    } else if (tokenStream.peek() === Tokens.FUNCTION) {","                        line = tokenStream.LT(1).startLine;","                        col = tokenStream.LT(1).startCol - colons.length;","                        pseudo = this._functional_pseudo();","                    }","","                    if (pseudo) {","                        pseudo = new SelectorSubPart(colons + pseudo, \"pseudo\", line, col);","                    } else {","                        var startLine = tokenStream.LT(1).startLine,","                            startCol  = tokenStream.LT(0).startCol;","                        throw new SyntaxError(\"Expected a `FUNCTION` or `IDENT` after colon at line \" + startLine + \", col \" + startCol + \".\", startLine, startCol);","                    }","                }","","                return pseudo;","            },","","            //CSS3 Selectors","            _functional_pseudo: function() {","                /*","                 * functional_pseudo","                 *   : FUNCTION S* expression ')'","                 *   ;","                */","","                var tokenStream = this._tokenStream,","                    value = null;","","                if (tokenStream.match(Tokens.FUNCTION)) {","                    value = tokenStream.token().value;","                    value += this._readWhitespace();","                    value += this._expression();","                    tokenStream.mustMatch(Tokens.RPAREN);","                    value += \")\";","                }","","                return value;","            },","","            //CSS3 Selectors","            _expression: function() {","                /*","                 * expression","                 *   : [ [ PLUS | '-' | DIMENSION | NUMBER | STRING | IDENT ] S* ]+","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    value       = \"\";","","                while (tokenStream.match([Tokens.PLUS, Tokens.MINUS, Tokens.DIMENSION,","                        Tokens.NUMBER, Tokens.STRING, Tokens.IDENT, Tokens.LENGTH,","                        Tokens.FREQ, Tokens.ANGLE, Tokens.TIME,","                        Tokens.RESOLUTION, Tokens.SLASH])) {","","                    value += tokenStream.token().value;","                    value += this._readWhitespace();","                }","","                return value.length ? value : null;","","            },","","            //CSS3 Selectors","            _negation: function() {","                /*","                 * negation","                 *   : NOT S* negation_arg S* ')'","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    line,","                    col,","                    value       = \"\",","                    arg,","                    subpart     = null;","","                if (tokenStream.match(Tokens.NOT)) {","                    value = tokenStream.token().value;","                    line = tokenStream.token().startLine;","                    col = tokenStream.token().startCol;","                    value += this._readWhitespace();","                    arg = this._negation_arg();","                    value += arg;","                    value += this._readWhitespace();","                    tokenStream.match(Tokens.RPAREN);","                    value += tokenStream.token().value;","","                    subpart = new SelectorSubPart(value, \"not\", line, col);","                    subpart.args.push(arg);","                }","","                return subpart;","            },","","            //CSS3 Selectors","            _negation_arg: function() {","                /*","                 * negation_arg","                 *   : type_selector | universal | HASH | class | attrib | pseudo","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    args        = [","                        this._type_selector,","                        this._universal,","                        function() {","                            return tokenStream.match(Tokens.HASH) ?","                                    new SelectorSubPart(tokenStream.token().value, \"id\", tokenStream.token().startLine, tokenStream.token().startCol) :","                                    null;","                        },","                        this._class,","                        this._attrib,","                        this._pseudo","                    ],","                    arg         = null,","                    i           = 0,","                    len         = args.length,","                    line,","                    col,","                    part;","","                line = tokenStream.LT(1).startLine;","                col = tokenStream.LT(1).startCol;","","                while (i < len && arg === null) {","","                    arg = args[i].call(this);","                    i++;","                }","","                //must be a negation arg","                if (arg === null) {","                    this._unexpectedToken(tokenStream.LT(1));","                }","","                //it's an element name","                if (arg.type === \"elementName\") {","                    part = new SelectorPart(arg, [], arg.toString(), line, col);","                } else {","                    part = new SelectorPart(null, [arg], arg.toString(), line, col);","                }","","                return part;","            },","","            _declaration: function() {","","                /*","                 * declaration","                 *   : property ':' S* expr prio?","                 *   | /( empty )/","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    property    = null,","                    expr        = null,","                    prio        = null,","                    invalid     = null,","                    propertyName= \"\";","","                property = this._property();","                if (property !== null) {","","                    tokenStream.mustMatch(Tokens.COLON);","                    this._readWhitespace();","","                    expr = this._expr();","","                    //if there's no parts for the value, it's an error","                    if (!expr || expr.length === 0) {","                        this._unexpectedToken(tokenStream.LT(1));","                    }","","                    prio = this._prio();","","                    /*","                     * If hacks should be allowed, then only check the root","                     * property. If hacks should not be allowed, treat","                     * _property or *property as invalid properties.","                     */","                    propertyName = property.toString();","                    if (this.options.starHack && property.hack === \"*\" ||","                            this.options.underscoreHack && property.hack === \"_\") {","","                        propertyName = property.text;","                    }","","                    try {","                        this._validateProperty(propertyName, expr);","                    } catch (ex) {","                        invalid = ex;","                    }","","                    this.fire({","                        type:       \"property\",","                        property:   property,","                        value:      expr,","                        important:  prio,","                        line:       property.line,","                        col:        property.col,","                        invalid:    invalid","                    });","","                    return true;","                } else {","                    return false;","                }","            },","","            _prio: function() {","                /*","                 * prio","                 *   : IMPORTANT_SYM S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    result      = tokenStream.match(Tokens.IMPORTANT_SYM);","","                this._readWhitespace();","                return result;","            },","","            _expr: function(inFunction) {","                /*","                 * expr","                 *   : term [ operator term ]*","                 *   ;","                 */","","                var values      = [],","                    //valueParts    = [],","                    value       = null,","                    operator    = null;","","                value = this._term(inFunction);","                if (value !== null) {","","                    values.push(value);","","                    do {","                        operator = this._operator(inFunction);","","                        //if there's an operator, keep building up the value parts","                        if (operator) {","                            values.push(operator);","                        } /*else {","                            //if there's not an operator, you have a full value","                            values.push(new PropertyValue(valueParts, valueParts[0].line, valueParts[0].col));","                            valueParts = [];","                        }*/","","                        value = this._term(inFunction);","","                        if (value === null) {","                            break;","                        } else {","                            values.push(value);","                        }","                    } while (true);","                }","","                //cleanup","                /*if (valueParts.length) {","                    values.push(new PropertyValue(valueParts, valueParts[0].line, valueParts[0].col));","                }*/","","                return values.length > 0 ? new PropertyValue(values, values[0].line, values[0].col) : null;","            },","","            _term: function(inFunction) {","","                /*","                 * term","                 *   : unary_operator?","                 *     [ NUMBER S* | PERCENTAGE S* | LENGTH S* | ANGLE S* |","                 *       TIME S* | FREQ S* | function | ie_function ]","                 *   | STRING S* | IDENT S* | URI S* | UNICODERANGE S* | hexcolor","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    unary       = null,","                    value       = null,","                    endChar     = null,","                    part        = null,","                    token,","                    line,","                    col;","","                //returns the operator or null","                unary = this._unary_operator();","                if (unary !== null) {","                    line = tokenStream.token().startLine;","                    col = tokenStream.token().startCol;","                }","","                //exception for IE filters","                if (tokenStream.peek() === Tokens.IE_FUNCTION && this.options.ieFilters) {","","                    value = this._ie_function();","                    if (unary === null) {","                        line = tokenStream.token().startLine;","                        col = tokenStream.token().startCol;","                    }","","                //see if it's a simple block","                } else if (inFunction && tokenStream.match([Tokens.LPAREN, Tokens.LBRACE, Tokens.LBRACKET])) {","","                    token = tokenStream.token();","                    endChar = token.endChar;","                    value = token.value + this._expr(inFunction).text;","                    if (unary === null) {","                        line = tokenStream.token().startLine;","                        col = tokenStream.token().startCol;","                    }","                    tokenStream.mustMatch(Tokens.type(endChar));","                    value += endChar;","                    this._readWhitespace();","","                //see if there's a simple match","                } else if (tokenStream.match([Tokens.NUMBER, Tokens.PERCENTAGE, Tokens.LENGTH,","                        Tokens.ANGLE, Tokens.TIME,","                        Tokens.FREQ, Tokens.STRING, Tokens.IDENT, Tokens.URI, Tokens.UNICODE_RANGE])) {","","                    value = tokenStream.token().value;","                    if (unary === null) {","                        line = tokenStream.token().startLine;","                        col = tokenStream.token().startCol;","                        // Correct potentially-inaccurate IDENT parsing in","                        // PropertyValuePart constructor.","                        part = PropertyValuePart.fromToken(tokenStream.token());","                    }","                    this._readWhitespace();","                } else {","","                    //see if it's a color","                    token = this._hexcolor();","                    if (token === null) {","","                        //if there's no unary, get the start of the next token for line/col info","                        if (unary === null) {","                            line = tokenStream.LT(1).startLine;","                            col = tokenStream.LT(1).startCol;","                        }","","                        //has to be a function","                        if (value === null) {","","                            /*","                             * This checks for alpha(opacity=0) style of IE","                             * functions. IE_FUNCTION only presents progid: style.","                             */","                            if (tokenStream.LA(3) === Tokens.EQUALS && this.options.ieFilters) {","                                value = this._ie_function();","                            } else {","                                value = this._function();","                            }","                        }","","                        /*if (value === null) {","                            return null;","                            //throw new Error(\"Expected identifier at line \" + tokenStream.token().startLine + \", character \" +  tokenStream.token().startCol + \".\");","                        }*/","","                    } else {","                        value = token.value;","                        if (unary === null) {","                            line = token.startLine;","                            col = token.startCol;","                        }","                    }","","                }","","                return part !== null ? part : value !== null ?","                        new PropertyValuePart(unary !== null ? unary + value : value, line, col) :","                        null;","","            },","","            _function: function() {","","                /*","                 * function","                 *   : FUNCTION S* expr ')' S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    functionText = null,","                    expr        = null,","                    lt;","","                if (tokenStream.match(Tokens.FUNCTION)) {","                    functionText = tokenStream.token().value;","                    this._readWhitespace();","                    expr = this._expr(true);","                    functionText += expr;","","                    //START: Horrible hack in case it's an IE filter","                    if (this.options.ieFilters && tokenStream.peek() === Tokens.EQUALS) {","                        do {","","                            if (this._readWhitespace()) {","                                functionText += tokenStream.token().value;","                            }","","                            //might be second time in the loop","                            if (tokenStream.LA(0) === Tokens.COMMA) {","                                functionText += tokenStream.token().value;","                            }","","                            tokenStream.match(Tokens.IDENT);","                            functionText += tokenStream.token().value;","","                            tokenStream.match(Tokens.EQUALS);","                            functionText += tokenStream.token().value;","","                            //functionText += this._term();","                            lt = tokenStream.peek();","                            while (lt !== Tokens.COMMA && lt !== Tokens.S && lt !== Tokens.RPAREN) {","                                tokenStream.get();","                                functionText += tokenStream.token().value;","                                lt = tokenStream.peek();","                            }","                        } while (tokenStream.match([Tokens.COMMA, Tokens.S]));","                    }","","                    //END: Horrible Hack","","                    tokenStream.match(Tokens.RPAREN);","                    functionText += \")\";","                    this._readWhitespace();","                }","","                return functionText;","            },","","            _ie_function: function() {","","                /* (My own extension)","                 * ie_function","                 *   : IE_FUNCTION S* IDENT '=' term [S* ','? IDENT '=' term]+ ')' S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    functionText = null,","                    lt;","","                //IE function can begin like a regular function, too","                if (tokenStream.match([Tokens.IE_FUNCTION, Tokens.FUNCTION])) {","                    functionText = tokenStream.token().value;","","                    do {","","                        if (this._readWhitespace()) {","                            functionText += tokenStream.token().value;","                        }","","                        //might be second time in the loop","                        if (tokenStream.LA(0) === Tokens.COMMA) {","                            functionText += tokenStream.token().value;","                        }","","                        tokenStream.match(Tokens.IDENT);","                        functionText += tokenStream.token().value;","","                        tokenStream.match(Tokens.EQUALS);","                        functionText += tokenStream.token().value;","","                        //functionText += this._term();","                        lt = tokenStream.peek();","                        while (lt !== Tokens.COMMA && lt !== Tokens.S && lt !== Tokens.RPAREN) {","                            tokenStream.get();","                            functionText += tokenStream.token().value;","                            lt = tokenStream.peek();","                        }","                    } while (tokenStream.match([Tokens.COMMA, Tokens.S]));","","                    tokenStream.match(Tokens.RPAREN);","                    functionText += \")\";","                    this._readWhitespace();","                }","","                return functionText;","            },","","            _hexcolor: function() {","                /*","                 * There is a constraint on the color that it must","                 * have either 3 or 6 hex-digits (i.e., [0-9a-fA-F])","                 * after the \"#\"; e.g., \"#000\" is OK, but \"#abcd\" is not.","                 *","                 * hexcolor","                 *   : HASH S*","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    token = null,","                    color;","","                if (tokenStream.match(Tokens.HASH)) {","","                    //need to do some validation here","","                    token = tokenStream.token();","                    color = token.value;","                    if (!/#[a-f0-9]{3,6}/i.test(color)) {","                        throw new SyntaxError(\"Expected a hex color but found '\" + color + \"' at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);","                    }","                    this._readWhitespace();","                }","","                return token;","            },","","            //-----------------------------------------------------------------","            // Animations methods","            //-----------------------------------------------------------------","","            _keyframes: function() {","","                /*","                 * keyframes:","                 *   : KEYFRAMES_SYM S* keyframe_name S* '{' S* keyframe_rule* '}' {","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    token,","                    tt,","                    name,","                    prefix = \"\";","","                tokenStream.mustMatch(Tokens.KEYFRAMES_SYM);","                token = tokenStream.token();","                if (/^@\\-([^\\-]+)\\-/.test(token.value)) {","                    prefix = RegExp.$1;","                }","","                this._readWhitespace();","                name = this._keyframe_name();","","                this._readWhitespace();","                tokenStream.mustMatch(Tokens.LBRACE);","","                this.fire({","                    type:   \"startkeyframes\",","                    name:   name,","                    prefix: prefix,","                    line:   token.startLine,","                    col:    token.startCol","                });","","                this._readWhitespace();","                tt = tokenStream.peek();","","                //check for key","                while (tt === Tokens.IDENT || tt === Tokens.PERCENTAGE) {","                    this._keyframe_rule();","                    this._readWhitespace();","                    tt = tokenStream.peek();","                }","","                this.fire({","                    type:   \"endkeyframes\",","                    name:   name,","                    prefix: prefix,","                    line:   token.startLine,","                    col:    token.startCol","                });","","                this._readWhitespace();","                tokenStream.mustMatch(Tokens.RBRACE);","                this._readWhitespace();","","            },","","            _keyframe_name: function() {","","                /*","                 * keyframe_name:","                 *   : IDENT","                 *   | STRING","                 *   ;","                 */","                var tokenStream = this._tokenStream;","","                tokenStream.mustMatch([Tokens.IDENT, Tokens.STRING]);","                return SyntaxUnit.fromToken(tokenStream.token());","            },","","            _keyframe_rule: function() {","","                /*","                 * keyframe_rule:","                 *   : key_list S*","                 *     '{' S* declaration [ ';' S* declaration ]* '}' S*","                 *   ;","                 */","                var keyList = this._key_list();","","                this.fire({","                    type:   \"startkeyframerule\",","                    keys:   keyList,","                    line:   keyList[0].line,","                    col:    keyList[0].col","                });","","                this._readDeclarations(true);","","                this.fire({","                    type:   \"endkeyframerule\",","                    keys:   keyList,","                    line:   keyList[0].line,","                    col:    keyList[0].col","                });","","            },","","            _key_list: function() {","","                /*","                 * key_list:","                 *   : key [ S* ',' S* key]*","                 *   ;","                 */","                var tokenStream = this._tokenStream,","                    keyList = [];","","                //must be least one key","                keyList.push(this._key());","","                this._readWhitespace();","","                while (tokenStream.match(Tokens.COMMA)) {","                    this._readWhitespace();","                    keyList.push(this._key());","                    this._readWhitespace();","                }","","                return keyList;","            },","","            _key: function() {","                /*","                 * There is a restriction that IDENT can be only \"from\" or \"to\".","                 *","                 * key","                 *   : PERCENTAGE","                 *   | IDENT","                 *   ;","                 */","","                var tokenStream = this._tokenStream,","                    token;","","                if (tokenStream.match(Tokens.PERCENTAGE)) {","                    return SyntaxUnit.fromToken(tokenStream.token());","                } else if (tokenStream.match(Tokens.IDENT)) {","                    token = tokenStream.token();","","                    if (/from|to/i.test(token.value)) {","                        return SyntaxUnit.fromToken(token);","                    }","","                    tokenStream.unget();","                }","","                //if it gets here, there wasn't a valid token, so time to explode","                this._unexpectedToken(tokenStream.LT(1));","            },","","            //-----------------------------------------------------------------","            // Helper methods","            //-----------------------------------------------------------------","","            /**","             * Not part of CSS grammar, but useful for skipping over","             * combination of white space and HTML-style comments.","             * @return {void}","             * @method _skipCruft","             * @private","             */","            _skipCruft: function() {","                while (this._tokenStream.match([Tokens.S, Tokens.CDO, Tokens.CDC])) {","                    //noop","                }","            },","","            /**","             * Not part of CSS grammar, but this pattern occurs frequently","             * in the official CSS grammar. Split out here to eliminate","             * duplicate code.","             * @param {Boolean} checkStart Indicates if the rule should check","             *      for the left brace at the beginning.","             * @param {Boolean} readMargins Indicates if the rule should check","             *      for margin patterns.","             * @return {void}","             * @method _readDeclarations","             * @private","             */","            _readDeclarations: function(checkStart, readMargins) {","                /*","                 * Reads the pattern","                 * S* '{' S* declaration [ ';' S* declaration ]* '}' S*","                 * or","                 * S* '{' S* [ declaration | margin ]? [ ';' S* [ declaration | margin ]? ]* '}' S*","                 * Note that this is how it is described in CSS3 Paged Media, but is actually incorrect.","                 * A semicolon is only necessary following a declaration if there's another declaration","                 * or margin afterwards.","                 */","                var tokenStream = this._tokenStream,","                    tt;","","","                this._readWhitespace();","","                if (checkStart) {","                    tokenStream.mustMatch(Tokens.LBRACE);","                }","","                this._readWhitespace();","","                try {","","                    while (true) {","","                        if (tokenStream.match(Tokens.SEMICOLON) || (readMargins && this._margin())) {","                            //noop","                        } else if (this._declaration()) {","                            if (!tokenStream.match(Tokens.SEMICOLON)) {","                                break;","                            }","                        } else {","                            break;","                        }","","                        //if ((!this._margin() && !this._declaration()) || !tokenStream.match(Tokens.SEMICOLON)){","                        //    break;","                        //}","                        this._readWhitespace();","                    }","","                    tokenStream.mustMatch(Tokens.RBRACE);","                    this._readWhitespace();","","                } catch (ex) {","                    if (ex instanceof SyntaxError && !this.options.strict) {","","                        //fire error event","                        this.fire({","                            type:       \"error\",","                            error:      ex,","                            message:    ex.message,","                            line:       ex.line,","                            col:        ex.col","                        });","","                        //see if there's another declaration","                        tt = tokenStream.advance([Tokens.SEMICOLON, Tokens.RBRACE]);","                        if (tt === Tokens.SEMICOLON) {","                            //if there's a semicolon, then there might be another declaration","                            this._readDeclarations(false, readMargins);","                        } else if (tt !== Tokens.RBRACE) {","                            //if there's a right brace, the rule is finished so don't do anything","                            //otherwise, rethrow the error because it wasn't handled properly","                            throw ex;","                        }","","                    } else {","                        //not a syntax error, rethrow it","                        throw ex;","                    }","                }","","            },","","            /**","             * In some cases, you can end up with two white space tokens in a","             * row. Instead of making a change in every function that looks for","             * white space, this function is used to match as much white space","             * as necessary.","             * @method _readWhitespace","             * @return {String} The white space if found, empty string if not.","             * @private","             */","            _readWhitespace: function() {","","                var tokenStream = this._tokenStream,","                    ws = \"\";","","                while (tokenStream.match(Tokens.S)) {","                    ws += tokenStream.token().value;","                }","","                return ws;","            },","","","            /**","             * Throws an error when an unexpected token is found.","             * @param {Object} token The token that was found.","             * @method _unexpectedToken","             * @return {void}","             * @private","             */","            _unexpectedToken: function(token) {","                throw new SyntaxError(\"Unexpected token '\" + token.value + \"' at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);","            },","","            /**","             * Helper method used for parsing subparts of a style sheet.","             * @return {void}","             * @method _verifyEnd","             * @private","             */","            _verifyEnd: function() {","                if (this._tokenStream.LA(1) !== Tokens.EOF) {","                    this._unexpectedToken(this._tokenStream.LT(1));","                }","            },","","            //-----------------------------------------------------------------","            // Validation methods","            //-----------------------------------------------------------------","            _validateProperty: function(property, value) {","                Validation.validate(property, value);","            },","","            //-----------------------------------------------------------------","            // Parsing methods","            //-----------------------------------------------------------------","","            parse: function(input) {","                this._tokenStream = new TokenStream(input, Tokens);","                this._stylesheet();","            },","","            parseStyleSheet: function(input) {","                //just passthrough","                return this.parse(input);","            },","","            parseMediaQuery: function(input) {","                this._tokenStream = new TokenStream(input, Tokens);","                var result = this._media_query();","","                //if there's anything more, then it's an invalid selector","                this._verifyEnd();","","                //otherwise return result","                return result;","            },","","            /**","             * Parses a property value (everything after the semicolon).","             * @return {parserlib.css.PropertyValue} The property value.","             * @throws parserlib.util.SyntaxError If an unexpected token is found.","             * @method parserPropertyValue","             */","            parsePropertyValue: function(input) {","","                this._tokenStream = new TokenStream(input, Tokens);","                this._readWhitespace();","","                var result = this._expr();","","                //okay to have a trailing white space","                this._readWhitespace();","","                //if there's anything more, then it's an invalid selector","                this._verifyEnd();","","                //otherwise return result","                return result;","            },","","            /**","             * Parses a complete CSS rule, including selectors and","             * properties.","             * @param {String} input The text to parser.","             * @return {Boolean} True if the parse completed successfully, false if not.","             * @method parseRule","             */","            parseRule: function(input) {","                this._tokenStream = new TokenStream(input, Tokens);","","                //skip any leading white space","                this._readWhitespace();","","                var result = this._ruleset();","","                //skip any trailing white space","                this._readWhitespace();","","                //if there's anything more, then it's an invalid selector","                this._verifyEnd();","","                //otherwise return result","                return result;","            },","","            /**","             * Parses a single CSS selector (no comma)","             * @param {String} input The text to parse as a CSS selector.","             * @return {Selector} An object representing the selector.","             * @throws parserlib.util.SyntaxError If an unexpected token is found.","             * @method parseSelector","             */","            parseSelector: function(input) {","","                this._tokenStream = new TokenStream(input, Tokens);","","                //skip any leading white space","                this._readWhitespace();","","                var result = this._selector();","","                //skip any trailing white space","                this._readWhitespace();","","                //if there's anything more, then it's an invalid selector","                this._verifyEnd();","","                //otherwise return result","                return result;","            },","","            /**","             * Parses an HTML style attribute: a set of CSS declarations","             * separated by semicolons.","             * @param {String} input The text to parse as a style attribute","             * @return {void}","             * @method parseStyleAttribute","             */","            parseStyleAttribute: function(input) {","                input += \"}\"; // for error recovery in _readDeclarations()","                this._tokenStream = new TokenStream(input, Tokens);","                this._readDeclarations();","            }","        };","","    //copy over onto prototype","    for (prop in additions) {","        if (Object.prototype.hasOwnProperty.call(additions, prop)) {","            proto[prop] = additions[prop];","        }","    }","","    return proto;","}();","","","/*","nth","  : S* [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]? |","         ['-'|'+']? INTEGER | {O}{D}{D} | {E}{V}{E}{N} ] S*","  ;","*/",""],"l":{"3":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"34":1,"37":0,"40":0,"42":0,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"57":1,"59":1,"94":0,"99":0,"102":0,"104":0,"107":0,"108":0,"109":0,"113":0,"114":0,"115":0,"119":0,"122":0,"124":0,"126":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"148":0,"149":0,"150":0,"152":0,"153":0,"154":0,"156":0,"157":0,"160":0,"169":0,"170":0,"171":0,"174":0,"175":0,"176":0,"181":0,"183":0,"185":0,"186":0,"188":0,"191":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"201":0,"202":0,"203":0,"205":0,"206":0,"212":0,"213":0,"221":0,"225":0,"228":0,"229":0,"232":0,"236":0,"242":0,"243":0,"244":0,"246":0,"247":0,"249":0,"250":0,"252":0,"253":0,"255":0,"256":0,"273":0,"279":0,"280":0,"281":0,"283":0,"286":0,"288":0,"290":0,"293":0,"294":0,"296":0,"297":0,"314":0,"321":0,"322":0,"323":0,"324":0,"327":0,"328":0,"329":0,"332":0,"338":0,"340":0,"343":0,"344":0,"346":0,"347":0,"364":0,"368":0,"369":0,"370":0,"372":0,"373":0,"374":0,"376":0,"377":0,"379":0,"380":0,"387":0,"388":0,"389":0,"393":0,"394":0,"396":0,"411":0,"414":0,"415":0,"417":0,"418":0,"419":0,"421":0,"424":0,"425":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"446":0,"449":0,"450":0,"451":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"460":0,"461":0,"464":0,"465":0,"466":0,"469":0,"479":0,"481":0,"482":0,"484":0,"485":0,"486":0,"495":0,"501":0,"502":0,"503":0,"505":0,"507":0,"509":0,"510":0,"512":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"537":0,"538":0,"540":0,"556":0,"560":0,"562":0,"563":0,"566":0,"567":0,"568":0,"571":0,"586":0,"592":0,"593":0,"596":0,"597":0,"598":0,"600":0,"604":0,"606":0,"607":0,"608":0,"609":0,"611":0,"612":0,"613":0,"615":0,"618":0,"619":0,"621":0,"622":0,"623":0,"624":0,"627":0,"628":0,"632":0,"642":0,"659":0,"664":0,"666":0,"667":0,"669":0,"670":0,"671":0,"672":0,"675":0,"676":0,"678":0,"688":0,"690":0,"692":0,"694":0,"705":0,"712":0,"713":0,"714":0,"716":0,"718":0,"719":0,"722":0,"723":0,"728":0,"729":0,"732":0,"734":0,"742":0,"744":0,"761":0,"766":0,"767":0,"768":0,"770":0,"777":0,"779":0,"785":0,"787":0,"815":0,"817":0,"824":0,"826":0,"838":0,"840":0,"841":0,"845":0,"855":0,"860":0,"861":0,"862":0,"864":0,"866":0,"872":0,"874":0,"888":0,"892":0,"893":0,"894":0,"896":0,"898":0,"904":0,"906":0,"923":0,"928":0,"929":0,"930":0,"931":0,"934":0,"935":0,"937":0,"938":0,"939":0,"942":0,"943":0,"945":0,"953":0,"954":0,"955":0,"957":0,"958":0,"960":0,"961":0,"963":0,"964":0,"966":0,"967":0,"969":0,"970":0,"972":0,"973":0,"975":0,"979":0,"980":0,"981":0,"983":0,"999":0,"1002":0,"1003":0,"1004":0,"1006":0,"1009":0,"1022":0,"1025":0,"1027":0,"1028":0,"1030":0,"1042":0,"1046":0,"1047":0,"1048":0,"1049":0,"1052":0,"1063":0,"1065":0,"1066":0,"1068":0,"1080":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1097":0,"1098":0,"1099":0,"1102":0,"1103":0,"1104":0,"1107":0,"1108":0,"1111":0,"1123":0,"1132":0,"1133":0,"1135":0,"1138":0,"1147":0,"1148":0,"1152":0,"1157":0,"1161":0,"1165":0,"1167":0,"1174":0,"1176":0,"1185":0,"1197":0,"1201":0,"1202":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1211":0,"1216":0,"1227":0,"1234":0,"1235":0,"1236":0,"1239":0,"1241":0,"1244":0,"1246":0,"1247":0,"1248":0,"1251":0,"1252":0,"1256":0,"1261":0,"1264":0,"1267":0,"1270":0,"1271":0,"1272":0,"1273":0,"1277":0,"1278":0,"1280":0,"1283":0,"1286":0,"1292":0,"1305":0,"1318":0,"1335":0,"1336":0,"1338":0,"1339":0,"1340":0,"1343":0,"1344":0,"1347":0,"1350":0,"1351":0,"1355":0,"1356":0,"1359":0,"1362":0,"1363":0,"1365":0,"1368":0,"1369":0,"1370":0,"1371":0,"1376":0,"1389":0,"1393":0,"1400":0,"1401":0,"1402":0,"1403":0,"1407":0,"1409":0,"1410":0,"1411":0,"1413":0,"1425":0,"1428":0,"1429":0,"1430":0,"1431":0,"1433":0,"1446":0,"1449":0,"1450":0,"1451":0,"1454":0,"1465":0,"1469":0,"1471":0,"1472":0,"1475":0,"1476":0,"1480":0,"1490":0,"1494":0,"1495":0,"1496":0,"1499":0,"1500":0,"1503":0,"1522":0,"1527":0,"1528":0,"1529":0,"1530":0,"1532":0,"1534":0,"1535":0,"1538":0,"1539":0,"1540":0,"1542":0,"1545":0,"1546":0,"1548":0,"1549":0,"1550":0,"1553":0,"1555":0,"1557":0,"1570":0,"1576":0,"1578":0,"1579":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1592":0,"1593":0,"1595":0,"1597":0,"1601":0,"1612":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1623":0,"1634":0,"1637":0,"1642":0,"1643":0,"1646":0,"1658":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1676":0,"1677":0,"1680":0,"1691":0,"1696":0,"1711":0,"1712":0,"1714":0,"1716":0,"1717":0,"1721":0,"1722":0,"1726":0,"1727":0,"1729":0,"1732":0,"1744":0,"1751":0,"1752":0,"1754":0,"1755":0,"1757":0,"1760":0,"1761":0,"1764":0,"1771":0,"1772":0,"1775":0,"1778":0,"1779":0,"1781":0,"1784":0,"1794":0,"1796":0,"1807":0,"1810":0,"1811":0,"1821":0,"1826":0,"1827":0,"1829":0,"1831":0,"1832":0,"1835":0,"1836":0,"1843":0,"1845":0,"1846":0,"1848":0,"1858":0,"1872":0,"1882":0,"1883":0,"1884":0,"1885":0,"1889":0,"1891":0,"1892":0,"1893":0,"1894":0,"1898":0,"1900":0,"1901":0,"1902":0,"1903":0,"1904":0,"1905":0,"1907":0,"1908":0,"1909":0,"1912":0,"1916":0,"1917":0,"1918":0,"1919":0,"1922":0,"1924":0,"1928":0,"1929":0,"1932":0,"1933":0,"1934":0,"1938":0,"1944":0,"1945":0,"1947":0,"1957":0,"1958":0,"1959":0,"1960":0,"1966":0,"1980":0,"1985":0,"1986":0,"1987":0,"1988":0,"1989":0,"1992":0,"1993":0,"1995":0,"1996":0,"2000":0,"2001":0,"2004":0,"2005":0,"2007":0,"2008":0,"2011":0,"2012":0,"2013":0,"2014":0,"2015":0,"2022":0,"2023":0,"2024":0,"2027":0,"2038":0,"2043":0,"2044":0,"2046":0,"2048":0,"2049":0,"2053":0,"2054":0,"2057":0,"2058":0,"2060":0,"2061":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2072":0,"2073":0,"2074":0,"2077":0,"2091":0,"2095":0,"2099":0,"2100":0,"2101":0,"2102":0,"2104":0,"2107":0,"2121":0,"2127":0,"2128":0,"2129":0,"2130":0,"2133":0,"2134":0,"2136":0,"2137":0,"2139":0,"2147":0,"2148":0,"2151":0,"2152":0,"2153":0,"2154":0,"2157":0,"2165":0,"2166":0,"2167":0,"2179":0,"2181":0,"2182":0,"2193":0,"2195":0,"2202":0,"2204":0,"2220":0,"2224":0,"2226":0,"2228":0,"2229":0,"2230":0,"2231":0,"2234":0,"2247":0,"2250":0,"2251":0,"2252":0,"2253":0,"2255":0,"2256":0,"2259":0,"2263":0,"2278":0,"2305":0,"2309":0,"2311":0,"2312":0,"2315":0,"2317":0,"2319":0,"2321":0,"2323":0,"2324":0,"2325":0,"2328":0,"2334":0,"2337":0,"2338":0,"2341":0,"2344":0,"2353":0,"2354":0,"2356":0,"2357":0,"2360":0,"2365":0,"2382":0,"2385":0,"2386":0,"2389":0,"2401":0,"2411":0,"2412":0,"2420":0,"2428":0,"2429":0,"2434":0,"2438":0,"2439":0,"2442":0,"2445":0,"2456":0,"2457":0,"2459":0,"2462":0,"2465":0,"2468":0,"2479":0,"2482":0,"2484":0,"2487":0,"2490":0,"2493":0,"2505":0,"2508":0,"2510":0,"2513":0,"2516":0,"2519":0,"2530":0,"2531":0,"2532":0,"2537":1,"2538":77,"2539":77,"2543":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/EventTarget.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/EventTarget.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"EventTarget","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":42}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":10},"end":{"line":49,"column":26}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":20},"end":{"line":78,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":11,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"4":{"start":{"line":22,"column":0},"end":{"line":91,"column":2}},"5":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"6":{"start":{"line":36,"column":12},"end":{"line":36,"column":39}},"7":{"start":{"line":39,"column":8},"end":{"line":39,"column":45}},"8":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"9":{"start":{"line":51,"column":12},"end":{"line":51,"column":36}},"10":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"11":{"start":{"line":54,"column":12},"end":{"line":54,"column":32}},"12":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"13":{"start":{"line":58,"column":12},"end":{"line":58,"column":69}},"14":{"start":{"line":61,"column":8},"end":{"line":68,"column":9}},"15":{"start":{"line":64,"column":12},"end":{"line":64,"column":65}},"16":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"17":{"start":{"line":66,"column":16},"end":{"line":66,"column":47}},"18":{"start":{"line":79,"column":8},"end":{"line":89,"column":9}},"19":{"start":{"line":80,"column":12},"end":{"line":80,"column":50}},"20":{"start":{"line":81,"column":12},"end":{"line":86,"column":13}},"21":{"start":{"line":82,"column":16},"end":{"line":85,"column":17}},"22":{"start":{"line":83,"column":20},"end":{"line":83,"column":43}},"23":{"start":{"line":84,"column":20},"end":{"line":84,"column":26}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":16}},{"start":{"line":82,"column":16},"end":{"line":82,"column":16}}]}},"code":["\"use strict\";","","module.exports = EventTarget;","","/**"," * A generic base to inherit from for any object"," * that needs event handling."," * @class EventTarget"," * @constructor"," */","function EventTarget() {","","    /**","     * The array of listeners for various events.","     * @type Object","     * @property _listeners","     * @private","     */","    this._listeners = Object.create(null);","}","","EventTarget.prototype = {","","    //restore constructor","    constructor: EventTarget,","","    /**","     * Adds a listener for a given event type.","     * @param {String} type The type of event to add a listener for.","     * @param {Function} listener The function to call when the event occurs.","     * @return {void}","     * @method addListener","     */","    addListener: function(type, listener) {","        if (!this._listeners[type]) {","            this._listeners[type] = [];","        }","","        this._listeners[type].push(listener);","    },","","    /**","     * Fires an event based on the passed-in object.","     * @param {Object|String} event An object with at least a 'type' attribute","     *      or a string indicating the event name.","     * @return {void}","     * @method fire","     */","    fire: function(event) {","        if (typeof event === \"string\") {","            event = { type: event };","        }","        if (typeof event.target !== \"undefined\") {","            event.target = this;","        }","","        if (typeof event.type === \"undefined\") {","            throw new Error(\"Event object missing 'type' property.\");","        }","","        if (this._listeners[event.type]) {","","            //create a copy of the array and use that so listeners can't chane","            var listeners = this._listeners[event.type].concat();","            for (var i=0, len=listeners.length; i < len; i++) {","                listeners[i].call(this, event);","            }","        }","    },","","    /**","     * Removes a listener for a given event type.","     * @param {String} type The type of event to remove a listener from.","     * @param {Function} listener The function to remove from the event.","     * @return {void}","     * @method removeListener","     */","    removeListener: function(type, listener) {","        if (this._listeners[type]) {","            var listeners = this._listeners[type];","            for (var i=0, len=listeners.length; i < len; i++) {","                if (listeners[i] === listener) {","                    listeners.splice(i, 1);","                    break;","                }","            }","","","        }","    }","};",""],"l":{"3":1,"11":1,"19":1,"22":1,"35":0,"36":0,"39":0,"50":0,"51":0,"53":0,"54":0,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/SyntaxError.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/SyntaxError.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"SyntaxError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":14,"column":0},"end":{"line":39,"column":1}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":21}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":38}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}},"8":{"start":{"line":42,"column":0},"end":{"line":42,"column":55}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}}},"branchMap":{},"code":["\"use strict\";","","module.exports = SyntaxError;","","/**"," * Type to use when a syntax error occurs."," * @class SyntaxError"," * @namespace parserlib.util"," * @constructor"," * @param {String} message The error message."," * @param {int} line The line at which the error occurred."," * @param {int} col The column at which the error occurred."," */","function SyntaxError(message, line, col) {","    Error.call(this);","    this.name = this.constructor.name;","","    /**","     * The column at which the error occurred.","     * @type int","     * @property col","     */","    this.col = col;","","    /**","     * The line at which the error occurred.","     * @type int","     * @property line","     */","    this.line = line;","","    /**","     * The text representation of the unit.","     * @type String","     * @property text","     */","    this.message = message;","","}","","//inherit from Error","SyntaxError.prototype = Object.create(Error.prototype); // jshint ignore:line","SyntaxError.prototype.constructor = SyntaxError; // jshint ignore:line",""],"l":{"3":1,"14":1,"15":0,"16":0,"23":0,"30":0,"37":0,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/MediaFeature.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/MediaFeature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MediaFeature","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":18,"column":0},"end":{"line":35,"column":1}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":140}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":57},"end":{"line":20,"column":68}},{"start":{"line":20,"column":71},"end":{"line":20,"column":73}}]}},"code":["\"use strict\";","","module.exports = MediaFeature;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a media feature, such as max-width:500."," * @namespace parserlib.css"," * @class MediaFeature"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {SyntaxUnit} name The name of the feature."," * @param {SyntaxUnit} value The value of the feature or null if none."," */","function MediaFeature(name, value) {","","    SyntaxUnit.call(this, \"(\" + name + (value !== null ? \":\" + value : \"\") + \")\", name.startLine, name.startCol, Parser.MEDIA_FEATURE_TYPE);","","    /**","     * The name of the media feature","     * @type String","     * @property name","     */","    this.name = name;","","    /**","     * The value for the feature or null if there is none.","     * @type SyntaxUnit","     * @property value","     */","    this.value = value;","}","","MediaFeature.prototype = new SyntaxUnit();","MediaFeature.prototype.constructor = MediaFeature;","",""],"l":{"3":1,"5":1,"7":1,"18":1,"20":0,"27":0,"34":0,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/MediaQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/MediaQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MediaQuery","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":21,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":203}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":29}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":31}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"9":{"start":{"line":48,"column":0},"end":{"line":48,"column":40}},"10":{"start":{"line":49,"column":0},"end":{"line":49,"column":46}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":38},"end":{"line":23,"column":52}},{"start":{"line":23,"column":54},"end":{"line":23,"column":56}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":73},"end":{"line":23,"column":82}},{"start":{"line":23,"column":85},"end":{"line":23,"column":87}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":127},"end":{"line":23,"column":134}},{"start":{"line":23,"column":137},"end":{"line":23,"column":139}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":92},"end":{"line":23,"column":101}},{"start":{"line":23,"column":105},"end":{"line":23,"column":124}}]}},"code":["\"use strict\";","","module.exports = MediaQuery;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents an individual media query."," * @namespace parserlib.css"," * @class MediaQuery"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {String} modifier The modifier \"not\" or \"only\" (or null)."," * @param {String} mediaType The type of media (i.e., \"print\")."," * @param {Array} parts Array of selectors parts making up this selector."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function MediaQuery(modifier, mediaType, features, line, col) {","","    SyntaxUnit.call(this, (modifier ? modifier + \" \": \"\") + (mediaType ? mediaType : \"\") + (mediaType && features.length > 0 ? \" and \" : \"\") + features.join(\" and \"), line, col, Parser.MEDIA_QUERY_TYPE);","","    /**","     * The media modifier (\"not\" or \"only\")","     * @type String","     * @property modifier","     */","    this.modifier = modifier;","","    /**","     * The mediaType (i.e., \"print\")","     * @type String","     * @property mediaType","     */","    this.mediaType = mediaType;","","    /**","     * The parts that make up the selector.","     * @type Array","     * @property features","     */","    this.features = features;","","}","","MediaQuery.prototype = new SyntaxUnit();","MediaQuery.prototype.constructor = MediaQuery;","",""],"l":{"3":1,"5":1,"7":1,"21":1,"23":0,"30":0,"37":0,"44":0,"48":1,"49":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyName.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyName.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"PropertyName","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":45}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":20,"column":0},"end":{"line":31,"column":1}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":70}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":50}},"9":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":52}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":24},"end":{"line":36,"column":33}},{"start":{"line":36,"column":36},"end":{"line":36,"column":38}}]}},"code":["\"use strict\";","","module.exports = PropertyName;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a selector combinator (whitespace, +, >)."," * @namespace parserlib.css"," * @class PropertyName"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {String} text The text representation of the unit."," * @param {String} hack The type of IE hack applied (\"*\", \"_\", or null)."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function PropertyName(text, hack, line, col) {","","    SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_NAME_TYPE);","","    /**","     * The type of IE hack applied (\"*\", \"_\", or null).","     * @type String","     * @property hack","     */","    this.hack = hack;","","}","","PropertyName.prototype = new SyntaxUnit();","PropertyName.prototype.constructor = PropertyName;","PropertyName.prototype.toString = function() {","    return (this.hack ? this.hack : \"\") + this.text;","};",""],"l":{"3":1,"5":1,"7":1,"20":1,"22":0,"29":0,"33":1,"34":1,"35":1,"36":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"PropertyValue","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":21,"column":0},"end":{"line":32,"column":1}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":82}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":52}}},"branchMap":{},"code":["\"use strict\";","","module.exports = PropertyValue;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a single part of a CSS property value, meaning that it represents"," * just everything single part between \":\" and \";\". If there are multiple values"," * separated by commas, this type represents just one of the values."," * @param {String[]} parts An array of value parts making up this value."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," * @namespace parserlib.css"," * @class PropertyValue"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," */","function PropertyValue(parts, line, col) {","","    SyntaxUnit.call(this, parts.join(\" \"), line, col, Parser.PROPERTY_VALUE_TYPE);","","    /**","     * The parts that make up the selector.","     * @type Array","     * @property parts","     */","    this.parts = parts;","","}","","PropertyValue.prototype = new SyntaxUnit();","PropertyValue.prototype.constructor = PropertyValue;","",""],"l":{"3":1,"5":1,"7":1,"21":1,"23":0,"30":0,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValuePart.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValuePart.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":1,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"PropertyValuePart","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":58}}},"2":{"name":"(anonymous_2)","line":191,"loc":{"start":{"line":191,"column":32},"end":{"line":191,"column":46}}},"3":{"name":"(anonymous_3)","line":193,"loc":{"start":{"line":193,"column":19},"end":{"line":193,"column":40}}},"4":{"name":"(anonymous_4)","line":216,"loc":{"start":{"line":216,"column":36},"end":{"line":216,"column":52}}},"5":{"name":"(anonymous_5)","line":217,"loc":{"start":{"line":217,"column":19},"end":{"line":217,"column":38}}},"6":{"name":"(anonymous_6)","line":239,"loc":{"start":{"line":239,"column":30},"end":{"line":239,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"6":{"start":{"line":22,"column":0},"end":{"line":183,"column":1}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":34}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":76}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"11":{"start":{"line":39,"column":4},"end":{"line":175,"column":5}},"12":{"start":{"line":40,"column":8},"end":{"line":40,"column":32}},"13":{"start":{"line":41,"column":8},"end":{"line":41,"column":32}},"14":{"start":{"line":42,"column":8},"end":{"line":42,"column":31}},"15":{"start":{"line":45,"column":8},"end":{"line":92,"column":9}},"16":{"start":{"line":61,"column":16},"end":{"line":61,"column":37}},"17":{"start":{"line":62,"column":16},"end":{"line":62,"column":22}},"18":{"start":{"line":65,"column":16},"end":{"line":65,"column":35}},"19":{"start":{"line":66,"column":16},"end":{"line":66,"column":22}},"20":{"start":{"line":72,"column":16},"end":{"line":72,"column":36}},"21":{"start":{"line":73,"column":16},"end":{"line":73,"column":22}},"22":{"start":{"line":77,"column":16},"end":{"line":77,"column":35}},"23":{"start":{"line":78,"column":16},"end":{"line":78,"column":22}},"24":{"start":{"line":82,"column":16},"end":{"line":82,"column":40}},"25":{"start":{"line":83,"column":16},"end":{"line":83,"column":22}},"26":{"start":{"line":87,"column":16},"end":{"line":87,"column":41}},"27":{"start":{"line":88,"column":16},"end":{"line":88,"column":22}},"28":{"start":{"line":94,"column":11},"end":{"line":175,"column":5}},"29":{"start":{"line":95,"column":8},"end":{"line":95,"column":33}},"30":{"start":{"line":96,"column":8},"end":{"line":96,"column":32}},"31":{"start":{"line":97,"column":11},"end":{"line":175,"column":5}},"32":{"start":{"line":98,"column":8},"end":{"line":98,"column":30}},"33":{"start":{"line":99,"column":8},"end":{"line":99,"column":32}},"34":{"start":{"line":100,"column":11},"end":{"line":175,"column":5}},"35":{"start":{"line":101,"column":8},"end":{"line":101,"column":29}},"36":{"start":{"line":102,"column":8},"end":{"line":102,"column":32}},"37":{"start":{"line":104,"column":11},"end":{"line":175,"column":5}},"38":{"start":{"line":105,"column":8},"end":{"line":105,"column":28}},"39":{"start":{"line":106,"column":8},"end":{"line":106,"column":25}},"40":{"start":{"line":107,"column":8},"end":{"line":115,"column":9}},"41":{"start":{"line":108,"column":12},"end":{"line":108,"column":70}},"42":{"start":{"line":109,"column":12},"end":{"line":109,"column":70}},"43":{"start":{"line":110,"column":12},"end":{"line":110,"column":70}},"44":{"start":{"line":112,"column":12},"end":{"line":112,"column":61}},"45":{"start":{"line":113,"column":12},"end":{"line":113,"column":61}},"46":{"start":{"line":114,"column":12},"end":{"line":114,"column":61}},"47":{"start":{"line":116,"column":11},"end":{"line":175,"column":5}},"48":{"start":{"line":117,"column":8},"end":{"line":117,"column":30}},"49":{"start":{"line":118,"column":8},"end":{"line":118,"column":33}},"50":{"start":{"line":119,"column":8},"end":{"line":119,"column":33}},"51":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"52":{"start":{"line":121,"column":11},"end":{"line":175,"column":5}},"53":{"start":{"line":122,"column":8},"end":{"line":122,"column":30}},"54":{"start":{"line":123,"column":8},"end":{"line":123,"column":45}},"55":{"start":{"line":124,"column":8},"end":{"line":124,"column":45}},"56":{"start":{"line":125,"column":8},"end":{"line":125,"column":45}},"57":{"start":{"line":126,"column":11},"end":{"line":175,"column":5}},"58":{"start":{"line":127,"column":8},"end":{"line":127,"column":30}},"59":{"start":{"line":128,"column":8},"end":{"line":128,"column":33}},"60":{"start":{"line":129,"column":8},"end":{"line":129,"column":33}},"61":{"start":{"line":130,"column":8},"end":{"line":130,"column":33}},"62":{"start":{"line":131,"column":8},"end":{"line":131,"column":33}},"63":{"start":{"line":132,"column":11},"end":{"line":175,"column":5}},"64":{"start":{"line":133,"column":8},"end":{"line":133,"column":30}},"65":{"start":{"line":134,"column":8},"end":{"line":134,"column":45}},"66":{"start":{"line":135,"column":8},"end":{"line":135,"column":45}},"67":{"start":{"line":136,"column":8},"end":{"line":136,"column":45}},"68":{"start":{"line":137,"column":8},"end":{"line":137,"column":33}},"69":{"start":{"line":138,"column":11},"end":{"line":175,"column":5}},"70":{"start":{"line":139,"column":8},"end":{"line":139,"column":30}},"71":{"start":{"line":140,"column":8},"end":{"line":140,"column":33}},"72":{"start":{"line":141,"column":8},"end":{"line":141,"column":43}},"73":{"start":{"line":142,"column":8},"end":{"line":142,"column":43}},"74":{"start":{"line":143,"column":11},"end":{"line":175,"column":5}},"75":{"start":{"line":144,"column":8},"end":{"line":144,"column":30}},"76":{"start":{"line":145,"column":8},"end":{"line":145,"column":33}},"77":{"start":{"line":146,"column":8},"end":{"line":146,"column":43}},"78":{"start":{"line":147,"column":8},"end":{"line":147,"column":43}},"79":{"start":{"line":148,"column":8},"end":{"line":148,"column":33}},"80":{"start":{"line":149,"column":11},"end":{"line":175,"column":5}},"81":{"start":{"line":151,"column":8},"end":{"line":151,"column":28}},"82":{"start":{"line":152,"column":8},"end":{"line":152,"column":63}},"83":{"start":{"line":153,"column":11},"end":{"line":175,"column":5}},"84":{"start":{"line":154,"column":8},"end":{"line":154,"column":33}},"85":{"start":{"line":155,"column":8},"end":{"line":155,"column":32}},"86":{"start":{"line":156,"column":8},"end":{"line":156,"column":27}},"87":{"start":{"line":157,"column":11},"end":{"line":175,"column":5}},"88":{"start":{"line":158,"column":8},"end":{"line":158,"column":31}},"89":{"start":{"line":159,"column":8},"end":{"line":159,"column":58}},"90":{"start":{"line":160,"column":11},"end":{"line":175,"column":5}},"91":{"start":{"line":161,"column":8},"end":{"line":161,"column":31}},"92":{"start":{"line":162,"column":8},"end":{"line":162,"column":58}},"93":{"start":{"line":163,"column":11},"end":{"line":175,"column":5}},"94":{"start":{"line":164,"column":8},"end":{"line":164,"column":30}},"95":{"start":{"line":165,"column":8},"end":{"line":165,"column":62}},"96":{"start":{"line":166,"column":8},"end":{"line":166,"column":57}},"97":{"start":{"line":167,"column":8},"end":{"line":167,"column":57}},"98":{"start":{"line":168,"column":8},"end":{"line":168,"column":57}},"99":{"start":{"line":169,"column":11},"end":{"line":175,"column":5}},"100":{"start":{"line":170,"column":8},"end":{"line":170,"column":33}},"101":{"start":{"line":171,"column":8},"end":{"line":171,"column":27}},"102":{"start":{"line":172,"column":11},"end":{"line":175,"column":5}},"103":{"start":{"line":173,"column":8},"end":{"line":173,"column":35}},"104":{"start":{"line":174,"column":8},"end":{"line":174,"column":27}},"105":{"start":{"line":181,"column":4},"end":{"line":181,"column":40}},"106":{"start":{"line":185,"column":0},"end":{"line":185,"column":47}},"107":{"start":{"line":186,"column":0},"end":{"line":186,"column":60}},"108":{"start":{"line":191,"column":0},"end":{"line":211,"column":2}},"109":{"start":{"line":192,"column":4},"end":{"line":192,"column":27}},"110":{"start":{"line":193,"column":4},"end":{"line":208,"column":6}},"111":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"112":{"start":{"line":195,"column":12},"end":{"line":195,"column":22}},"113":{"start":{"line":197,"column":8},"end":{"line":197,"column":44}},"114":{"start":{"line":198,"column":8},"end":{"line":206,"column":9}},"115":{"start":{"line":199,"column":12},"end":{"line":199,"column":47}},"116":{"start":{"line":200,"column":12},"end":{"line":205,"column":13}},"117":{"start":{"line":201,"column":16},"end":{"line":201,"column":55}},"118":{"start":{"line":204,"column":16},"end":{"line":204,"column":54}},"119":{"start":{"line":207,"column":8},"end":{"line":207,"column":19}},"120":{"start":{"line":209,"column":4},"end":{"line":210,"column":33}},"121":{"start":{"line":216,"column":0},"end":{"line":228,"column":2}},"122":{"start":{"line":217,"column":4},"end":{"line":226,"column":6}},"123":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"124":{"start":{"line":219,"column":12},"end":{"line":219,"column":28}},"125":{"start":{"line":221,"column":8},"end":{"line":224,"column":33}},"126":{"start":{"line":225,"column":8},"end":{"line":225,"column":44}},"127":{"start":{"line":227,"column":4},"end":{"line":227,"column":63}},"128":{"start":{"line":239,"column":0},"end":{"line":247,"column":2}},"129":{"start":{"line":240,"column":4},"end":{"line":245,"column":7}},"130":{"start":{"line":246,"column":4},"end":{"line":246,"column":16}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":27}},{"start":{"line":23,"column":31},"end":{"line":23,"column":33}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"3":{"line":45,"type":"switch","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":22}},{"start":{"line":48,"column":12},"end":{"line":48,"column":23}},{"start":{"line":49,"column":12},"end":{"line":49,"column":22}},{"start":{"line":50,"column":12},"end":{"line":50,"column":22}},{"start":{"line":51,"column":12},"end":{"line":51,"column":22}},{"start":{"line":52,"column":12},"end":{"line":52,"column":22}},{"start":{"line":53,"column":12},"end":{"line":53,"column":22}},{"start":{"line":54,"column":12},"end":{"line":54,"column":22}},{"start":{"line":55,"column":12},"end":{"line":55,"column":22}},{"start":{"line":56,"column":12},"end":{"line":56,"column":22}},{"start":{"line":57,"column":12},"end":{"line":57,"column":22}},{"start":{"line":58,"column":12},"end":{"line":58,"column":22}},{"start":{"line":59,"column":12},"end":{"line":59,"column":24}},{"start":{"line":60,"column":12},"end":{"line":62,"column":22}},{"start":{"line":64,"column":12},"end":{"line":66,"column":22}},{"start":{"line":68,"column":12},"end":{"line":68,"column":23}},{"start":{"line":69,"column":12},"end":{"line":69,"column":23}},{"start":{"line":70,"column":12},"end":{"line":70,"column":24}},{"start":{"line":71,"column":12},"end":{"line":73,"column":22}},{"start":{"line":75,"column":12},"end":{"line":75,"column":22}},{"start":{"line":76,"column":12},"end":{"line":78,"column":22}},{"start":{"line":80,"column":12},"end":{"line":80,"column":22}},{"start":{"line":81,"column":12},"end":{"line":83,"column":22}},{"start":{"line":85,"column":12},"end":{"line":85,"column":23}},{"start":{"line":86,"column":12},"end":{"line":88,"column":22}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":11},"end":{"line":94,"column":11}},{"start":{"line":94,"column":11},"end":{"line":94,"column":11}}]},"5":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":11},"end":{"line":97,"column":11}},{"start":{"line":97,"column":11},"end":{"line":97,"column":11}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":11},"end":{"line":100,"column":11}},{"start":{"line":100,"column":11},"end":{"line":100,"column":11}}]},"7":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":11},"end":{"line":104,"column":11}},{"start":{"line":104,"column":11},"end":{"line":104,"column":11}}]},"8":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"9":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":11},"end":{"line":116,"column":11}},{"start":{"line":116,"column":11},"end":{"line":116,"column":11}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":11},"end":{"line":121,"column":11}},{"start":{"line":121,"column":11},"end":{"line":121,"column":11}}]},"11":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":11},"end":{"line":126,"column":11}},{"start":{"line":126,"column":11},"end":{"line":126,"column":11}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":11},"end":{"line":132,"column":11}},{"start":{"line":132,"column":11},"end":{"line":132,"column":11}}]},"13":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":11},"end":{"line":138,"column":11}},{"start":{"line":138,"column":11},"end":{"line":138,"column":11}}]},"14":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":11},"end":{"line":143,"column":11}},{"start":{"line":143,"column":11},"end":{"line":143,"column":11}}]},"15":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":11},"end":{"line":149,"column":11}},{"start":{"line":149,"column":11},"end":{"line":149,"column":11}}]},"16":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":11}},{"start":{"line":153,"column":11},"end":{"line":153,"column":11}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":11}},{"start":{"line":157,"column":11},"end":{"line":157,"column":11}}]},"18":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]},"19":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":11},"end":{"line":163,"column":11}},{"start":{"line":163,"column":11},"end":{"line":163,"column":11}}]},"20":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":11},"end":{"line":169,"column":11}},{"start":{"line":169,"column":11},"end":{"line":169,"column":11}}]},"21":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":11},"end":{"line":172,"column":11}},{"start":{"line":172,"column":11},"end":{"line":172,"column":11}}]},"22":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"23":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"24":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":12}},{"start":{"line":200,"column":12},"end":{"line":200,"column":12}}]},"25":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"26":{"line":221,"type":"cond-expr","locations":[{"start":{"line":221,"column":38},"end":{"line":221,"column":59}},{"start":{"line":224,"column":12},"end":{"line":224,"column":32}}]}},"code":["\"use strict\";","","module.exports = PropertyValuePart;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Colors = require(\"./Colors\");","var Parser = require(\"./Parser\");","var Tokens = require(\"./Tokens\");","","/**"," * Represents a single part of a CSS property value, meaning that it represents"," * just one part of the data between \":\" and \";\"."," * @param {String} text The text representation of the unit."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," * @namespace parserlib.css"," * @class PropertyValuePart"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," */","function PropertyValuePart(text, line, col, optionalHint) {","    var hint = optionalHint || {};","","    SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_VALUE_PART_TYPE);","","    /**","     * Indicates the type of value unit.","     * @type String","     * @property type","     */","    this.type = \"unknown\";","","    //figure out what type of data it is","","    var temp;","","    //it is a measurement?","    if (/^([+\\-]?[\\d\\.]+)([a-z]+)$/i.test(text)) {  //dimension","        this.type = \"dimension\";","        this.value = +RegExp.$1;","        this.units = RegExp.$2;","","        //try to narrow down","        switch (this.units.toLowerCase()) {","","            case \"em\":","            case \"rem\":","            case \"ex\":","            case \"px\":","            case \"cm\":","            case \"mm\":","            case \"in\":","            case \"pt\":","            case \"pc\":","            case \"ch\":","            case \"vh\":","            case \"vw\":","            case \"vmax\":","            case \"vmin\":","                this.type = \"length\";","                break;","","            case \"fr\":","                this.type = \"grid\";","                break;","","            case \"deg\":","            case \"rad\":","            case \"grad\":","            case \"turn\":","                this.type = \"angle\";","                break;","","            case \"ms\":","            case \"s\":","                this.type = \"time\";","                break;","","            case \"hz\":","            case \"khz\":","                this.type = \"frequency\";","                break;","","            case \"dpi\":","            case \"dpcm\":","                this.type = \"resolution\";","                break;","","            //default","","        }","","    } else if (/^([+\\-]?[\\d\\.]+)%$/i.test(text)) {  //percentage","        this.type = \"percentage\";","        this.value = +RegExp.$1;","    } else if (/^([+\\-]?\\d+)$/i.test(text)) {  //integer","        this.type = \"integer\";","        this.value = +RegExp.$1;","    } else if (/^([+\\-]?[\\d\\.]+)$/i.test(text)) {  //number","        this.type = \"number\";","        this.value = +RegExp.$1;","","    } else if (/^#([a-f0-9]{3,6})/i.test(text)) {  //hexcolor","        this.type = \"color\";","        temp = RegExp.$1;","        if (temp.length === 3) {","            this.red    = parseInt(temp.charAt(0)+temp.charAt(0), 16);","            this.green  = parseInt(temp.charAt(1)+temp.charAt(1), 16);","            this.blue   = parseInt(temp.charAt(2)+temp.charAt(2), 16);","        } else {","            this.red    = parseInt(temp.substring(0, 2), 16);","            this.green  = parseInt(temp.substring(2, 4), 16);","            this.blue   = parseInt(temp.substring(4, 6), 16);","        }","    } else if (/^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i.test(text)) { //rgb() color with absolute numbers","        this.type   = \"color\";","        this.red    = +RegExp.$1;","        this.green  = +RegExp.$2;","        this.blue   = +RegExp.$3;","    } else if (/^rgb\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(text)) { //rgb() color with percentages","        this.type   = \"color\";","        this.red    = +RegExp.$1 * 255 / 100;","        this.green  = +RegExp.$2 * 255 / 100;","        this.blue   = +RegExp.$3 * 255 / 100;","    } else if (/^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d\\.]+)\\s*\\)/i.test(text)) { //rgba() color with absolute numbers","        this.type   = \"color\";","        this.red    = +RegExp.$1;","        this.green  = +RegExp.$2;","        this.blue   = +RegExp.$3;","        this.alpha  = +RegExp.$4;","    } else if (/^rgba\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d\\.]+)\\s*\\)/i.test(text)) { //rgba() color with percentages","        this.type   = \"color\";","        this.red    = +RegExp.$1 * 255 / 100;","        this.green  = +RegExp.$2 * 255 / 100;","        this.blue   = +RegExp.$3 * 255 / 100;","        this.alpha  = +RegExp.$4;","    } else if (/^hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(text)) { //hsl()","        this.type   = \"color\";","        this.hue    = +RegExp.$1;","        this.saturation = +RegExp.$2 / 100;","        this.lightness  = +RegExp.$3 / 100;","    } else if (/^hsla\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d\\.]+)\\s*\\)/i.test(text)) { //hsla() color with percentages","        this.type   = \"color\";","        this.hue    = +RegExp.$1;","        this.saturation = +RegExp.$2 / 100;","        this.lightness  = +RegExp.$3 / 100;","        this.alpha  = +RegExp.$4;","    } else if (/^url\\((\"([^\\\\\"]|\\\\.)*\")\\)/i.test(text)) { //URI","        // generated by TokenStream.readURI, so always double-quoted.","        this.type   = \"uri\";","        this.uri    = PropertyValuePart.parseString(RegExp.$1);","    } else if (/^([^\\(]+)\\(/i.test(text)) {","        this.type   = \"function\";","        this.name   = RegExp.$1;","        this.value  = text;","    } else if (/^\"([^\\n\\r\\f\\\\\"]|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*\"/i.test(text)) {    //double-quoted string","        this.type   = \"string\";","        this.value  = PropertyValuePart.parseString(text);","    } else if (/^'([^\\n\\r\\f\\\\']|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*'/i.test(text)) {    //single-quoted string","        this.type   = \"string\";","        this.value  = PropertyValuePart.parseString(text);","    } else if (Colors[text.toLowerCase()]) {  //named color","        this.type   = \"color\";","        temp        = Colors[text.toLowerCase()].substring(1);","        this.red    = parseInt(temp.substring(0, 2), 16);","        this.green  = parseInt(temp.substring(2, 4), 16);","        this.blue   = parseInt(temp.substring(4, 6), 16);","    } else if (/^[,\\/]$/.test(text)) {","        this.type   = \"operator\";","        this.value  = text;","    } else if (/^-?[a-z_\\u00A0-\\uFFFF][a-z0-9\\-_\\u00A0-\\uFFFF]*$/i.test(text)) {","        this.type   = \"identifier\";","        this.value  = text;","    }","","    // There can be ambiguity with escape sequences in identifiers, as","    // well as with \"color\" parts which are also \"identifiers\", so record","    // an explicit hint when the token generating this PropertyValuePart","    // was an identifier.","    this.wasIdent = Boolean(hint.ident);","","}","","PropertyValuePart.prototype = new SyntaxUnit();","PropertyValuePart.prototype.constructor = PropertyValuePart;","","/**"," * Helper method to parse a CSS string."," */","PropertyValuePart.parseString = function(str) {","    str = str.slice(1, -1); // Strip surrounding single/double quotes","    var replacer = function(match, esc) {","        if (/^(\\n|\\r\\n|\\r|\\f)$/.test(esc)) {","            return \"\";","        }","        var m = /^[0-9a-f]{1,6}/i.exec(esc);","        if (m) {","            var codePoint = parseInt(m[0], 16);","            if (String.fromCodePoint) {","                return String.fromCodePoint(codePoint);","            } else {","                // XXX No support for surrogates on old JavaScript engines.","                return String.fromCharCode(codePoint);","            }","        }","        return esc;","    };","    return str.replace(/\\\\(\\r\\n|[^\\r0-9a-f]|[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)/ig,","                       replacer);","};","","/**"," * Helper method to serialize a CSS string."," */","PropertyValuePart.serializeString = function(value) {","    var replacer = function(match, c) {","        if (c === \"\\\"\") {","            return \"\\\\\" + c;","        }","        var cp = String.codePointAt ? String.codePointAt(0) :","            // We only escape non-surrogate chars, so using charCodeAt","            // is harmless here.","            String.charCodeAt(0);","        return \"\\\\\" + cp.toString(16) + \" \";","    };","    return \"\\\"\" + value.replace(/[\"\\r\\n\\f]/g, replacer) + \"\\\"\";","};","","/**"," * Create a new syntax unit based solely on the given token."," * Convenience method for creating a new syntax unit when"," * it represents a single token instead of multiple."," * @param {Object} token The token object to represent."," * @return {parserlib.css.PropertyValuePart} The object representing the token."," * @static"," * @method fromToken"," */","PropertyValuePart.fromToken = function(token) {","    var part = new PropertyValuePart(token.value, token.startLine, token.startCol, {","        // Tokens can have escaped characters that would fool the type","        // identification in the PropertyValuePart constructor, so pass","        // in a hint if this was an identifier.","        ident: token.type === Tokens.IDENT","    });","    return part;","};",""],"l":{"3":1,"5":1,"7":1,"8":1,"9":1,"22":1,"23":0,"25":0,"32":0,"36":0,"39":0,"40":0,"41":0,"42":0,"45":0,"61":0,"62":0,"65":0,"66":0,"72":0,"73":0,"77":0,"78":0,"82":0,"83":0,"87":0,"88":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"181":0,"185":1,"186":1,"191":1,"192":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"200":0,"201":0,"204":0,"207":0,"209":0,"216":1,"217":0,"218":0,"219":0,"221":0,"225":0,"227":0,"239":1,"240":0,"246":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Tokens.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Tokens.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":74,"8":74,"9":74,"10":49,"11":3,"12":9,"13":46,"14":1,"15":0,"16":1,"17":0},"b":{"1":[49,25],"2":[3,46],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":182,"loc":{"start":{"line":182,"column":1},"end":{"line":182,"column":12}}},"2":{"name":"(anonymous_2)","line":202,"loc":{"start":{"line":202,"column":18},"end":{"line":202,"column":31}}},"3":{"name":"(anonymous_3)","line":206,"loc":{"start":{"line":206,"column":18},"end":{"line":206,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":180,"column":2}},"2":{"start":{"line":182,"column":0},"end":{"line":209,"column":5}},"3":{"start":{"line":183,"column":4},"end":{"line":184,"column":38}},"4":{"start":{"line":186,"column":4},"end":{"line":186,"column":24}},"5":{"start":{"line":187,"column":4},"end":{"line":187,"column":35}},"6":{"start":{"line":188,"column":4},"end":{"line":200,"column":5}},"7":{"start":{"line":189,"column":8},"end":{"line":189,"column":37}},"8":{"start":{"line":190,"column":8},"end":{"line":190,"column":35}},"9":{"start":{"line":191,"column":8},"end":{"line":199,"column":9}},"10":{"start":{"line":192,"column":12},"end":{"line":198,"column":13}},"11":{"start":{"line":193,"column":16},"end":{"line":195,"column":17}},"12":{"start":{"line":194,"column":20},"end":{"line":194,"column":51}},"13":{"start":{"line":197,"column":16},"end":{"line":197,"column":44}},"14":{"start":{"line":202,"column":4},"end":{"line":204,"column":6}},"15":{"start":{"line":203,"column":8},"end":{"line":203,"column":27}},"16":{"start":{"line":206,"column":4},"end":{"line":208,"column":6}},"17":{"start":{"line":207,"column":8},"end":{"line":207,"column":32}}},"branchMap":{"1":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"2":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":12}},{"start":{"line":192,"column":12},"end":{"line":192,"column":12}}]},"3":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":15},"end":{"line":207,"column":25}},{"start":{"line":207,"column":29},"end":{"line":207,"column":31}}]}},"code":["\"use strict\";","","var Tokens = module.exports = [","","    /*","     * The following token names are defined in CSS3 Grammar: https://www.w3.org/TR/css3-syntax/#lexical","     */","","    // HTML-style comments","    { name: \"CDO\" },","    { name: \"CDC\" },","","    // ignorables","    { name: \"S\", whitespace: true/*, channel: \"ws\"*/ },","    { name: \"COMMENT\", comment: true, hide: true, channel: \"comment\" },","","    // attribute equality","    { name: \"INCLUDES\", text: \"~=\" },","    { name: \"DASHMATCH\", text: \"|=\" },","    { name: \"PREFIXMATCH\", text: \"^=\" },","    { name: \"SUFFIXMATCH\", text: \"$=\" },","    { name: \"SUBSTRINGMATCH\", text: \"*=\" },","","    // identifier types","    { name: \"STRING\" },","    { name: \"IDENT\" },","    { name: \"HASH\" },","","    // at-keywords","    { name: \"IMPORT_SYM\", text: \"@import\" },","    { name: \"PAGE_SYM\", text: \"@page\" },","    { name: \"MEDIA_SYM\", text: \"@media\" },","    { name: \"FONT_FACE_SYM\", text: \"@font-face\" },","    { name: \"CHARSET_SYM\", text: \"@charset\" },","    { name: \"NAMESPACE_SYM\", text: \"@namespace\" },","    { name: \"SUPPORTS_SYM\", text: \"@supports\" },","    { name: \"VIEWPORT_SYM\", text: [\"@viewport\", \"@-ms-viewport\", \"@-o-viewport\"] },","    { name: \"DOCUMENT_SYM\", text: [\"@document\", \"@-moz-document\"] },","    { name: \"UNKNOWN_SYM\" },","    //{ name: \"ATKEYWORD\"},","","    // CSS3 animations","    { name: \"KEYFRAMES_SYM\", text: [ \"@keyframes\", \"@-webkit-keyframes\", \"@-moz-keyframes\", \"@-o-keyframes\" ] },","","    // important symbol","    { name: \"IMPORTANT_SYM\" },","","    // measurements","    { name: \"LENGTH\" },","    { name: \"ANGLE\" },","    { name: \"TIME\" },","    { name: \"FREQ\" },","    { name: \"DIMENSION\" },","    { name: \"PERCENTAGE\" },","    { name: \"NUMBER\" },","","    // functions","    { name: \"URI\" },","    { name: \"FUNCTION\" },","","    // Unicode ranges","    { name: \"UNICODE_RANGE\" },","","    /*","     * The following token names are defined in CSS3 Selectors: https://www.w3.org/TR/css3-selectors/#selector-syntax","     */","","    // invalid string","    { name: \"INVALID\" },","","    // combinators","    { name: \"PLUS\", text: \"+\" },","    { name: \"GREATER\", text: \">\" },","    { name: \"COMMA\", text: \",\" },","    { name: \"TILDE\", text: \"~\" },","","    // modifier","    { name: \"NOT\" },","","    /*","     * Defined in CSS3 Paged Media","     */","    { name: \"TOPLEFTCORNER_SYM\", text: \"@top-left-corner\" },","    { name: \"TOPLEFT_SYM\", text: \"@top-left\" },","    { name: \"TOPCENTER_SYM\", text: \"@top-center\" },","    { name: \"TOPRIGHT_SYM\", text: \"@top-right\" },","    { name: \"TOPRIGHTCORNER_SYM\", text: \"@top-right-corner\" },","    { name: \"BOTTOMLEFTCORNER_SYM\", text: \"@bottom-left-corner\" },","    { name: \"BOTTOMLEFT_SYM\", text: \"@bottom-left\" },","    { name: \"BOTTOMCENTER_SYM\", text: \"@bottom-center\" },","    { name: \"BOTTOMRIGHT_SYM\", text: \"@bottom-right\" },","    { name: \"BOTTOMRIGHTCORNER_SYM\", text: \"@bottom-right-corner\" },","    { name: \"LEFTTOP_SYM\", text: \"@left-top\" },","    { name: \"LEFTMIDDLE_SYM\", text: \"@left-middle\" },","    { name: \"LEFTBOTTOM_SYM\", text: \"@left-bottom\" },","    { name: \"RIGHTTOP_SYM\", text: \"@right-top\" },","    { name: \"RIGHTMIDDLE_SYM\", text: \"@right-middle\" },","    { name: \"RIGHTBOTTOM_SYM\", text: \"@right-bottom\" },","","    /*","     * The following token names are defined in CSS3 Media Queries: https://www.w3.org/TR/css3-mediaqueries/#syntax","     */","    /*{ name: \"MEDIA_ONLY\", state: \"media\"},","    { name: \"MEDIA_NOT\", state: \"media\"},","    { name: \"MEDIA_AND\", state: \"media\"},*/","    { name: \"RESOLUTION\", state: \"media\" },","","    /*","     * The following token names are not defined in any CSS specification but are used by the lexer.","     */","","    // not a real token, but useful for stupid IE filters","    { name: \"IE_FUNCTION\" },","","    // part of CSS3 grammar but not the Flex code","    { name: \"CHAR\" },","","    // TODO: Needed?","    // Not defined as tokens, but might as well be","    {","        name: \"PIPE\",","        text: \"|\"","    },","    {","        name: \"SLASH\",","        text: \"/\"","    },","    {","        name: \"MINUS\",","        text: \"-\"","    },","    {","        name: \"STAR\",","        text: \"*\"","    },","","    {","        name: \"LBRACE\",","        endChar: \"}\",","        text: \"{\"","    },","    {","        name: \"RBRACE\",","        text: \"}\"","    },","    {","        name: \"LBRACKET\",","        endChar: \"]\",","        text: \"[\"","    },","    {","        name: \"RBRACKET\",","        text: \"]\"","    },","    {","        name: \"EQUALS\",","        text: \"=\"","    },","    {","        name: \"COLON\",","        text: \":\"","    },","    {","        name: \"SEMICOLON\",","        text: \";\"","    },","    {","        name: \"LPAREN\",","        endChar: \")\",","        text: \"(\"","    },","    {","        name: \"RPAREN\",","        text: \")\"","    },","    {","        name: \"DOT\",","        text: \".\"","    }","];","","(function() {","    var nameMap = [],","        typeMap = Object.create(null);","","    Tokens.UNKNOWN = -1;","    Tokens.unshift({ name:\"EOF\" });","    for (var i=0, len = Tokens.length; i < len; i++) {","        nameMap.push(Tokens[i].name);","        Tokens[Tokens[i].name] = i;","        if (Tokens[i].text) {","            if (Tokens[i].text instanceof Array) {","                for (var j=0; j < Tokens[i].text.length; j++) {","                    typeMap[Tokens[i].text[j]] = i;","                }","            } else {","                typeMap[Tokens[i].text] = i;","            }","        }","    }","","    Tokens.name = function(tt) {","        return nameMap[tt];","    };","","    Tokens.type = function(c) {","        return typeMap[c] || -1;","    };","})();",""],"l":{"3":1,"182":1,"183":1,"186":1,"187":1,"188":1,"189":74,"190":74,"191":74,"192":49,"193":3,"194":9,"197":46,"202":1,"203":0,"206":1,"207":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Selector.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Selector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Selector","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"5":{"start":{"line":21,"column":0},"end":{"line":39,"column":1}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":76}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":51}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":42}}},"branchMap":{},"code":["\"use strict\";","","module.exports = Selector;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","var Specificity = require(\"./Specificity\");","","/**"," * Represents an entire single selector, including all parts but not"," * including multiple selectors (those separated by commas)."," * @namespace parserlib.css"," * @class Selector"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {Array} parts Array of selectors parts making up this selector."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function Selector(parts, line, col) {","","    SyntaxUnit.call(this, parts.join(\" \"), line, col, Parser.SELECTOR_TYPE);","","    /**","     * The parts that make up the selector.","     * @type Array","     * @property parts","     */","    this.parts = parts;","","    /**","     * The specificity of the selector.","     * @type parserlib.css.Specificity","     * @property specificity","     */","    this.specificity = Specificity.calculate(this);","","}","","Selector.prototype = new SyntaxUnit();","Selector.prototype.constructor = Selector;","",""],"l":{"3":1,"5":1,"7":1,"8":1,"21":1,"23":0,"30":0,"37":0,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Specificity.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Specificity.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Specificity","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":13},"end":{"line":34,"column":29}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":24}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":14},"end":{"line":63,"column":25}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":43}}},"6":{"name":"updateValues","line":82,"loc":{"start":{"line":82,"column":4},"end":{"line":82,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"4":{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":15}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":15}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":15}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":15}},"9":{"start":{"line":25,"column":0},"end":{"line":67,"column":2}},"10":{"start":{"line":35,"column":8},"end":{"line":36,"column":19}},"11":{"start":{"line":38,"column":8},"end":{"line":44,"column":9}},"12":{"start":{"line":39,"column":12},"end":{"line":43,"column":13}},"13":{"start":{"line":40,"column":16},"end":{"line":40,"column":26}},"14":{"start":{"line":41,"column":19},"end":{"line":43,"column":13}},"15":{"start":{"line":42,"column":16},"end":{"line":42,"column":25}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":17}},"17":{"start":{"line":55,"column":8},"end":{"line":55,"column":73}},"18":{"start":{"line":64,"column":8},"end":{"line":64,"column":67}},"19":{"start":{"line":76,"column":0},"end":{"line":129,"column":2}},"20":{"start":{"line":78,"column":4},"end":{"line":80,"column":22}},"21":{"start":{"line":82,"column":4},"end":{"line":118,"column":5}},"22":{"start":{"line":84,"column":8},"end":{"line":86,"column":21}},"23":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"24":{"start":{"line":89,"column":12},"end":{"line":89,"column":16}},"25":{"start":{"line":92,"column":8},"end":{"line":117,"column":9}},"26":{"start":{"line":93,"column":12},"end":{"line":93,"column":41}},"27":{"start":{"line":94,"column":12},"end":{"line":116,"column":13}},"28":{"start":{"line":97,"column":20},"end":{"line":97,"column":24}},"29":{"start":{"line":98,"column":20},"end":{"line":98,"column":26}},"30":{"start":{"line":101,"column":20},"end":{"line":101,"column":24}},"31":{"start":{"line":102,"column":20},"end":{"line":102,"column":26}},"32":{"start":{"line":105,"column":20},"end":{"line":109,"column":21}},"33":{"start":{"line":106,"column":24},"end":{"line":106,"column":28}},"34":{"start":{"line":108,"column":24},"end":{"line":108,"column":28}},"35":{"start":{"line":110,"column":20},"end":{"line":110,"column":26}},"36":{"start":{"line":113,"column":20},"end":{"line":115,"column":21}},"37":{"start":{"line":114,"column":24},"end":{"line":114,"column":55}},"38":{"start":{"line":120,"column":4},"end":{"line":126,"column":5}},"39":{"start":{"line":121,"column":8},"end":{"line":121,"column":33}},"40":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"41":{"start":{"line":124,"column":12},"end":{"line":124,"column":31}},"42":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":19},"end":{"line":41,"column":19}},{"start":{"line":41,"column":19},"end":{"line":41,"column":19}}]},"3":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":45},"end":{"line":85,"column":66}},{"start":{"line":85,"column":69},"end":{"line":85,"column":71}}]},"4":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"5":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":23}},{"start":{"line":88,"column":27},"end":{"line":88,"column":75}}]},"6":{"line":94,"type":"switch","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":29}},{"start":{"line":96,"column":16},"end":{"line":98,"column":26}},{"start":{"line":100,"column":16},"end":{"line":102,"column":26}},{"start":{"line":104,"column":16},"end":{"line":110,"column":26}},{"start":{"line":112,"column":16},"end":{"line":115,"column":21}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":20},"end":{"line":105,"column":20}},{"start":{"line":105,"column":20},"end":{"line":105,"column":20}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]}},"code":["\"use strict\";","","module.exports = Specificity;","","var Pseudos = require(\"./Pseudos\");","var SelectorPart = require(\"./SelectorPart\");","","/**"," * Represents a selector's specificity."," * @namespace parserlib.css"," * @class Specificity"," * @constructor"," * @param {int} a Should be 1 for inline styles, zero for stylesheet styles"," * @param {int} b Number of ID selectors"," * @param {int} c Number of classes and pseudo classes"," * @param {int} d Number of element names and pseudo elements"," */","function Specificity(a, b, c, d) {","    this.a = a;","    this.b = b;","    this.c = c;","    this.d = d;","}","","Specificity.prototype = {","    constructor: Specificity,","","    /**","     * Compare this specificity to another.","     * @param {Specificity} other The other specificity to compare to.","     * @return {int} -1 if the other specificity is larger, 1 if smaller, 0 if equal.","     * @method compare","     */","    compare: function(other) {","        var comps = [\"a\", \"b\", \"c\", \"d\"],","            i, len;","","        for (i=0, len=comps.length; i < len; i++) {","            if (this[comps[i]] < other[comps[i]]) {","                return -1;","            } else if (this[comps[i]] > other[comps[i]]) {","                return 1;","            }","        }","","        return 0;","    },","","    /**","     * Creates a numeric value for the specificity.","     * @return {int} The numeric value for the specificity.","     * @method valueOf","     */","    valueOf: function() {","        return (this.a * 1000) + (this.b * 100) + (this.c * 10) + this.d;","    },","","    /**","     * Returns a string representation for specificity.","     * @return {String} The string representation of specificity.","     * @method toString","     */","    toString: function() {","        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d;","    }","","};","","/**"," * Calculates the specificity of the given selector."," * @param {parserlib.css.Selector} The selector to calculate specificity for."," * @return {parserlib.css.Specificity} The specificity of the selector."," * @static"," * @method calculate"," */","Specificity.calculate = function(selector) {","","    var i, len,","        part,","        b=0, c=0, d=0;","","    function updateValues(part) {","","        var i, j, len, num,","            elementName = part.elementName ? part.elementName.text : \"\",","            modifier;","","        if (elementName && elementName.charAt(elementName.length-1) !== \"*\") {","            d++;","        }","","        for (i=0, len=part.modifiers.length; i < len; i++) {","            modifier = part.modifiers[i];","            switch (modifier.type) {","                case \"class\":","                case \"attribute\":","                    c++;","                    break;","","                case \"id\":","                    b++;","                    break;","","                case \"pseudo\":","                    if (Pseudos.isElement(modifier.text)) {","                        d++;","                    } else {","                        c++;","                    }","                    break;","","                case \"not\":","                    for (j=0, num=modifier.args.length; j < num; j++) {","                        updateValues(modifier.args[j]);","                    }","            }","        }","    }","","    for (i=0, len=selector.parts.length; i < len; i++) {","        part = selector.parts[i];","","        if (part instanceof SelectorPart) {","            updateValues(part);","        }","    }","","    return new Specificity(0, b, c, d);","};",""],"l":{"3":1,"5":1,"6":1,"18":1,"19":0,"20":0,"21":0,"22":0,"25":1,"35":0,"38":0,"39":0,"40":0,"41":0,"42":0,"46":0,"55":0,"64":0,"76":1,"78":0,"82":1,"84":0,"88":0,"89":0,"92":0,"93":0,"94":0,"97":0,"98":0,"101":0,"102":0,"105":0,"106":0,"108":0,"110":0,"113":0,"114":0,"120":0,"121":0,"123":0,"124":0,"128":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Pseudos.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Pseudos.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":20}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}},"4":{"start":{"line":14,"column":0},"end":{"line":16,"column":2}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":91}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":11},"end":{"line":15,"column":37}},{"start":{"line":15,"column":41},"end":{"line":15,"column":90}}]}},"code":["\"use strict\";","","var Pseudos = module.exports = {","    __proto__:       null,","    \":first-letter\": 1,","    \":first-line\":   1,","    \":before\":       1,","    \":after\":        1","};","","Pseudos.ELEMENT = 1;","Pseudos.CLASS = 2;","","Pseudos.isElement = function(pseudo) {","    return pseudo.indexOf(\"::\") === 0 || Pseudos[pseudo.toLowerCase()] === Pseudos.ELEMENT;","};",""],"l":{"3":1,"11":1,"12":1,"14":1,"15":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/SelectorPart.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/SelectorPart.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"SelectorPart","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":63}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":25,"column":0},"end":{"line":45,"column":1}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":70}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":35}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":31}},"8":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}},"9":{"start":{"line":48,"column":0},"end":{"line":48,"column":50}}},"branchMap":{},"code":["\"use strict\";","","module.exports = SelectorPart;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a single part of a selector string, meaning a single set of"," * element name and modifiers. This does not include combinators such as"," * spaces, +, >, etc."," * @namespace parserlib.css"," * @class SelectorPart"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {String} elementName The element name in the selector or null"," *      if there is no element name."," * @param {Array} modifiers Array of individual modifiers for the element."," *      May be empty if there are none."," * @param {String} text The text representation of the unit."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function SelectorPart(elementName, modifiers, text, line, col) {","","    SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_PART_TYPE);","","    /**","     * The tag name of the element to which this part","     * of the selector affects.","     * @type String","     * @property elementName","     */","    this.elementName = elementName;","","    /**","     * The parts that come after the element name, such as class names, IDs,","     * pseudo classes/elements, etc.","     * @type Array","     * @property modifiers","     */","    this.modifiers = modifiers;","","}","","SelectorPart.prototype = new SyntaxUnit();","SelectorPart.prototype.constructor = SelectorPart;","",""],"l":{"3":1,"5":1,"7":1,"25":1,"27":0,"35":0,"43":0,"47":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/SelectorSubPart.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/SelectorSubPart.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"SelectorSubPart","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":21,"column":0},"end":{"line":39,"column":1}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":74}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"8":{"start":{"line":41,"column":0},"end":{"line":41,"column":45}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":56}}},"branchMap":{},"code":["\"use strict\";","","module.exports = SelectorSubPart;","","var SyntaxUnit = require(\"../util/SyntaxUnit\");","","var Parser = require(\"./Parser\");","","/**"," * Represents a selector modifier string, meaning a class name, element name,"," * element ID, pseudo rule, etc."," * @namespace parserlib.css"," * @class SelectorSubPart"," * @extends parserlib.util.SyntaxUnit"," * @constructor"," * @param {String} text The text representation of the unit."," * @param {String} type The type of selector modifier."," * @param {int} line The line of text on which the unit resides."," * @param {int} col The column of text on which the unit resides."," */","function SelectorSubPart(text, type, line, col) {","","    SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_SUB_PART_TYPE);","","    /**","     * The type of modifier.","     * @type String","     * @property type","     */","    this.type = type;","","    /**","     * Some subparts have arguments, this represents them.","     * @type Array","     * @property args","     */","    this.args = [];","","}","","SelectorSubPart.prototype = new SyntaxUnit();","SelectorSubPart.prototype.constructor = SelectorSubPart;","",""],"l":{"3":1,"5":1,"7":1,"21":1,"23":0,"30":0,"37":0,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/TokenStream.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/TokenStream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":1,"22":25,"23":25,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0,0],"8":[25,0],"9":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"isHexDigit","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}}},"2":{"name":"isDigit","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":20}}},"3":{"name":"isWhitespace","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}}},"4":{"name":"isNewLine","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":22}}},"5":{"name":"isNameStart","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}}},"6":{"name":"isNameChar","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":23}}},"7":{"name":"isIdentStart","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}}},"8":{"name":"mix","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":33}}},"9":{"name":"TokenStream","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":26}}},"11":{"name":"(anonymous_11)","line":321,"loc":{"start":{"line":321,"column":17},"end":{"line":321,"column":67}}},"12":{"name":"(anonymous_12)","line":351,"loc":{"start":{"line":351,"column":17},"end":{"line":351,"column":54}}},"13":{"name":"(anonymous_13)","line":395,"loc":{"start":{"line":395,"column":15},"end":{"line":395,"column":48}}},"14":{"name":"(anonymous_14)","line":418,"loc":{"start":{"line":418,"column":18},"end":{"line":418,"column":55}}},"15":{"name":"(anonymous_15)","line":434,"loc":{"start":{"line":434,"column":21},"end":{"line":434,"column":54}}},"16":{"name":"(anonymous_16)","line":452,"loc":{"start":{"line":452,"column":15},"end":{"line":452,"column":52}}},"17":{"name":"(anonymous_17)","line":468,"loc":{"start":{"line":468,"column":27},"end":{"line":468,"column":64}}},"18":{"name":"(anonymous_18)","line":493,"loc":{"start":{"line":493,"column":25},"end":{"line":493,"column":62}}},"19":{"name":"(anonymous_19)","line":518,"loc":{"start":{"line":518,"column":26},"end":{"line":518,"column":63}}},"20":{"name":"(anonymous_20)","line":564,"loc":{"start":{"line":564,"column":20},"end":{"line":564,"column":57}}},"21":{"name":"(anonymous_21)","line":625,"loc":{"start":{"line":625,"column":14},"end":{"line":625,"column":51}}},"22":{"name":"(anonymous_22)","line":651,"loc":{"start":{"line":651,"column":17},"end":{"line":651,"column":54}}},"23":{"name":"(anonymous_23)","line":697,"loc":{"start":{"line":697,"column":17},"end":{"line":697,"column":54}}},"24":{"name":"(anonymous_24)","line":752,"loc":{"start":{"line":752,"column":23},"end":{"line":752,"column":60}}},"25":{"name":"(anonymous_25)","line":804,"loc":{"start":{"line":804,"column":21},"end":{"line":804,"column":58}}},"26":{"name":"(anonymous_26)","line":814,"loc":{"start":{"line":814,"column":26},"end":{"line":814,"column":54}}},"27":{"name":"(anonymous_27)","line":840,"loc":{"start":{"line":840,"column":20},"end":{"line":840,"column":31}}},"28":{"name":"(anonymous_28)","line":853,"loc":{"start":{"line":853,"column":16},"end":{"line":853,"column":32}}},"29":{"name":"(anonymous_29)","line":881,"loc":{"start":{"line":881,"column":16},"end":{"line":881,"column":27}}},"30":{"name":"(anonymous_30)","line":887,"loc":{"start":{"line":887,"column":13},"end":{"line":887,"column":29}}},"31":{"name":"(anonymous_31)","line":929,"loc":{"start":{"line":929,"column":21},"end":{"line":929,"column":37}}},"32":{"name":"(anonymous_32)","line":957,"loc":{"start":{"line":957,"column":14},"end":{"line":957,"column":30}}},"33":{"name":"(anonymous_33)","line":980,"loc":{"start":{"line":980,"column":16},"end":{"line":980,"column":42}}},"34":{"name":"(anonymous_34)","line":1023,"loc":{"start":{"line":1023,"column":17},"end":{"line":1023,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":57}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":10,"column":0},"end":{"line":13,"column":54}},"6":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"8":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":38}},"10":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":44}},"12":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"14":{"start":{"line":36,"column":0},"end":{"line":38,"column":1}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":58}},"16":{"start":{"line":40,"column":0},"end":{"line":42,"column":1}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":65}},"18":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":60}},"20":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"21":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"23":{"start":{"line":51,"column":12},"end":{"line":51,"column":44}},"24":{"start":{"line":54,"column":4},"end":{"line":54,"column":20}},"25":{"start":{"line":69,"column":0},"end":{"line":71,"column":1}},"26":{"start":{"line":70,"column":4},"end":{"line":70,"column":46}},"27":{"start":{"line":73,"column":0},"end":{"line":1047,"column":3}},"28":{"start":{"line":84,"column":8},"end":{"line":88,"column":42}},"29":{"start":{"line":90,"column":8},"end":{"line":90,"column":26}},"30":{"start":{"line":93,"column":8},"end":{"line":293,"column":9}},"31":{"start":{"line":94,"column":12},"end":{"line":288,"column":13}},"32":{"start":{"line":104,"column":20},"end":{"line":108,"column":21}},"33":{"start":{"line":105,"column":24},"end":{"line":105,"column":74}},"34":{"start":{"line":107,"column":24},"end":{"line":107,"column":71}},"35":{"start":{"line":109,"column":20},"end":{"line":109,"column":26}},"36":{"start":{"line":125,"column":20},"end":{"line":129,"column":21}},"37":{"start":{"line":126,"column":24},"end":{"line":126,"column":77}},"38":{"start":{"line":128,"column":24},"end":{"line":128,"column":71}},"39":{"start":{"line":130,"column":20},"end":{"line":130,"column":26}},"40":{"start":{"line":139,"column":20},"end":{"line":139,"column":69}},"41":{"start":{"line":140,"column":20},"end":{"line":140,"column":26}},"42":{"start":{"line":148,"column":20},"end":{"line":152,"column":21}},"43":{"start":{"line":149,"column":24},"end":{"line":149,"column":71}},"44":{"start":{"line":151,"column":24},"end":{"line":151,"column":71}},"45":{"start":{"line":153,"column":20},"end":{"line":153,"column":26}},"46":{"start":{"line":163,"column":20},"end":{"line":167,"column":21}},"47":{"start":{"line":164,"column":24},"end":{"line":164,"column":73}},"48":{"start":{"line":166,"column":24},"end":{"line":166,"column":71}},"49":{"start":{"line":168,"column":20},"end":{"line":168,"column":26}},"50":{"start":{"line":179,"column":20},"end":{"line":185,"column":21}},"51":{"start":{"line":180,"column":24},"end":{"line":180,"column":81}},"52":{"start":{"line":181,"column":27},"end":{"line":185,"column":21}},"53":{"start":{"line":182,"column":24},"end":{"line":182,"column":82}},"54":{"start":{"line":184,"column":24},"end":{"line":184,"column":71}},"55":{"start":{"line":186,"column":20},"end":{"line":186,"column":26}},"56":{"start":{"line":194,"column":20},"end":{"line":194,"column":72}},"57":{"start":{"line":195,"column":20},"end":{"line":195,"column":26}},"58":{"start":{"line":201,"column":20},"end":{"line":201,"column":69}},"59":{"start":{"line":202,"column":20},"end":{"line":202,"column":26}},"60":{"start":{"line":210,"column":20},"end":{"line":210,"column":66}},"61":{"start":{"line":211,"column":20},"end":{"line":211,"column":26}},"62":{"start":{"line":219,"column":20},"end":{"line":219,"column":79}},"63":{"start":{"line":220,"column":20},"end":{"line":220,"column":26}},"64":{"start":{"line":228,"column":20},"end":{"line":232,"column":21}},"65":{"start":{"line":229,"column":24},"end":{"line":229,"column":105}},"66":{"start":{"line":231,"column":24},"end":{"line":231,"column":71}},"67":{"start":{"line":233,"column":20},"end":{"line":233,"column":26}},"68":{"start":{"line":243,"column":20},"end":{"line":246,"column":21}},"69":{"start":{"line":244,"column":24},"end":{"line":244,"column":79}},"70":{"start":{"line":245,"column":24},"end":{"line":245,"column":30}},"71":{"start":{"line":261,"column":20},"end":{"line":286,"column":21}},"72":{"start":{"line":262,"column":24},"end":{"line":262,"column":73}},"73":{"start":{"line":269,"column":20},"end":{"line":286,"column":21}},"74":{"start":{"line":270,"column":24},"end":{"line":270,"column":77}},"75":{"start":{"line":277,"column":20},"end":{"line":286,"column":21}},"76":{"start":{"line":278,"column":24},"end":{"line":278,"column":82}},"77":{"start":{"line":285,"column":24},"end":{"line":285,"column":71}},"78":{"start":{"line":292,"column":12},"end":{"line":292,"column":18}},"79":{"start":{"line":295,"column":8},"end":{"line":297,"column":9}},"80":{"start":{"line":296,"column":12},"end":{"line":296,"column":76}},"81":{"start":{"line":299,"column":8},"end":{"line":299,"column":21}},"82":{"start":{"line":322,"column":8},"end":{"line":322,"column":34}},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":32}},"84":{"start":{"line":325,"column":8},"end":{"line":335,"column":10}},"85":{"start":{"line":352,"column":8},"end":{"line":355,"column":18}},"86":{"start":{"line":364,"column":8},"end":{"line":364,"column":22}},"87":{"start":{"line":367,"column":8},"end":{"line":367,"column":32}},"88":{"start":{"line":368,"column":8},"end":{"line":368,"column":29}},"89":{"start":{"line":369,"column":8},"end":{"line":369,"column":45}},"90":{"start":{"line":372,"column":8},"end":{"line":380,"column":9}},"91":{"start":{"line":373,"column":12},"end":{"line":379,"column":13}},"92":{"start":{"line":374,"column":16},"end":{"line":374,"column":40}},"93":{"start":{"line":376,"column":16},"end":{"line":376,"column":33}},"94":{"start":{"line":377,"column":16},"end":{"line":377,"column":29}},"95":{"start":{"line":378,"column":16},"end":{"line":378,"column":31}},"96":{"start":{"line":382,"column":8},"end":{"line":382,"column":63}},"97":{"start":{"line":396,"column":8},"end":{"line":396,"column":32}},"98":{"start":{"line":397,"column":8},"end":{"line":397,"column":22}},"99":{"start":{"line":399,"column":8},"end":{"line":403,"column":9}},"100":{"start":{"line":400,"column":12},"end":{"line":400,"column":29}},"101":{"start":{"line":402,"column":12},"end":{"line":402,"column":46}},"102":{"start":{"line":405,"column":8},"end":{"line":405,"column":66}},"103":{"start":{"line":419,"column":8},"end":{"line":419,"column":46}},"104":{"start":{"line":421,"column":8},"end":{"line":421,"column":78}},"105":{"start":{"line":435,"column":8},"end":{"line":437,"column":61}},"106":{"start":{"line":439,"column":8},"end":{"line":439,"column":69}},"107":{"start":{"line":453,"column":8},"end":{"line":453,"column":43}},"108":{"start":{"line":455,"column":8},"end":{"line":455,"column":72}},"109":{"start":{"line":469,"column":8},"end":{"line":470,"column":32}},"110":{"start":{"line":472,"column":8},"end":{"line":472,"column":22}},"111":{"start":{"line":473,"column":8},"end":{"line":473,"column":36}},"112":{"start":{"line":475,"column":8},"end":{"line":480,"column":9}},"113":{"start":{"line":476,"column":12},"end":{"line":476,"column":75}},"114":{"start":{"line":478,"column":12},"end":{"line":478,"column":27}},"115":{"start":{"line":479,"column":12},"end":{"line":479,"column":62}},"116":{"start":{"line":494,"column":8},"end":{"line":495,"column":32}},"117":{"start":{"line":497,"column":8},"end":{"line":497,"column":22}},"118":{"start":{"line":498,"column":8},"end":{"line":498,"column":36}},"119":{"start":{"line":500,"column":8},"end":{"line":505,"column":9}},"120":{"start":{"line":501,"column":12},"end":{"line":501,"column":75}},"121":{"start":{"line":503,"column":12},"end":{"line":503,"column":27}},"122":{"start":{"line":504,"column":12},"end":{"line":504,"column":62}},"123":{"start":{"line":519,"column":8},"end":{"line":523,"column":16}},"124":{"start":{"line":526,"column":8},"end":{"line":549,"column":9}},"125":{"start":{"line":527,"column":12},"end":{"line":527,"column":35}},"126":{"start":{"line":528,"column":12},"end":{"line":541,"column":13}},"127":{"start":{"line":529,"column":16},"end":{"line":529,"column":30}},"128":{"start":{"line":530,"column":16},"end":{"line":530,"column":42}},"129":{"start":{"line":531,"column":16},"end":{"line":538,"column":17}},"130":{"start":{"line":533,"column":20},"end":{"line":533,"column":35}},"131":{"start":{"line":534,"column":20},"end":{"line":534,"column":41}},"132":{"start":{"line":536,"column":20},"end":{"line":536,"column":36}},"133":{"start":{"line":537,"column":20},"end":{"line":537,"column":32}},"134":{"start":{"line":540,"column":16},"end":{"line":540,"column":37}},"135":{"start":{"line":542,"column":15},"end":{"line":549,"column":9}},"136":{"start":{"line":545,"column":12},"end":{"line":548,"column":13}},"137":{"start":{"line":546,"column":16},"end":{"line":546,"column":44}},"138":{"start":{"line":547,"column":16},"end":{"line":547,"column":40}},"139":{"start":{"line":551,"column":8},"end":{"line":551,"column":64}},"140":{"start":{"line":565,"column":8},"end":{"line":569,"column":14}},"141":{"start":{"line":571,"column":8},"end":{"line":571,"column":22}},"142":{"start":{"line":572,"column":8},"end":{"line":572,"column":26}},"143":{"start":{"line":574,"column":8},"end":{"line":603,"column":9}},"144":{"start":{"line":577,"column":12},"end":{"line":600,"column":13}},"145":{"start":{"line":580,"column":16},"end":{"line":587,"column":17}},"146":{"start":{"line":581,"column":20},"end":{"line":581,"column":26}},"147":{"start":{"line":583,"column":20},"end":{"line":583,"column":47}},"148":{"start":{"line":584,"column":20},"end":{"line":586,"column":21}},"149":{"start":{"line":585,"column":24},"end":{"line":585,"column":30}},"150":{"start":{"line":588,"column":19},"end":{"line":600,"column":13}},"151":{"start":{"line":589,"column":16},"end":{"line":589,"column":55}},"152":{"start":{"line":590,"column":19},"end":{"line":600,"column":13}},"153":{"start":{"line":591,"column":16},"end":{"line":591,"column":43}},"154":{"start":{"line":592,"column":16},"end":{"line":596,"column":17}},"155":{"start":{"line":593,"column":20},"end":{"line":593,"column":42}},"156":{"start":{"line":594,"column":20},"end":{"line":594,"column":46}},"157":{"start":{"line":597,"column":16},"end":{"line":597,"column":22}},"158":{"start":{"line":599,"column":16},"end":{"line":599,"column":22}},"159":{"start":{"line":602,"column":12},"end":{"line":602,"column":30}},"160":{"start":{"line":605,"column":8},"end":{"line":610,"column":9}},"161":{"start":{"line":606,"column":12},"end":{"line":606,"column":27}},"162":{"start":{"line":607,"column":12},"end":{"line":607,"column":62}},"163":{"start":{"line":609,"column":12},"end":{"line":609,"column":72}},"164":{"start":{"line":626,"column":8},"end":{"line":627,"column":32}},"165":{"start":{"line":629,"column":8},"end":{"line":629,"column":22}},"166":{"start":{"line":630,"column":8},"end":{"line":630,"column":36}},"167":{"start":{"line":632,"column":8},"end":{"line":637,"column":9}},"168":{"start":{"line":633,"column":12},"end":{"line":633,"column":75}},"169":{"start":{"line":635,"column":12},"end":{"line":635,"column":27}},"170":{"start":{"line":636,"column":12},"end":{"line":636,"column":62}},"171":{"start":{"line":652,"column":8},"end":{"line":656,"column":36}},"172":{"start":{"line":658,"column":8},"end":{"line":679,"column":9}},"173":{"start":{"line":659,"column":12},"end":{"line":659,"column":49}},"174":{"start":{"line":660,"column":12},"end":{"line":660,"column":27}},"175":{"start":{"line":662,"column":12},"end":{"line":674,"column":13}},"176":{"start":{"line":663,"column":16},"end":{"line":663,"column":35}},"177":{"start":{"line":664,"column":19},"end":{"line":674,"column":13}},"178":{"start":{"line":665,"column":16},"end":{"line":665,"column":34}},"179":{"start":{"line":666,"column":19},"end":{"line":674,"column":13}},"180":{"start":{"line":667,"column":16},"end":{"line":667,"column":33}},"181":{"start":{"line":668,"column":19},"end":{"line":674,"column":13}},"182":{"start":{"line":669,"column":16},"end":{"line":669,"column":33}},"183":{"start":{"line":670,"column":19},"end":{"line":674,"column":13}},"184":{"start":{"line":671,"column":16},"end":{"line":671,"column":39}},"185":{"start":{"line":673,"column":16},"end":{"line":673,"column":38}},"186":{"start":{"line":676,"column":15},"end":{"line":679,"column":9}},"187":{"start":{"line":677,"column":12},"end":{"line":677,"column":35}},"188":{"start":{"line":678,"column":12},"end":{"line":678,"column":35}},"189":{"start":{"line":681,"column":8},"end":{"line":681,"column":64}},"190":{"start":{"line":698,"column":8},"end":{"line":703,"column":14}},"191":{"start":{"line":705,"column":8},"end":{"line":742,"column":9}},"192":{"start":{"line":706,"column":12},"end":{"line":706,"column":24}},"193":{"start":{"line":708,"column":12},"end":{"line":740,"column":13}},"194":{"start":{"line":709,"column":16},"end":{"line":709,"column":34}},"195":{"start":{"line":710,"column":16},"end":{"line":733,"column":17}},"196":{"start":{"line":711,"column":20},"end":{"line":711,"column":26}},"197":{"start":{"line":712,"column":23},"end":{"line":733,"column":17}},"198":{"start":{"line":714,"column":20},"end":{"line":714,"column":32}},"199":{"start":{"line":717,"column":20},"end":{"line":720,"column":21}},"200":{"start":{"line":718,"column":24},"end":{"line":718,"column":36}},"201":{"start":{"line":719,"column":24},"end":{"line":719,"column":42}},"202":{"start":{"line":722,"column":20},"end":{"line":725,"column":21}},"203":{"start":{"line":723,"column":24},"end":{"line":723,"column":36}},"204":{"start":{"line":724,"column":24},"end":{"line":724,"column":42}},"205":{"start":{"line":726,"column":20},"end":{"line":732,"column":21}},"206":{"start":{"line":727,"column":24},"end":{"line":727,"column":36}},"207":{"start":{"line":731,"column":24},"end":{"line":731,"column":33}},"208":{"start":{"line":734,"column":19},"end":{"line":740,"column":13}},"209":{"start":{"line":735,"column":16},"end":{"line":735,"column":22}},"210":{"start":{"line":736,"column":19},"end":{"line":740,"column":13}},"211":{"start":{"line":738,"column":16},"end":{"line":738,"column":36}},"212":{"start":{"line":739,"column":16},"end":{"line":739,"column":22}},"213":{"start":{"line":741,"column":12},"end":{"line":741,"column":30}},"214":{"start":{"line":745,"column":8},"end":{"line":747,"column":9}},"215":{"start":{"line":746,"column":12},"end":{"line":746,"column":32}},"216":{"start":{"line":749,"column":8},"end":{"line":749,"column":65}},"217":{"start":{"line":753,"column":8},"end":{"line":756,"column":34}},"218":{"start":{"line":759,"column":8},"end":{"line":789,"column":9}},"219":{"start":{"line":760,"column":12},"end":{"line":760,"column":26}},"220":{"start":{"line":761,"column":12},"end":{"line":761,"column":35}},"221":{"start":{"line":762,"column":12},"end":{"line":762,"column":53}},"222":{"start":{"line":765,"column":12},"end":{"line":788,"column":13}},"223":{"start":{"line":766,"column":16},"end":{"line":766,"column":31}},"224":{"start":{"line":769,"column":16},"end":{"line":769,"column":42}},"225":{"start":{"line":772,"column":16},"end":{"line":787,"column":17}},"226":{"start":{"line":774,"column":20},"end":{"line":785,"column":21}},"227":{"start":{"line":775,"column":24},"end":{"line":775,"column":38}},"228":{"start":{"line":776,"column":24},"end":{"line":776,"column":45}},"229":{"start":{"line":777,"column":24},"end":{"line":777,"column":65}},"230":{"start":{"line":780,"column":24},"end":{"line":784,"column":25}},"231":{"start":{"line":781,"column":28},"end":{"line":781,"column":43}},"232":{"start":{"line":783,"column":28},"end":{"line":783,"column":42}},"233":{"start":{"line":791,"column":8},"end":{"line":791,"column":64}},"234":{"start":{"line":805,"column":8},"end":{"line":805,"column":52}},"235":{"start":{"line":806,"column":8},"end":{"line":806,"column":70}},"236":{"start":{"line":815,"column":8},"end":{"line":817,"column":36}},"237":{"start":{"line":820,"column":8},"end":{"line":824,"column":9}},"238":{"start":{"line":821,"column":12},"end":{"line":821,"column":26}},"239":{"start":{"line":822,"column":12},"end":{"line":822,"column":22}},"240":{"start":{"line":823,"column":12},"end":{"line":823,"column":30}},"241":{"start":{"line":827,"column":8},"end":{"line":833,"column":9}},"242":{"start":{"line":828,"column":12},"end":{"line":832,"column":13}},"243":{"start":{"line":829,"column":16},"end":{"line":829,"column":30}},"244":{"start":{"line":830,"column":16},"end":{"line":830,"column":26}},"245":{"start":{"line":831,"column":16},"end":{"line":831,"column":34}},"246":{"start":{"line":837,"column":8},"end":{"line":837,"column":20}},"247":{"start":{"line":841,"column":8},"end":{"line":843,"column":36}},"248":{"start":{"line":845,"column":8},"end":{"line":849,"column":9}},"249":{"start":{"line":846,"column":12},"end":{"line":846,"column":26}},"250":{"start":{"line":847,"column":12},"end":{"line":847,"column":28}},"251":{"start":{"line":848,"column":12},"end":{"line":848,"column":30}},"252":{"start":{"line":851,"column":8},"end":{"line":851,"column":26}},"253":{"start":{"line":854,"column":8},"end":{"line":857,"column":36}},"254":{"start":{"line":860,"column":8},"end":{"line":875,"column":9}},"255":{"start":{"line":861,"column":12},"end":{"line":872,"column":13}},"256":{"start":{"line":862,"column":16},"end":{"line":862,"column":40}},"257":{"start":{"line":863,"column":19},"end":{"line":872,"column":13}},"258":{"start":{"line":864,"column":16},"end":{"line":869,"column":17}},"259":{"start":{"line":865,"column":20},"end":{"line":865,"column":26}},"260":{"start":{"line":867,"column":20},"end":{"line":867,"column":34}},"261":{"start":{"line":868,"column":20},"end":{"line":868,"column":44}},"262":{"start":{"line":871,"column":16},"end":{"line":871,"column":22}},"263":{"start":{"line":874,"column":12},"end":{"line":874,"column":30}},"264":{"start":{"line":877,"column":8},"end":{"line":877,"column":22}},"265":{"start":{"line":882,"column":8},"end":{"line":882,"column":64}},"266":{"start":{"line":883,"column":8},"end":{"line":883,"column":66}},"267":{"start":{"line":888,"column":8},"end":{"line":891,"column":36}},"268":{"start":{"line":894,"column":8},"end":{"line":897,"column":9}},"269":{"start":{"line":895,"column":12},"end":{"line":895,"column":26}},"270":{"start":{"line":896,"column":12},"end":{"line":896,"column":30}},"271":{"start":{"line":900,"column":8},"end":{"line":907,"column":9}},"272":{"start":{"line":901,"column":12},"end":{"line":901,"column":38}},"273":{"start":{"line":902,"column":12},"end":{"line":904,"column":13}},"274":{"start":{"line":903,"column":16},"end":{"line":903,"column":61}},"275":{"start":{"line":906,"column":12},"end":{"line":906,"column":43}},"276":{"start":{"line":909,"column":8},"end":{"line":909,"column":26}},"277":{"start":{"line":912,"column":8},"end":{"line":915,"column":9}},"278":{"start":{"line":913,"column":12},"end":{"line":913,"column":26}},"279":{"start":{"line":914,"column":12},"end":{"line":914,"column":30}},"280":{"start":{"line":918,"column":8},"end":{"line":924,"column":9}},"281":{"start":{"line":919,"column":12},"end":{"line":919,"column":23}},"282":{"start":{"line":923,"column":12},"end":{"line":923,"column":76}},"283":{"start":{"line":926,"column":8},"end":{"line":926,"column":19}},"284":{"start":{"line":930,"column":8},"end":{"line":932,"column":14}},"285":{"start":{"line":934,"column":8},"end":{"line":952,"column":9}},"286":{"start":{"line":940,"column":12},"end":{"line":951,"column":13}},"287":{"start":{"line":941,"column":16},"end":{"line":941,"column":25}},"288":{"start":{"line":942,"column":16},"end":{"line":942,"column":30}},"289":{"start":{"line":943,"column":19},"end":{"line":951,"column":13}},"290":{"start":{"line":944,"column":16},"end":{"line":948,"column":17}},"291":{"start":{"line":945,"column":20},"end":{"line":945,"column":64}},"292":{"start":{"line":947,"column":20},"end":{"line":947,"column":26}},"293":{"start":{"line":950,"column":16},"end":{"line":950,"column":22}},"294":{"start":{"line":954,"column":8},"end":{"line":954,"column":19}},"295":{"start":{"line":958,"column":8},"end":{"line":960,"column":14}},"296":{"start":{"line":962,"column":8},"end":{"line":975,"column":9}},"297":{"start":{"line":963,"column":12},"end":{"line":974,"column":13}},"298":{"start":{"line":964,"column":16},"end":{"line":969,"column":17}},"299":{"start":{"line":965,"column":20},"end":{"line":965,"column":66}},"300":{"start":{"line":968,"column":20},"end":{"line":968,"column":26}},"301":{"start":{"line":970,"column":19},"end":{"line":974,"column":13}},"302":{"start":{"line":971,"column":16},"end":{"line":971,"column":39}},"303":{"start":{"line":973,"column":16},"end":{"line":973,"column":22}},"304":{"start":{"line":977,"column":8},"end":{"line":977,"column":21}},"305":{"start":{"line":981,"column":8},"end":{"line":984,"column":36}},"306":{"start":{"line":986,"column":8},"end":{"line":991,"column":9}},"307":{"start":{"line":987,"column":12},"end":{"line":990,"column":52}},"308":{"start":{"line":988,"column":16},"end":{"line":988,"column":43}},"309":{"start":{"line":989,"column":16},"end":{"line":989,"column":34}},"310":{"start":{"line":993,"column":8},"end":{"line":1013,"column":9}},"311":{"start":{"line":994,"column":12},"end":{"line":1003,"column":13}},"312":{"start":{"line":995,"column":16},"end":{"line":995,"column":30}},"313":{"start":{"line":996,"column":16},"end":{"line":998,"column":17}},"314":{"start":{"line":997,"column":20},"end":{"line":997,"column":29}},"315":{"start":{"line":1002,"column":16},"end":{"line":1002,"column":56}},"316":{"start":{"line":1004,"column":15},"end":{"line":1013,"column":9}},"317":{"start":{"line":1005,"column":12},"end":{"line":1005,"column":26}},"318":{"start":{"line":1006,"column":12},"end":{"line":1008,"column":13}},"319":{"start":{"line":1007,"column":16},"end":{"line":1007,"column":35}},"320":{"start":{"line":1009,"column":15},"end":{"line":1013,"column":9}},"321":{"start":{"line":1010,"column":12},"end":{"line":1010,"column":26}},"322":{"start":{"line":1012,"column":12},"end":{"line":1012,"column":19}},"323":{"start":{"line":1015,"column":8},"end":{"line":1019,"column":9}},"324":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":65}},"325":{"start":{"line":1017,"column":12},"end":{"line":1018,"column":40}},"326":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":29}},"327":{"start":{"line":1024,"column":8},"end":{"line":1026,"column":36}},"328":{"start":{"line":1028,"column":8},"end":{"line":1044,"column":9}},"329":{"start":{"line":1029,"column":12},"end":{"line":1039,"column":13}},"330":{"start":{"line":1030,"column":16},"end":{"line":1030,"column":29}},"331":{"start":{"line":1033,"column":16},"end":{"line":1036,"column":17}},"332":{"start":{"line":1034,"column":20},"end":{"line":1034,"column":45}},"333":{"start":{"line":1035,"column":20},"end":{"line":1035,"column":26}},"334":{"start":{"line":1038,"column":16},"end":{"line":1038,"column":34}},"335":{"start":{"line":1041,"column":12},"end":{"line":1041,"column":27}},"336":{"start":{"line":1043,"column":12},"end":{"line":1043,"column":22}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":34}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":11},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":37}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":21}},{"start":{"line":29,"column":25},"end":{"line":29,"column":43}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":35}}]},"5":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":21}},{"start":{"line":37,"column":25},"end":{"line":37,"column":57}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":21}},{"start":{"line":41,"column":26},"end":{"line":41,"column":40}},{"start":{"line":41,"column":44},"end":{"line":41,"column":63}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":21}},{"start":{"line":45,"column":26},"end":{"line":45,"column":40}},{"start":{"line":45,"column":44},"end":{"line":45,"column":58}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"9":{"line":94,"type":"switch","locations":[{"start":{"line":102,"column":16},"end":{"line":109,"column":26}},{"start":{"line":120,"column":16},"end":{"line":120,"column":25}},{"start":{"line":121,"column":16},"end":{"line":121,"column":25}},{"start":{"line":122,"column":16},"end":{"line":122,"column":25}},{"start":{"line":123,"column":16},"end":{"line":123,"column":25}},{"start":{"line":124,"column":16},"end":{"line":130,"column":26}},{"start":{"line":137,"column":16},"end":{"line":137,"column":26}},{"start":{"line":138,"column":16},"end":{"line":140,"column":26}},{"start":{"line":147,"column":16},"end":{"line":153,"column":26}},{"start":{"line":162,"column":16},"end":{"line":168,"column":26}},{"start":{"line":178,"column":16},"end":{"line":186,"column":26}},{"start":{"line":193,"column":16},"end":{"line":195,"column":26}},{"start":{"line":200,"column":16},"end":{"line":202,"column":26}},{"start":{"line":209,"column":16},"end":{"line":211,"column":26}},{"start":{"line":218,"column":16},"end":{"line":220,"column":26}},{"start":{"line":227,"column":16},"end":{"line":233,"column":26}},{"start":{"line":241,"column":16},"end":{"line":241,"column":25}},{"start":{"line":242,"column":16},"end":{"line":246,"column":21}},{"start":{"line":248,"column":16},"end":{"line":286,"column":21}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":20},"end":{"line":104,"column":20}},{"start":{"line":104,"column":20},"end":{"line":104,"column":20}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":20},"end":{"line":125,"column":20}},{"start":{"line":125,"column":20},"end":{"line":125,"column":20}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":20},"end":{"line":148,"column":20}},{"start":{"line":148,"column":20},"end":{"line":148,"column":20}}]},"13":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":20},"end":{"line":163,"column":20}},{"start":{"line":163,"column":20},"end":{"line":163,"column":20}}]},"14":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":20},"end":{"line":179,"column":20}},{"start":{"line":179,"column":20},"end":{"line":179,"column":20}}]},"15":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":27},"end":{"line":181,"column":27}},{"start":{"line":181,"column":27},"end":{"line":181,"column":27}}]},"16":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":20},"end":{"line":228,"column":20}},{"start":{"line":228,"column":20},"end":{"line":228,"column":20}}]},"17":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":20},"end":{"line":243,"column":20}},{"start":{"line":243,"column":20},"end":{"line":243,"column":20}}]},"18":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":20},"end":{"line":261,"column":20}},{"start":{"line":261,"column":20},"end":{"line":261,"column":20}}]},"19":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":20},"end":{"line":269,"column":20}},{"start":{"line":269,"column":20},"end":{"line":269,"column":20}}]},"20":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":20},"end":{"line":277,"column":20}},{"start":{"line":277,"column":20},"end":{"line":277,"column":20}}]},"21":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":8},"end":{"line":295,"column":8}},{"start":{"line":295,"column":8},"end":{"line":295,"column":8}}]},"22":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":18}},{"start":{"line":295,"column":22},"end":{"line":295,"column":32}}]},"23":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":18},"end":{"line":323,"column":25}},{"start":{"line":323,"column":29},"end":{"line":323,"column":31}}]},"24":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":24},"end":{"line":330,"column":36}},{"start":{"line":330,"column":40},"end":{"line":330,"column":45}}]},"25":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"26":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":12},"end":{"line":372,"column":30}},{"start":{"line":372,"column":34},"end":{"line":372,"column":55}}]},"27":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":12},"end":{"line":373,"column":12}},{"start":{"line":373,"column":12},"end":{"line":373,"column":12}}]},"28":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":8},"end":{"line":399,"column":8}},{"start":{"line":399,"column":8},"end":{"line":399,"column":8}}]},"29":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":22},"end":{"line":437,"column":45}},{"start":{"line":437,"column":49},"end":{"line":437,"column":60}}]},"30":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":8},"end":{"line":475,"column":8}},{"start":{"line":475,"column":8},"end":{"line":475,"column":8}}]},"31":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":8},"end":{"line":500,"column":8}},{"start":{"line":500,"column":8},"end":{"line":500,"column":8}}]},"32":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":526,"column":8}},{"start":{"line":526,"column":8},"end":{"line":526,"column":8}}]},"33":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":12},"end":{"line":528,"column":12}},{"start":{"line":528,"column":12},"end":{"line":528,"column":12}}]},"34":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":16},"end":{"line":531,"column":16}},{"start":{"line":531,"column":16},"end":{"line":531,"column":16}}]},"35":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":15},"end":{"line":542,"column":15}},{"start":{"line":542,"column":15},"end":{"line":542,"column":15}}]},"36":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":12},"end":{"line":545,"column":12}},{"start":{"line":545,"column":12},"end":{"line":545,"column":12}}]},"37":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":12},"end":{"line":577,"column":12}},{"start":{"line":577,"column":12},"end":{"line":577,"column":12}}]},"38":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":16},"end":{"line":580,"column":16}},{"start":{"line":580,"column":16},"end":{"line":580,"column":16}}]},"39":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":20},"end":{"line":584,"column":20}},{"start":{"line":584,"column":20},"end":{"line":584,"column":20}}]},"40":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":19},"end":{"line":588,"column":19}},{"start":{"line":588,"column":19},"end":{"line":588,"column":19}}]},"41":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":19},"end":{"line":590,"column":19}},{"start":{"line":590,"column":19},"end":{"line":590,"column":19}}]},"42":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":16},"end":{"line":592,"column":16}},{"start":{"line":592,"column":16},"end":{"line":592,"column":16}}]},"43":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":8},"end":{"line":605,"column":8}},{"start":{"line":605,"column":8},"end":{"line":605,"column":8}}]},"44":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":8},"end":{"line":632,"column":8}},{"start":{"line":632,"column":8},"end":{"line":632,"column":8}}]},"45":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":8},"end":{"line":658,"column":8}},{"start":{"line":658,"column":8},"end":{"line":658,"column":8}}]},"46":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":12},"end":{"line":662,"column":12}},{"start":{"line":662,"column":12},"end":{"line":662,"column":12}}]},"47":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":19},"end":{"line":664,"column":19}},{"start":{"line":664,"column":19},"end":{"line":664,"column":19}}]},"48":{"line":666,"type":"if","locations":[{"start":{"line":666,"column":19},"end":{"line":666,"column":19}},{"start":{"line":666,"column":19},"end":{"line":666,"column":19}}]},"49":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":19},"end":{"line":668,"column":19}},{"start":{"line":668,"column":19},"end":{"line":668,"column":19}}]},"50":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":19},"end":{"line":670,"column":19}},{"start":{"line":670,"column":19},"end":{"line":670,"column":19}}]},"51":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":15},"end":{"line":676,"column":15}},{"start":{"line":676,"column":15},"end":{"line":676,"column":15}}]},"52":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":12},"end":{"line":708,"column":12}},{"start":{"line":708,"column":12},"end":{"line":708,"column":12}}]},"53":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":16},"end":{"line":710,"column":16}},{"start":{"line":710,"column":16},"end":{"line":710,"column":16}}]},"54":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":23},"end":{"line":712,"column":23}},{"start":{"line":712,"column":23},"end":{"line":712,"column":23}}]},"55":{"line":717,"type":"binary-expr","locations":[{"start":{"line":717,"column":30},"end":{"line":717,"column":43}},{"start":{"line":717,"column":47},"end":{"line":717,"column":50}}]},"56":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":20},"end":{"line":722,"column":20}},{"start":{"line":722,"column":20},"end":{"line":722,"column":20}}]},"57":{"line":722,"type":"binary-expr","locations":[{"start":{"line":722,"column":24},"end":{"line":722,"column":34}},{"start":{"line":722,"column":38},"end":{"line":722,"column":60}}]},"58":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":20},"end":{"line":726,"column":20}},{"start":{"line":726,"column":20},"end":{"line":726,"column":20}}]},"59":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":19},"end":{"line":734,"column":19}},{"start":{"line":734,"column":19},"end":{"line":734,"column":19}}]},"60":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":19},"end":{"line":736,"column":19}},{"start":{"line":736,"column":19},"end":{"line":736,"column":19}}]},"61":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":8},"end":{"line":745,"column":8}},{"start":{"line":745,"column":8},"end":{"line":745,"column":8}}]},"62":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":8},"end":{"line":759,"column":8}},{"start":{"line":759,"column":8},"end":{"line":759,"column":8}}]},"63":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":12},"end":{"line":765,"column":12}},{"start":{"line":765,"column":12},"end":{"line":765,"column":12}}]},"64":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":16},"end":{"line":772,"column":16}},{"start":{"line":772,"column":16},"end":{"line":772,"column":16}}]},"65":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":20},"end":{"line":774,"column":20}},{"start":{"line":774,"column":20},"end":{"line":774,"column":20}}]},"66":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":24},"end":{"line":780,"column":24}},{"start":{"line":780,"column":24},"end":{"line":780,"column":24}}]},"67":{"line":820,"type":"binary-expr","locations":[{"start":{"line":820,"column":15},"end":{"line":820,"column":28}},{"start":{"line":820,"column":32},"end":{"line":820,"column":47}}]},"68":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":8},"end":{"line":827,"column":8}},{"start":{"line":827,"column":8},"end":{"line":827,"column":8}}]},"69":{"line":828,"type":"binary-expr","locations":[{"start":{"line":828,"column":19},"end":{"line":828,"column":28}},{"start":{"line":828,"column":32},"end":{"line":828,"column":47}}]},"70":{"line":861,"type":"if","locations":[{"start":{"line":861,"column":12},"end":{"line":861,"column":12}},{"start":{"line":861,"column":12},"end":{"line":861,"column":12}}]},"71":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":19},"end":{"line":863,"column":19}},{"start":{"line":863,"column":19},"end":{"line":863,"column":19}}]},"72":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":16},"end":{"line":864,"column":16}},{"start":{"line":864,"column":16},"end":{"line":864,"column":16}}]},"73":{"line":883,"type":"cond-expr","locations":[{"start":{"line":883,"column":47},"end":{"line":883,"column":51}},{"start":{"line":883,"column":54},"end":{"line":883,"column":65}}]},"74":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":15},"end":{"line":894,"column":16}},{"start":{"line":894,"column":20},"end":{"line":894,"column":35}}]},"75":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":8},"end":{"line":900,"column":8}},{"start":{"line":900,"column":8},"end":{"line":900,"column":8}}]},"76":{"line":900,"type":"binary-expr","locations":[{"start":{"line":900,"column":12},"end":{"line":900,"column":21}},{"start":{"line":900,"column":25},"end":{"line":900,"column":35}}]},"77":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":12},"end":{"line":902,"column":12}},{"start":{"line":902,"column":12},"end":{"line":902,"column":12}}]},"78":{"line":912,"type":"binary-expr","locations":[{"start":{"line":912,"column":15},"end":{"line":912,"column":16}},{"start":{"line":912,"column":20},"end":{"line":912,"column":35}}]},"79":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":8},"end":{"line":918,"column":8}},{"start":{"line":918,"column":8},"end":{"line":918,"column":8}}]},"80":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":12},"end":{"line":918,"column":26}},{"start":{"line":918,"column":30},"end":{"line":918,"column":39}}]},"81":{"line":931,"type":"binary-expr","locations":[{"start":{"line":931,"column":22},"end":{"line":931,"column":27}},{"start":{"line":931,"column":31},"end":{"line":931,"column":33}}]},"82":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":12},"end":{"line":940,"column":12}},{"start":{"line":940,"column":12},"end":{"line":940,"column":12}}]},"83":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":16},"end":{"line":940,"column":32}},{"start":{"line":940,"column":36},"end":{"line":940,"column":65}}]},"84":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":19},"end":{"line":943,"column":19}},{"start":{"line":943,"column":19},"end":{"line":943,"column":19}}]},"85":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":16},"end":{"line":944,"column":16}},{"start":{"line":944,"column":16},"end":{"line":944,"column":16}}]},"86":{"line":959,"type":"binary-expr","locations":[{"start":{"line":959,"column":22},"end":{"line":959,"column":27}},{"start":{"line":959,"column":31},"end":{"line":959,"column":33}}]},"87":{"line":963,"type":"if","locations":[{"start":{"line":963,"column":12},"end":{"line":963,"column":12}},{"start":{"line":963,"column":12},"end":{"line":963,"column":12}}]},"88":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":16},"end":{"line":964,"column":16}},{"start":{"line":964,"column":16},"end":{"line":964,"column":16}}]},"89":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":19},"end":{"line":970,"column":19}},{"start":{"line":970,"column":19},"end":{"line":970,"column":19}}]},"90":{"line":982,"type":"binary-expr","locations":[{"start":{"line":982,"column":24},"end":{"line":982,"column":29}},{"start":{"line":982,"column":33},"end":{"line":982,"column":35}}]},"91":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":8},"end":{"line":986,"column":8}},{"start":{"line":986,"column":8},"end":{"line":986,"column":8}}]},"92":{"line":990,"type":"binary-expr","locations":[{"start":{"line":990,"column":21},"end":{"line":990,"column":22}},{"start":{"line":990,"column":26},"end":{"line":990,"column":39}},{"start":{"line":990,"column":43},"end":{"line":990,"column":50}}]},"93":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":8},"end":{"line":993,"column":8}},{"start":{"line":993,"column":8},"end":{"line":993,"column":8}}]},"94":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":12},"end":{"line":994,"column":12}},{"start":{"line":994,"column":12},"end":{"line":994,"column":12}}]},"95":{"line":996,"type":"if","locations":[{"start":{"line":996,"column":16},"end":{"line":996,"column":16}},{"start":{"line":996,"column":16},"end":{"line":996,"column":16}}]},"96":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":15},"end":{"line":1004,"column":15}},{"start":{"line":1004,"column":15},"end":{"line":1004,"column":15}}]},"97":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":12},"end":{"line":1006,"column":12}},{"start":{"line":1006,"column":12},"end":{"line":1006,"column":12}}]},"98":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":15},"end":{"line":1009,"column":15}},{"start":{"line":1009,"column":15},"end":{"line":1009,"column":15}}]},"99":{"line":1015,"type":"if","locations":[{"start":{"line":1015,"column":8},"end":{"line":1015,"column":8}},{"start":{"line":1015,"column":8},"end":{"line":1015,"column":8}}]},"100":{"line":1017,"type":"cond-expr","locations":[{"start":{"line":1017,"column":42},"end":{"line":1017,"column":66}},{"start":{"line":1018,"column":16},"end":{"line":1018,"column":39}}]},"101":{"line":1025,"type":"binary-expr","locations":[{"start":{"line":1025,"column":22},"end":{"line":1025,"column":27}},{"start":{"line":1025,"column":31},"end":{"line":1025,"column":33}}]},"102":{"line":1028,"type":"if","locations":[{"start":{"line":1028,"column":8},"end":{"line":1028,"column":8}},{"start":{"line":1028,"column":8},"end":{"line":1028,"column":8}}]},"103":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":16},"end":{"line":1033,"column":16}},{"start":{"line":1033,"column":16},"end":{"line":1033,"column":16}}]},"104":{"line":1033,"type":"binary-expr","locations":[{"start":{"line":1033,"column":20},"end":{"line":1033,"column":38}},{"start":{"line":1033,"column":42},"end":{"line":1033,"column":51}},{"start":{"line":1033,"column":55},"end":{"line":1033,"column":76}}]}},"code":["\"use strict\";","","module.exports = TokenStream;","","var TokenStreamBase = require(\"../util/TokenStreamBase\");","","var PropertyValuePart = require(\"./PropertyValuePart\");","var Tokens = require(\"./Tokens\");","","var h = /^[0-9a-fA-F]$/,","    nonascii = /^[\\u00A0-\\uFFFF]$/,","    nl = /\\n|\\r\\n|\\r|\\f/,","    whitespace = /\\u0009|\\u000a|\\u000c|\\u000d|\\u0020/;","","//-----------------------------------------------------------------------------","// Helper functions","//-----------------------------------------------------------------------------","","","function isHexDigit(c) {","    return c !== null && h.test(c);","}","","function isDigit(c) {","    return c !== null && /\\d/.test(c);","}","","function isWhitespace(c) {","    return c !== null && whitespace.test(c);","}","","function isNewLine(c) {","    return c !== null && nl.test(c);","}","","function isNameStart(c) {","    return c !== null && /[a-z_\\u00A0-\\uFFFF\\\\]/i.test(c);","}","","function isNameChar(c) {","    return c !== null && (isNameStart(c) || /[0-9\\-\\\\]/.test(c));","}","","function isIdentStart(c) {","    return c !== null && (isNameStart(c) || /\\-\\\\/.test(c));","}","","function mix(receiver, supplier) {","    for (var prop in supplier) {","        if (Object.prototype.hasOwnProperty.call(supplier, prop)) {","            receiver[prop] = supplier[prop];","        }","    }","    return receiver;","}","","//-----------------------------------------------------------------------------","// CSS Token Stream","//-----------------------------------------------------------------------------","","","/**"," * A token stream that produces CSS tokens."," * @param {String|Reader} input The source of text to tokenize."," * @constructor"," * @class TokenStream"," * @namespace parserlib.css"," */","function TokenStream(input) {","    TokenStreamBase.call(this, input, Tokens);","}","","TokenStream.prototype = mix(new TokenStreamBase(), {","","    /**","     * Overrides the TokenStreamBase method of the same name","     * to produce CSS tokens.","     * @return {Object} A token object representing the next token.","     * @method _getToken","     * @private","     */","    _getToken: function() {","","        var c,","            reader = this._reader,","            token   = null,","            startLine   = reader.getLine(),","            startCol    = reader.getCol();","","        c = reader.read();","","","        while (c) {","            switch (c) {","","                /*","                 * Potential tokens:","                 * - COMMENT","                 * - SLASH","                 * - CHAR","                 */","                case \"/\":","","                    if (reader.peek() === \"*\") {","                        token = this.commentToken(c, startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - DASHMATCH","                 * - INCLUDES","                 * - PREFIXMATCH","                 * - SUFFIXMATCH","                 * - SUBSTRINGMATCH","                 * - CHAR","                 */","                case \"|\":","                case \"~\":","                case \"^\":","                case \"$\":","                case \"*\":","                    if (reader.peek() === \"=\") {","                        token = this.comparisonToken(c, startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - STRING","                 * - INVALID","                 */","                case \"\\\"\":","                case \"'\":","                    token = this.stringToken(c, startLine, startCol);","                    break;","","                /*","                 * Potential tokens:","                 * - HASH","                 * - CHAR","                 */","                case \"#\":","                    if (isNameChar(reader.peek())) {","                        token = this.hashToken(c, startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - DOT","                 * - NUMBER","                 * - DIMENSION","                 * - PERCENTAGE","                 */","                case \".\":","                    if (isDigit(reader.peek())) {","                        token = this.numberToken(c, startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - CDC","                 * - MINUS","                 * - NUMBER","                 * - DIMENSION","                 * - PERCENTAGE","                 */","                case \"-\":","                    if (reader.peek() === \"-\") {  //could be closing HTML-style comment","                        token = this.htmlCommentEndToken(c, startLine, startCol);","                    } else if (isNameStart(reader.peek())) {","                        token = this.identOrFunctionToken(c, startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - IMPORTANT_SYM","                 * - CHAR","                 */","                case \"!\":","                    token = this.importantToken(c, startLine, startCol);","                    break;","","                /*","                 * Any at-keyword or CHAR","                 */","                case \"@\":","                    token = this.atRuleToken(c, startLine, startCol);","                    break;","","                /*","                 * Potential tokens:","                 * - NOT","                 * - CHAR","                 */","                case \":\":","                    token = this.notToken(c, startLine, startCol);","                    break;","","                /*","                 * Potential tokens:","                 * - CDO","                 * - CHAR","                 */","                case \"<\":","                    token = this.htmlCommentStartToken(c, startLine, startCol);","                    break;","","                /*","                 * Potential tokens:","                 * - IDENT","                 * - CHAR","                 */","                case \"\\\\\":","                    if (/[^\\r\\n\\f]/.test(reader.peek())) {","                        token = this.identOrFunctionToken(this.readEscape(c, true), startLine, startCol);","                    } else {","                        token = this.charToken(c, startLine, startCol);","                    }","                    break;","","                /*","                 * Potential tokens:","                 * - UNICODE_RANGE","                 * - URL","                 * - CHAR","                 */","                case \"U\":","                case \"u\":","                    if (reader.peek() === \"+\") {","                        token = this.unicodeRangeToken(c, startLine, startCol);","                        break;","                    }","                    /* falls through */","                default:","","                    /*","                     * Potential tokens:","                     * - NUMBER","                     * - DIMENSION","                     * - LENGTH","                     * - FREQ","                     * - TIME","                     * - EMS","                     * - EXS","                     * - ANGLE","                     */","                    if (isDigit(c)) {","                        token = this.numberToken(c, startLine, startCol);","                    } else","","                    /*","                     * Potential tokens:","                     * - S","                     */","                    if (isWhitespace(c)) {","                        token = this.whitespaceToken(c, startLine, startCol);","                    } else","","                    /*","                     * Potential tokens:","                     * - IDENT","                     */","                    if (isIdentStart(c)) {","                        token = this.identOrFunctionToken(c, startLine, startCol);","                    } else {","                       /*","                        * Potential tokens:","                        * - CHAR","                        * - PLUS","                        */","                        token = this.charToken(c, startLine, startCol);","                    }","","            }","","            //make sure this token is wanted","            //TODO: check channel","            break;","        }","","        if (!token && c === null) {","            token = this.createToken(Tokens.EOF, null, startLine, startCol);","        }","","        return token;","    },","","    //-------------------------------------------------------------------------","    // Methods to create tokens","    //-------------------------------------------------------------------------","","    /**","     * Produces a token based on available data and the current","     * reader position information. This method is called by other","     * private methods to create tokens and is never called directly.","     * @param {int} tt The token type.","     * @param {String} value The text value of the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @param {Object} options (Optional) Specifies a channel property","     *      to indicate that a different channel should be scanned","     *      and/or a hide property indicating that the token should","     *      be hidden.","     * @return {Object} A token object.","     * @method createToken","     */","    createToken: function(tt, value, startLine, startCol, options) {","        var reader = this._reader;","        options = options || {};","","        return {","            value:      value,","            type:       tt,","            channel:    options.channel,","            endChar:    options.endChar,","            hide:       options.hide || false,","            startLine:  startLine,","            startCol:   startCol,","            endLine:    reader.getLine(),","            endCol:     reader.getCol()","        };","    },","","    //-------------------------------------------------------------------------","    // Methods to create specific tokens","    //-------------------------------------------------------------------------","","    /**","     * Produces a token for any at-rule. If the at-rule is unknown, then","     * the token is for a single \"@\" character.","     * @param {String} first The first character for the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method atRuleToken","     */","    atRuleToken: function(first, startLine, startCol) {","        var rule    = first,","            reader  = this._reader,","            tt      = Tokens.CHAR,","            ident;","","        /*","         * First, mark where we are. There are only four @ rules,","         * so anything else is really just an invalid token.","         * Basically, if this doesn't match one of the known @","         * rules, just return '@' as an unknown token and allow","         * parsing to continue after that point.","         */","        reader.mark();","","        //try to find the at-keyword","        ident = this.readName();","        rule = first + ident;","        tt = Tokens.type(rule.toLowerCase());","","        //if it's not valid, use the first character only and reset the reader","        if (tt === Tokens.CHAR || tt === Tokens.UNKNOWN) {","            if (rule.length > 1) {","                tt = Tokens.UNKNOWN_SYM;","            } else {","                tt = Tokens.CHAR;","                rule = first;","                reader.reset();","            }","        }","","        return this.createToken(tt, rule, startLine, startCol);","    },","","    /**","     * Produces a character token based on the given character","     * and location in the stream. If there's a special (non-standard)","     * token name, this is used; otherwise CHAR is used.","     * @param {String} c The character for the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method charToken","     */","    charToken: function(c, startLine, startCol) {","        var tt = Tokens.type(c);","        var opts = {};","","        if (tt === -1) {","            tt = Tokens.CHAR;","        } else {","            opts.endChar = Tokens[tt].endChar;","        }","","        return this.createToken(tt, c, startLine, startCol, opts);","    },","","    /**","     * Produces a character token based on the given character","     * and location in the stream. If there's a special (non-standard)","     * token name, this is used; otherwise CHAR is used.","     * @param {String} first The first character for the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method commentToken","     */","    commentToken: function(first, startLine, startCol) {","        var comment = this.readComment(first);","","        return this.createToken(Tokens.COMMENT, comment, startLine, startCol);","    },","","    /**","     * Produces a comparison token based on the given character","     * and location in the stream. The next character must be","     * read and is already known to be an equals sign.","     * @param {String} c The character for the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method comparisonToken","     */","    comparisonToken: function(c, startLine, startCol) {","        var reader  = this._reader,","            comparison  = c + reader.read(),","            tt      = Tokens.type(comparison) || Tokens.CHAR;","","        return this.createToken(tt, comparison, startLine, startCol);","    },","","    /**","     * Produces a hash token based on the specified information. The","     * first character provided is the pound sign (#) and then this","     * method reads a name afterward.","     * @param {String} first The first character (#) in the hash name.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method hashToken","     */","    hashToken: function(first, startLine, startCol) {","        var name    = this.readName(first);","","        return this.createToken(Tokens.HASH, name, startLine, startCol);","    },","","    /**","     * Produces a CDO or CHAR token based on the specified information. The","     * first character is provided and the rest is read by the function to determine","     * the correct token to create.","     * @param {String} first The first character in the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method htmlCommentStartToken","     */","    htmlCommentStartToken: function(first, startLine, startCol) {","        var reader      = this._reader,","            text        = first;","","        reader.mark();","        text += reader.readCount(3);","","        if (text === \"<!--\") {","            return this.createToken(Tokens.CDO, text, startLine, startCol);","        } else {","            reader.reset();","            return this.charToken(first, startLine, startCol);","        }","    },","","    /**","     * Produces a CDC or CHAR token based on the specified information. The","     * first character is provided and the rest is read by the function to determine","     * the correct token to create.","     * @param {String} first The first character in the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method htmlCommentEndToken","     */","    htmlCommentEndToken: function(first, startLine, startCol) {","        var reader      = this._reader,","            text        = first;","","        reader.mark();","        text += reader.readCount(2);","","        if (text === \"-->\") {","            return this.createToken(Tokens.CDC, text, startLine, startCol);","        } else {","            reader.reset();","            return this.charToken(first, startLine, startCol);","        }","    },","","    /**","     * Produces an IDENT or FUNCTION token based on the specified information. The","     * first character is provided and the rest is read by the function to determine","     * the correct token to create.","     * @param {String} first The first character in the identifier.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method identOrFunctionToken","     */","    identOrFunctionToken: function(first, startLine, startCol) {","        var reader  = this._reader,","            ident   = this.readName(first),","            tt      = Tokens.IDENT,","            uriFns  = [\"url(\", \"url-prefix(\", \"domain(\"],","            uri;","","        //if there's a left paren immediately after, it's a URI or function","        if (reader.peek() === \"(\") {","            ident += reader.read();","            if (uriFns.indexOf(ident.toLowerCase()) > -1) {","                reader.mark();","                uri = this.readURI(ident);","                if (uri === null) {","                    //didn't find a valid URL or there's no closing paren","                    reader.reset();","                    tt = Tokens.FUNCTION;","                } else {","                    tt = Tokens.URI;","                    ident = uri;","                }","            } else {","                tt = Tokens.FUNCTION;","            }","        } else if (reader.peek() === \":\") {  //might be an IE function","","            //IE-specific functions always being with progid:","            if (ident.toLowerCase() === \"progid\") {","                ident += reader.readTo(\"(\");","                tt = Tokens.IE_FUNCTION;","            }","        }","","        return this.createToken(tt, ident, startLine, startCol);","    },","","    /**","     * Produces an IMPORTANT_SYM or CHAR token based on the specified information. The","     * first character is provided and the rest is read by the function to determine","     * the correct token to create.","     * @param {String} first The first character in the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method importantToken","     */","    importantToken: function(first, startLine, startCol) {","        var reader      = this._reader,","            important   = first,","            tt          = Tokens.CHAR,","            temp,","            c;","","        reader.mark();","        c = reader.read();","","        while (c) {","","            //there can be a comment in here","            if (c === \"/\") {","","                //if the next character isn't a star, then this isn't a valid !important token","                if (reader.peek() !== \"*\") {","                    break;","                } else {","                    temp = this.readComment(c);","                    if (temp === \"\") {    //broken!","                        break;","                    }","                }","            } else if (isWhitespace(c)) {","                important += c + this.readWhitespace();","            } else if (/i/i.test(c)) {","                temp = reader.readCount(8);","                if (/mportant/i.test(temp)) {","                    important += c + temp;","                    tt = Tokens.IMPORTANT_SYM;","","                }","                break;  //we're done","            } else {","                break;","            }","","            c = reader.read();","        }","","        if (tt === Tokens.CHAR) {","            reader.reset();","            return this.charToken(first, startLine, startCol);","        } else {","            return this.createToken(tt, important, startLine, startCol);","        }","","","    },","","    /**","     * Produces a NOT or CHAR token based on the specified information. The","     * first character is provided and the rest is read by the function to determine","     * the correct token to create.","     * @param {String} first The first character in the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method notToken","     */","    notToken: function(first, startLine, startCol) {","        var reader      = this._reader,","            text        = first;","","        reader.mark();","        text += reader.readCount(4);","","        if (text.toLowerCase() === \":not(\") {","            return this.createToken(Tokens.NOT, text, startLine, startCol);","        } else {","            reader.reset();","            return this.charToken(first, startLine, startCol);","        }","    },","","    /**","     * Produces a number token based on the given character","     * and location in the stream. This may return a token of","     * NUMBER, EMS, EXS, LENGTH, ANGLE, TIME, FREQ, DIMENSION,","     * or PERCENTAGE.","     * @param {String} first The first character for the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method numberToken","     */","    numberToken: function(first, startLine, startCol) {","        var reader  = this._reader,","            value   = this.readNumber(first),","            ident,","            tt      = Tokens.NUMBER,","            c       = reader.peek();","","        if (isIdentStart(c)) {","            ident = this.readName(reader.read());","            value += ident;","","            if (/^em$|^ex$|^px$|^gd$|^rem$|^vw$|^vh$|^vmax$|^vmin$|^ch$|^cm$|^mm$|^in$|^pt$|^pc$/i.test(ident)) {","                tt = Tokens.LENGTH;","            } else if (/^deg|^rad$|^grad$|^turn$/i.test(ident)) {","                tt = Tokens.ANGLE;","            } else if (/^ms$|^s$/i.test(ident)) {","                tt = Tokens.TIME;","            } else if (/^hz$|^khz$/i.test(ident)) {","                tt = Tokens.FREQ;","            } else if (/^dpi$|^dpcm$/i.test(ident)) {","                tt = Tokens.RESOLUTION;","            } else {","                tt = Tokens.DIMENSION;","            }","","        } else if (c === \"%\") {","            value += reader.read();","            tt = Tokens.PERCENTAGE;","        }","","        return this.createToken(tt, value, startLine, startCol);","    },","","    /**","     * Produces a string token based on the given character","     * and location in the stream. Since strings may be indicated","     * by single or double quotes, a failure to match starting","     * and ending quotes results in an INVALID token being generated.","     * The first character in the string is passed in and then","     * the rest are read up to and including the final quotation mark.","     * @param {String} first The first character in the string.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method stringToken","     */","    stringToken: function(first, startLine, startCol) {","        var delim   = first,","            string  = first,","            reader  = this._reader,","            tt      = Tokens.STRING,","            c       = reader.read(),","            i;","","        while (c) {","            string += c;","","            if (c === \"\\\\\") {","                c = reader.read();","                if (c === null) {","                    break; // premature EOF after backslash","                } else if (/[^\\r\\n\\f0-9a-f]/i.test(c)) {","                    // single-character escape","                    string += c;","                } else {","                    // read up to six hex digits","                    for (i=0; isHexDigit(c) && i<6; i++) {","                        string += c;","                        c = reader.read();","                    }","                    // swallow trailing newline or space","                    if (c === \"\\r\" && reader.peek() === \"\\n\") {","                        string += c;","                        c = reader.read();","                    }","                    if (isWhitespace(c)) {","                        string += c;","                    } else {","                        // This character is null or not part of the escape;","                        // jump back to the top to process it.","                        continue;","                    }","                }","            } else if (c === delim) {","                break; // delimiter found.","            } else if (isNewLine(reader.peek())) {","                // newline without an escapement: it's an invalid string","                tt = Tokens.INVALID;","                break;","            }","            c = reader.read();","        }","","        //if c is null, that means we're out of input and the string was never closed","        if (c === null) {","            tt = Tokens.INVALID;","        }","","        return this.createToken(tt, string, startLine, startCol);","    },","","    unicodeRangeToken: function(first, startLine, startCol) {","        var reader  = this._reader,","            value   = first,","            temp,","            tt      = Tokens.CHAR;","","        //then it should be a unicode range","        if (reader.peek() === \"+\") {","            reader.mark();","            value += reader.read();","            value += this.readUnicodeRangePart(true);","","            //ensure there's an actual unicode range here","            if (value.length === 2) {","                reader.reset();","            } else {","","                tt = Tokens.UNICODE_RANGE;","","                //if there's a ? in the first part, there can't be a second part","                if (value.indexOf(\"?\") === -1) {","","                    if (reader.peek() === \"-\") {","                        reader.mark();","                        temp = reader.read();","                        temp += this.readUnicodeRangePart(false);","","                        //if there's not another value, back up and just take the first","                        if (temp.length === 1) {","                            reader.reset();","                        } else {","                            value += temp;","                        }","                    }","","                }","            }","        }","","        return this.createToken(tt, value, startLine, startCol);","    },","","    /**","     * Produces a S token based on the specified information. Since whitespace","     * may have multiple characters, this consumes all whitespace characters","     * into a single token.","     * @param {String} first The first character in the token.","     * @param {int} startLine The beginning line for the character.","     * @param {int} startCol The beginning column for the character.","     * @return {Object} A token object.","     * @method whitespaceToken","     */","    whitespaceToken: function(first, startLine, startCol) {","        var value   = first + this.readWhitespace();","        return this.createToken(Tokens.S, value, startLine, startCol);","    },","","","    //-------------------------------------------------------------------------","    // Methods to read values from the string stream","    //-------------------------------------------------------------------------","","    readUnicodeRangePart: function(allowQuestionMark) {","        var reader  = this._reader,","            part = \"\",","            c       = reader.peek();","","        //first read hex digits","        while (isHexDigit(c) && part.length < 6) {","            reader.read();","            part += c;","            c = reader.peek();","        }","","        //then read question marks if allowed","        if (allowQuestionMark) {","            while (c === \"?\" && part.length < 6) {","                reader.read();","                part += c;","                c = reader.peek();","            }","        }","","        //there can't be any other characters after this point","","        return part;","    },","","    readWhitespace: function() {","        var reader  = this._reader,","            whitespace = \"\",","            c       = reader.peek();","","        while (isWhitespace(c)) {","            reader.read();","            whitespace += c;","            c = reader.peek();","        }","","        return whitespace;","    },","    readNumber: function(first) {","        var reader  = this._reader,","            number  = first,","            hasDot  = (first === \".\"),","            c       = reader.peek();","","","        while (c) {","            if (isDigit(c)) {","                number += reader.read();","            } else if (c === \".\") {","                if (hasDot) {","                    break;","                } else {","                    hasDot = true;","                    number += reader.read();","                }","            } else {","                break;","            }","","            c = reader.peek();","        }","","        return number;","    },","","    // returns null w/o resetting reader if string is invalid.","    readString: function() {","        var token = this.stringToken(this._reader.read(), 0, 0);","        return token.type === Tokens.INVALID ? null : token.value;","    },","","    // returns null w/o resetting reader if URI is invalid.","    readURI: function(first) {","        var reader  = this._reader,","            uri     = first,","            inner   = \"\",","            c       = reader.peek();","","        //skip whitespace before","        while (c && isWhitespace(c)) {","            reader.read();","            c = reader.peek();","        }","","        //it's a string","        if (c === \"'\" || c === \"\\\"\") {","            inner = this.readString();","            if (inner !== null) {","                inner = PropertyValuePart.parseString(inner);","            }","        } else {","            inner = this.readUnquotedURL();","        }","","        c = reader.peek();","","        //skip whitespace after","        while (c && isWhitespace(c)) {","            reader.read();","            c = reader.peek();","        }","","        //if there was no inner value or the next character isn't closing paren, it's not a URI","        if (inner === null || c !== \")\") {","            uri = null;","        } else {","            // Ensure argument to URL is always double-quoted","            // (This simplifies later processing in PropertyValuePart.)","            uri += PropertyValuePart.serializeString(inner) + reader.read();","        }","","        return uri;","    },","    // This method never fails, although it may return an empty string.","    readUnquotedURL: function(first) {","        var reader  = this._reader,","            url     = first || \"\",","            c;","","        for (c = reader.peek(); c; c = reader.peek()) {","            // Note that the grammar at","            // https://www.w3.org/TR/CSS2/grammar.html#scanner","            // incorrectly includes the backslash character in the","            // `url` production, although it is correctly omitted in","            // the `baduri1` production.","            if (nonascii.test(c) || /^[\\-!#$%&*-\\[\\]-~]$/.test(c)) {","                url += c;","                reader.read();","            } else if (c === \"\\\\\") {","                if (/^[^\\r\\n\\f]$/.test(reader.peek(2))) {","                    url += this.readEscape(reader.read(), true);","                } else {","                    break; // bad escape sequence.","                }","            } else {","                break; // bad character","            }","        }","","        return url;","    },","","    readName: function(first) {","        var reader  = this._reader,","            ident   = first || \"\",","            c;","","        for (c = reader.peek(); c; c = reader.peek()) {","            if (c === \"\\\\\") {","                if (/^[^\\r\\n\\f]$/.test(reader.peek(2))) {","                    ident += this.readEscape(reader.read(), true);","                } else {","                    // Bad escape sequence.","                    break;","                }","            } else if (isNameChar(c)) {","                ident += reader.read();","            } else {","                break;","            }","        }","","        return ident;","    },","","    readEscape: function(first, unescape) {","        var reader  = this._reader,","            cssEscape = first || \"\",","            i       = 0,","            c       = reader.peek();","","        if (isHexDigit(c)) {","            do {","                cssEscape += reader.read();","                c = reader.peek();","            } while (c && isHexDigit(c) && ++i < 6);","        }","","        if (cssEscape.length === 1) {","            if (/^[^\\r\\n\\f0-9a-f]$/.test(c)) {","                reader.read();","                if (unescape) {","                    return c;","                }","            } else {","                // We should never get here (readName won't call readEscape","                // if the escape sequence is bad).","                throw new Error(\"Bad escape sequence.\");","            }","        } else if (c === \"\\r\") {","            reader.read();","            if (reader.peek() === \"\\n\") {","                c += reader.read();","            }","        } else if (/^[ \\t\\n\\f]$/.test(c)) {","            reader.read();","        } else {","            c = \"\";","        }","","        if (unescape) {","            var cp = parseInt(cssEscape.slice(first.length), 16);","            return String.fromCodePoint ? String.fromCodePoint(cp) :","                String.fromCharCode(cp);","        }","        return cssEscape + c;","    },","","    readComment: function(first) {","        var reader  = this._reader,","            comment = first || \"\",","            c       = reader.read();","","        if (c === \"*\") {","            while (c) {","                comment += c;","","                //look for end of comment","                if (comment.length > 2 && c === \"*\" && reader.peek() === \"/\") {","                    comment += reader.read();","                    break;","                }","","                c = reader.read();","            }","","            return comment;","        } else {","            return \"\";","        }","","    }","});",""],"l":{"3":1,"5":1,"7":1,"8":1,"10":1,"20":1,"21":0,"24":1,"25":0,"28":1,"29":0,"32":1,"33":0,"36":1,"37":0,"40":1,"41":0,"44":1,"45":0,"48":1,"49":1,"50":25,"51":25,"54":1,"69":1,"70":0,"73":1,"84":0,"90":0,"93":0,"94":0,"104":0,"105":0,"107":0,"109":0,"125":0,"126":0,"128":0,"130":0,"139":0,"140":0,"148":0,"149":0,"151":0,"153":0,"163":0,"164":0,"166":0,"168":0,"179":0,"180":0,"181":0,"182":0,"184":0,"186":0,"194":0,"195":0,"201":0,"202":0,"210":0,"211":0,"219":0,"220":0,"228":0,"229":0,"231":0,"233":0,"243":0,"244":0,"245":0,"261":0,"262":0,"269":0,"270":0,"277":0,"278":0,"285":0,"292":0,"295":0,"296":0,"299":0,"322":0,"323":0,"325":0,"352":0,"364":0,"367":0,"368":0,"369":0,"372":0,"373":0,"374":0,"376":0,"377":0,"378":0,"382":0,"396":0,"397":0,"399":0,"400":0,"402":0,"405":0,"419":0,"421":0,"435":0,"439":0,"453":0,"455":0,"469":0,"472":0,"473":0,"475":0,"476":0,"478":0,"479":0,"494":0,"497":0,"498":0,"500":0,"501":0,"503":0,"504":0,"519":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"533":0,"534":0,"536":0,"537":0,"540":0,"542":0,"545":0,"546":0,"547":0,"551":0,"565":0,"571":0,"572":0,"574":0,"577":0,"580":0,"581":0,"583":0,"584":0,"585":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"597":0,"599":0,"602":0,"605":0,"606":0,"607":0,"609":0,"626":0,"629":0,"630":0,"632":0,"633":0,"635":0,"636":0,"652":0,"658":0,"659":0,"660":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"673":0,"676":0,"677":0,"678":0,"681":0,"698":0,"705":0,"706":0,"708":0,"709":0,"710":0,"711":0,"712":0,"714":0,"717":0,"718":0,"719":0,"722":0,"723":0,"724":0,"726":0,"727":0,"731":0,"734":0,"735":0,"736":0,"738":0,"739":0,"741":0,"745":0,"746":0,"749":0,"753":0,"759":0,"760":0,"761":0,"762":0,"765":0,"766":0,"769":0,"772":0,"774":0,"775":0,"776":0,"777":0,"780":0,"781":0,"783":0,"791":0,"805":0,"806":0,"815":0,"820":0,"821":0,"822":0,"823":0,"827":0,"828":0,"829":0,"830":0,"831":0,"837":0,"841":0,"845":0,"846":0,"847":0,"848":0,"851":0,"854":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"867":0,"868":0,"871":0,"874":0,"877":0,"882":0,"883":0,"888":0,"894":0,"895":0,"896":0,"900":0,"901":0,"902":0,"903":0,"906":0,"909":0,"912":0,"913":0,"914":0,"918":0,"919":0,"923":0,"926":0,"930":0,"934":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"947":0,"950":0,"954":0,"958":0,"962":0,"963":0,"964":0,"965":0,"968":0,"970":0,"971":0,"973":0,"977":0,"981":0,"986":0,"987":0,"988":0,"989":0,"993":0,"994":0,"995":0,"996":0,"997":0,"1002":0,"1004":0,"1005":0,"1006":0,"1007":0,"1009":0,"1010":0,"1012":0,"1015":0,"1016":0,"1017":0,"1020":0,"1024":0,"1028":0,"1029":0,"1030":0,"1033":0,"1034":0,"1035":0,"1038":0,"1041":0,"1043":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/TokenStreamBase.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/TokenStreamBase.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"TokenStreamBase","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":34},"end":{"line":70,"column":51}}},"3":{"name":"(anonymous_3)","line":89,"loc":{"start":{"line":89,"column":21},"end":{"line":89,"column":34}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":33}}},"5":{"name":"(anonymous_5)","line":123,"loc":{"start":{"line":123,"column":11},"end":{"line":123,"column":41}}},"6":{"name":"(anonymous_6)","line":154,"loc":{"start":{"line":154,"column":15},"end":{"line":154,"column":36}}},"7":{"name":"(anonymous_7)","line":185,"loc":{"start":{"line":185,"column":13},"end":{"line":185,"column":43}}},"8":{"name":"(anonymous_8)","line":199,"loc":{"start":{"line":199,"column":9},"end":{"line":199,"column":27}}},"9":{"name":"(anonymous_9)","line":285,"loc":{"start":{"line":285,"column":8},"end":{"line":285,"column":24}}},"10":{"name":"(anonymous_10)","line":331,"loc":{"start":{"line":331,"column":8},"end":{"line":331,"column":24}}},"11":{"name":"(anonymous_11)","line":346,"loc":{"start":{"line":346,"column":10},"end":{"line":346,"column":21}}},"12":{"name":"(anonymous_12)","line":355,"loc":{"start":{"line":355,"column":11},"end":{"line":355,"column":22}}},"13":{"name":"(anonymous_13)","line":366,"loc":{"start":{"line":366,"column":15},"end":{"line":366,"column":35}}},"14":{"name":"(anonymous_14)","line":381,"loc":{"start":{"line":381,"column":15},"end":{"line":381,"column":35}}},"15":{"name":"(anonymous_15)","line":389,"loc":{"start":{"line":389,"column":11},"end":{"line":389,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"4":{"start":{"line":16,"column":0},"end":{"line":59,"column":1}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":67}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"7":{"start":{"line":40,"column":4},"end":{"line":40,"column":32}},"8":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"9":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}},"10":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"11":{"start":{"line":70,"column":0},"end":{"line":98,"column":2}},"12":{"start":{"line":72,"column":4},"end":{"line":76,"column":44}},"13":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"14":{"start":{"line":79,"column":4},"end":{"line":79,"column":38}},"15":{"start":{"line":81,"column":4},"end":{"line":87,"column":5}},"16":{"start":{"line":82,"column":8},"end":{"line":82,"column":40}},"17":{"start":{"line":83,"column":8},"end":{"line":83,"column":41}},"18":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"19":{"start":{"line":85,"column":12},"end":{"line":85,"column":43}},"20":{"start":{"line":89,"column":4},"end":{"line":91,"column":6}},"21":{"start":{"line":90,"column":8},"end":{"line":90,"column":27}},"22":{"start":{"line":93,"column":4},"end":{"line":95,"column":6}},"23":{"start":{"line":94,"column":8},"end":{"line":94,"column":26}},"24":{"start":{"line":97,"column":4},"end":{"line":97,"column":21}},"25":{"start":{"line":100,"column":0},"end":{"line":399,"column":2}},"26":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"27":{"start":{"line":127,"column":12},"end":{"line":127,"column":38}},"28":{"start":{"line":130,"column":8},"end":{"line":132,"column":36}},"29":{"start":{"line":134,"column":8},"end":{"line":138,"column":9}},"30":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"31":{"start":{"line":136,"column":16},"end":{"line":136,"column":28}},"32":{"start":{"line":141,"column":8},"end":{"line":141,"column":21}},"33":{"start":{"line":142,"column":8},"end":{"line":142,"column":21}},"34":{"start":{"line":156,"column":8},"end":{"line":156,"column":18}},"35":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"36":{"start":{"line":160,"column":12},"end":{"line":160,"column":38}},"37":{"start":{"line":163,"column":8},"end":{"line":167,"column":9}},"38":{"start":{"line":164,"column":12},"end":{"line":164,"column":31}},"39":{"start":{"line":165,"column":12},"end":{"line":166,"column":114}},"40":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"41":{"start":{"line":188,"column":12},"end":{"line":188,"column":23}},"42":{"start":{"line":191,"column":8},"end":{"line":191,"column":26}},"43":{"start":{"line":201,"column":8},"end":{"line":204,"column":17}},"44":{"start":{"line":207,"column":8},"end":{"line":227,"column":9}},"45":{"start":{"line":209,"column":12},"end":{"line":209,"column":16}},"46":{"start":{"line":210,"column":12},"end":{"line":210,"column":52}},"47":{"start":{"line":211,"column":12},"end":{"line":211,"column":47}},"48":{"start":{"line":214,"column":12},"end":{"line":219,"column":13}},"49":{"start":{"line":216,"column":16},"end":{"line":216,"column":56}},"50":{"start":{"line":217,"column":16},"end":{"line":217,"column":51}},"51":{"start":{"line":218,"column":16},"end":{"line":218,"column":20}},"52":{"start":{"line":222,"column":12},"end":{"line":226,"column":13}},"53":{"start":{"line":224,"column":16},"end":{"line":224,"column":43}},"54":{"start":{"line":225,"column":16},"end":{"line":225,"column":40}},"55":{"start":{"line":230,"column":8},"end":{"line":230,"column":33}},"56":{"start":{"line":233,"column":8},"end":{"line":257,"column":9}},"57":{"start":{"line":236,"column":12},"end":{"line":236,"column":58}},"58":{"start":{"line":239,"column":12},"end":{"line":239,"column":32}},"59":{"start":{"line":240,"column":12},"end":{"line":240,"column":33}},"60":{"start":{"line":243,"column":12},"end":{"line":243,"column":73}},"61":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"62":{"start":{"line":247,"column":16},"end":{"line":247,"column":33}},"63":{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},"64":{"start":{"line":252,"column":16},"end":{"line":252,"column":43}},"65":{"start":{"line":256,"column":12},"end":{"line":256,"column":44}},"66":{"start":{"line":264,"column":8},"end":{"line":264,"column":37}},"67":{"start":{"line":265,"column":8},"end":{"line":272,"column":9}},"68":{"start":{"line":268,"column":12},"end":{"line":268,"column":37}},"69":{"start":{"line":271,"column":12},"end":{"line":271,"column":30}},"70":{"start":{"line":286,"column":8},"end":{"line":287,"column":15}},"71":{"start":{"line":288,"column":8},"end":{"line":315,"column":9}},"72":{"start":{"line":290,"column":12},"end":{"line":292,"column":13}},"73":{"start":{"line":291,"column":16},"end":{"line":291,"column":55}},"74":{"start":{"line":295,"column":12},"end":{"line":298,"column":13}},"75":{"start":{"line":296,"column":16},"end":{"line":296,"column":32}},"76":{"start":{"line":297,"column":16},"end":{"line":297,"column":24}},"77":{"start":{"line":301,"column":12},"end":{"line":304,"column":13}},"78":{"start":{"line":302,"column":16},"end":{"line":302,"column":29}},"79":{"start":{"line":303,"column":16},"end":{"line":303,"column":24}},"80":{"start":{"line":305,"column":15},"end":{"line":315,"column":9}},"81":{"start":{"line":307,"column":12},"end":{"line":311,"column":13}},"82":{"start":{"line":308,"column":16},"end":{"line":308,"column":56}},"83":{"start":{"line":310,"column":16},"end":{"line":310,"column":56}},"84":{"start":{"line":314,"column":12},"end":{"line":314,"column":34}},"85":{"start":{"line":317,"column":8},"end":{"line":317,"column":18}},"86":{"start":{"line":334,"column":8},"end":{"line":334,"column":23}},"87":{"start":{"line":337,"column":8},"end":{"line":337,"column":47}},"88":{"start":{"line":347,"column":8},"end":{"line":347,"column":26}},"89":{"start":{"line":356,"column":8},"end":{"line":356,"column":27}},"90":{"start":{"line":367,"column":8},"end":{"line":371,"column":9}},"91":{"start":{"line":368,"column":12},"end":{"line":368,"column":35}},"92":{"start":{"line":370,"column":12},"end":{"line":370,"column":51}},"93":{"start":{"line":382,"column":8},"end":{"line":382,"column":48}},"94":{"start":{"line":391,"column":8},"end":{"line":396,"column":9}},"95":{"start":{"line":392,"column":12},"end":{"line":392,"column":54}},"96":{"start":{"line":393,"column":12},"end":{"line":393,"column":54}},"97":{"start":{"line":395,"column":12},"end":{"line":395,"column":51}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":44},"end":{"line":24,"column":60}},{"start":{"line":24,"column":63},"end":{"line":24,"column":65}}]},"2":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"3":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":8}},{"start":{"line":126,"column":8},"end":{"line":126,"column":8}}]},"4":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":12}},{"start":{"line":135,"column":12},"end":{"line":135,"column":12}}]},"5":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"6":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":8}},{"start":{"line":163,"column":8},"end":{"line":163,"column":8}}]},"7":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":15},"end":{"line":187,"column":31}},{"start":{"line":187,"column":35},"end":{"line":187,"column":67}}]},"8":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"9":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":27}},{"start":{"line":207,"column":31},"end":{"line":207,"column":49}},{"start":{"line":207,"column":53},"end":{"line":207,"column":84}}]},"10":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":20},"end":{"line":214,"column":46}},{"start":{"line":214,"column":50},"end":{"line":214,"column":74}},{"start":{"line":215,"column":20},"end":{"line":215,"column":51}}]},"11":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"12":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":17},"end":{"line":222,"column":43}},{"start":{"line":222,"column":47},"end":{"line":222,"column":71}},{"start":{"line":223,"column":20},"end":{"line":223,"column":52}}]},"13":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":233,"column":8}},{"start":{"line":233,"column":8},"end":{"line":233,"column":8}}]},"14":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":12},"end":{"line":233,"column":27}},{"start":{"line":233,"column":31},"end":{"line":233,"column":58}}]},"15":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":12}},{"start":{"line":246,"column":12},"end":{"line":246,"column":12}}]},"16":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":251,"column":12}},{"start":{"line":251,"column":12},"end":{"line":251,"column":12}}]},"17":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":8}},{"start":{"line":265,"column":8},"end":{"line":265,"column":8}}]},"18":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":16}},{"start":{"line":266,"column":17},"end":{"line":266,"column":26}},{"start":{"line":267,"column":17},"end":{"line":267,"column":43}},{"start":{"line":267,"column":47},"end":{"line":267,"column":71}}]},"19":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8}},{"start":{"line":288,"column":8},"end":{"line":288,"column":8}}]},"20":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":12},"end":{"line":290,"column":12}},{"start":{"line":290,"column":12},"end":{"line":290,"column":12}}]},"21":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":15},"end":{"line":305,"column":15}},{"start":{"line":305,"column":15},"end":{"line":305,"column":15}}]},"22":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":12}},{"start":{"line":307,"column":12},"end":{"line":307,"column":12}}]},"23":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":8}},{"start":{"line":367,"column":8},"end":{"line":367,"column":8}}]},"24":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":12},"end":{"line":367,"column":25}},{"start":{"line":367,"column":29},"end":{"line":367,"column":63}}]},"25":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":15},"end":{"line":382,"column":41}},{"start":{"line":382,"column":45},"end":{"line":382,"column":47}}]},"26":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":8},"end":{"line":391,"column":8}},{"start":{"line":391,"column":8},"end":{"line":391,"column":8}}]}},"code":["\"use strict\";","","module.exports = TokenStreamBase;","","var StringReader = require(\"./StringReader\");","var SyntaxError = require(\"./SyntaxError\");","","/**"," * Generic TokenStream providing base functionality."," * @class TokenStreamBase"," * @namespace parserlib.util"," * @constructor"," * @param {String|StringReader} input The text to tokenize or a reader from"," *      which to read the input."," */","function TokenStreamBase(input, tokenData) {","","    /**","     * The string reader for easy access to the text.","     * @type StringReader","     * @property _reader","     * @private","     */","    this._reader = new StringReader(input ? input.toString() : \"\");","","    /**","     * Token object for the last consumed token.","     * @type Token","     * @property _token","     * @private","     */","    this._token = null;","","    /**","     * The array of token information.","     * @type Array","     * @property _tokenData","     * @private","     */","    this._tokenData = tokenData;","","    /**","     * Lookahead token buffer.","     * @type Array","     * @property _lt","     * @private","     */","    this._lt = [];","","    /**","     * Lookahead token buffer index.","     * @type int","     * @property _ltIndex","     * @private","     */","    this._ltIndex = 0;","","    this._ltIndexCache = [];","}","","/**"," * Accepts an array of token information and outputs"," * an array of token data containing key-value mappings"," * and matching functions that the TokenStream needs."," * @param {Array} tokens An array of token descriptors."," * @return {Array} An array of processed token data."," * @method createTokenData"," * @static"," */","TokenStreamBase.createTokenData = function(tokens) {","","    var nameMap     = [],","        typeMap     = Object.create(null),","        tokenData     = tokens.concat([]),","        i            = 0,","        len            = tokenData.length+1;","","    tokenData.UNKNOWN = -1;","    tokenData.unshift({ name:\"EOF\" });","","    for (; i < len; i++) {","        nameMap.push(tokenData[i].name);","        tokenData[tokenData[i].name] = i;","        if (tokenData[i].text) {","            typeMap[tokenData[i].text] = i;","        }","    }","","    tokenData.name = function(tt) {","        return nameMap[tt];","    };","","    tokenData.type = function(c) {","        return typeMap[c];","    };","","    return tokenData;","};","","TokenStreamBase.prototype = {","","    //restore constructor","    constructor: TokenStreamBase,","","    //-------------------------------------------------------------------------","    // Matching methods","    //-------------------------------------------------------------------------","","    /**","     * Determines if the next token matches the given token type.","     * If so, that token is consumed; if not, the token is placed","     * back onto the token stream. You can pass in any number of","     * token types and this will return true if any of the token","     * types is found.","     * @param {int|int[]} tokenTypes Either a single token type or an array of","     *      token types that the next token might be. If an array is passed,","     *      it's assumed that the token can be any of these.","     * @param {variant} channel (Optional) The channel to read from. If not","     *      provided, reads from the default (unnamed) channel.","     * @return {Boolean} True if the token type matches, false if not.","     * @method match","     */","    match: function(tokenTypes, channel) {","","        //always convert to an array, makes things easier","        if (!(tokenTypes instanceof Array)) {","            tokenTypes = [tokenTypes];","        }","","        var tt  = this.get(channel),","            i   = 0,","            len = tokenTypes.length;","","        while (i < len) {","            if (tt === tokenTypes[i++]) {","                return true;","            }","        }","","        //no match found, put the token back","        this.unget();","        return false;","    },","","    /**","     * Determines if the next token matches the given token type.","     * If so, that token is consumed; if not, an error is thrown.","     * @param {int|int[]} tokenTypes Either a single token type or an array of","     *      token types that the next token should be. If an array is passed,","     *      it's assumed that the token must be one of these.","     * @return {void}","     * @method mustMatch","     */","    mustMatch: function(tokenTypes) {","","        var token;","","        //always convert to an array, makes things easier","        if (!(tokenTypes instanceof Array)) {","            tokenTypes = [tokenTypes];","        }","","        if (!this.match.apply(this, arguments)) {","            token = this.LT(1);","            throw new SyntaxError(\"Expected \" + this._tokenData[tokenTypes[0]].name +","                \" at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);","        }","    },","","    //-------------------------------------------------------------------------","    // Consuming methods","    //-------------------------------------------------------------------------","","    /**","     * Keeps reading from the token stream until either one of the specified","     * token types is found or until the end of the input is reached.","     * @param {int|int[]} tokenTypes Either a single token type or an array of","     *      token types that the next token should be. If an array is passed,","     *      it's assumed that the token must be one of these.","     * @param {variant} channel (Optional) The channel to read from. If not","     *      provided, reads from the default (unnamed) channel.","     * @return {void}","     * @method advance","     */","    advance: function(tokenTypes, channel) {","","        while (this.LA(0) !== 0 && !this.match(tokenTypes, channel)) {","            this.get();","        }","","        return this.LA(0);","    },","","    /**","     * Consumes the next token from the token stream.","     * @return {int} The token type of the token that was just consumed.","     * @method get","     */","    get: function(channel) {","","        var tokenInfo   = this._tokenData,","            i           =0,","            token,","            info;","","        //check the lookahead buffer first","        if (this._lt.length && this._ltIndex >= 0 && this._ltIndex < this._lt.length) {","","            i++;","            this._token = this._lt[this._ltIndex++];","            info = tokenInfo[this._token.type];","","            //obey channels logic","            while ((info.channel !== undefined && channel !== info.channel) &&","                    this._ltIndex < this._lt.length) {","                this._token = this._lt[this._ltIndex++];","                info = tokenInfo[this._token.type];","                i++;","            }","","            //here be dragons","            if ((info.channel === undefined || channel === info.channel) &&","                    this._ltIndex <= this._lt.length) {","                this._ltIndexCache.push(i);","                return this._token.type;","            }","        }","","        //call token retriever method","        token = this._getToken();","","        //if it should be hidden, don't save a token","        if (token.type > -1 && !tokenInfo[token.type].hide) {","","            //apply token channel","            token.channel = tokenInfo[token.type].channel;","","            //save for later","            this._token = token;","            this._lt.push(token);","","            //save space that will be moved (must be done before array is truncated)","            this._ltIndexCache.push(this._lt.length - this._ltIndex + i);","","            //keep the buffer under 5 items","            if (this._lt.length > 5) {","                this._lt.shift();","            }","","            //also keep the shift buffer under 5 items","            if (this._ltIndexCache.length > 5) {","                this._ltIndexCache.shift();","            }","","            //update lookahead index","            this._ltIndex = this._lt.length;","        }","","        /*","         * Skip to the next token if:","         * 1. The token type is marked as hidden.","         * 2. The token type has a channel specified and it isn't the current channel.","         */","        info = tokenInfo[token.type];","        if (info &&","                (info.hide ||","                (info.channel !== undefined && channel !== info.channel))) {","            return this.get(channel);","        } else {","            //return just the type","            return token.type;","        }","    },","","    /**","     * Looks ahead a certain number of tokens and returns the token type at","     * that position. This will throw an error if you lookahead past the","     * end of input, past the size of the lookahead buffer, or back past","     * the first token in the lookahead buffer.","     * @param {int} The index of the token type to retrieve. 0 for the","     *      current token, 1 for the next, -1 for the previous, etc.","     * @return {int} The token type of the token in the given position.","     * @method LA","     */","    LA: function(index) {","        var total = index,","            tt;","        if (index > 0) {","            //TODO: Store 5 somewhere","            if (index > 5) {","                throw new Error(\"Too much lookahead.\");","            }","","            //get all those tokens","            while (total) {","                tt = this.get();","                total--;","            }","","            //unget all those tokens","            while (total < index) {","                this.unget();","                total++;","            }","        } else if (index < 0) {","","            if (this._lt[this._ltIndex+index]) {","                tt = this._lt[this._ltIndex+index].type;","            } else {","                throw new Error(\"Too much lookbehind.\");","            }","","        } else {","            tt = this._token.type;","        }","","        return tt;","","    },","","    /**","     * Looks ahead a certain number of tokens and returns the token at","     * that position. This will throw an error if you lookahead past the","     * end of input, past the size of the lookahead buffer, or back past","     * the first token in the lookahead buffer.","     * @param {int} The index of the token type to retrieve. 0 for the","     *      current token, 1 for the next, -1 for the previous, etc.","     * @return {Object} The token of the token in the given position.","     * @method LA","     */","    LT: function(index) {","","        //lookahead first to prime the token buffer","        this.LA(index);","","        //now find the token, subtract one because _ltIndex is already at the next index","        return this._lt[this._ltIndex+index-1];","    },","","    /**","     * Returns the token type for the next token in the stream without","     * consuming it.","     * @return {int} The token type of the next token in the stream.","     * @method peek","     */","    peek: function() {","        return this.LA(1);","    },","","    /**","     * Returns the actual token object for the last consumed token.","     * @return {Token} The token object for the last consumed token.","     * @method token","     */","    token: function() {","        return this._token;","    },","","    /**","     * Returns the name of the token for the given token type.","     * @param {int} tokenType The type of token to get the name of.","     * @return {String} The name of the token or \"UNKNOWN_TOKEN\" for any","     *      invalid token type.","     * @method tokenName","     */","    tokenName: function(tokenType) {","        if (tokenType < 0 || tokenType > this._tokenData.length) {","            return \"UNKNOWN_TOKEN\";","        } else {","            return this._tokenData[tokenType].name;","        }","    },","","    /**","     * Returns the token type value for the given token name.","     * @param {String} tokenName The name of the token whose value should be returned.","     * @return {int} The token type value for the given token name or -1","     *      for an unknown token.","     * @method tokenName","     */","    tokenType: function(tokenName) {","        return this._tokenData[tokenName] || -1;","    },","","    /**","     * Returns the last consumed token to the token stream.","     * @method unget","     */","    unget: function() {","        //if (this._ltIndex > -1) {","        if (this._ltIndexCache.length) {","            this._ltIndex -= this._ltIndexCache.pop();//--;","            this._token = this._lt[this._ltIndex - 1];","        } else {","            throw new Error(\"Too much lookahead.\");","        }","    }","","};","",""],"l":{"3":1,"5":1,"6":1,"16":1,"24":1,"32":1,"40":1,"48":1,"56":1,"58":1,"70":1,"72":0,"78":0,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"89":0,"90":0,"93":0,"94":0,"97":0,"100":1,"126":0,"127":0,"130":0,"134":0,"135":0,"136":0,"141":0,"142":0,"156":0,"159":0,"160":0,"163":0,"164":0,"165":0,"187":0,"188":0,"191":0,"201":0,"207":0,"209":0,"210":0,"211":0,"214":0,"216":0,"217":0,"218":0,"222":0,"224":0,"225":0,"230":0,"233":0,"236":0,"239":0,"240":0,"243":0,"246":0,"247":0,"251":0,"252":0,"256":0,"264":0,"265":0,"268":0,"271":0,"286":0,"288":0,"290":0,"291":0,"295":0,"296":0,"297":0,"301":0,"302":0,"303":0,"305":0,"307":0,"308":0,"310":0,"314":0,"317":0,"334":0,"337":0,"347":0,"356":0,"367":0,"368":0,"370":0,"382":0,"391":0,"392":0,"393":0,"395":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/StringReader.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/StringReader.js","s":{"1":1,"2":1,"3":40,"4":40,"5":40,"6":40,"7":1,"8":0,"9":0,"10":39,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2015,"17":2015,"18":2015,"19":0,"20":0,"21":2015,"22":2015,"23":2015,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1861,"43":1861,"44":1354,"45":169,"46":507,"47":507,"48":185,"49":1861,"50":354,"51":354,"52":2015,"53":354},"b":{"1":[0,0],"2":[0,0],"3":[2015,0],"4":[0,2015],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1354,507],"10":[169,1185],"11":[507,0],"12":[185,322]},"f":{"1":40,"2":0,"3":0,"4":39,"5":0,"6":2015,"7":0,"8":0,"9":0,"10":0,"11":1861,"12":354},"fnMap":{"1":{"name":"StringReader","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":23}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":13},"end":{"line":72,"column":24}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":9},"end":{"line":81,"column":20}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":10},"end":{"line":95,"column":26}}},"6":{"name":"(anonymous_6)","line":115,"loc":{"start":{"line":115,"column":10},"end":{"line":115,"column":21}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":10},"end":{"line":146,"column":21}}},"8":{"name":"(anonymous_8)","line":154,"loc":{"start":{"line":154,"column":11},"end":{"line":154,"column":22}}},"9":{"name":"(anonymous_9)","line":175,"loc":{"start":{"line":175,"column":12},"end":{"line":175,"column":30}}},"10":{"name":"(anonymous_10)","line":208,"loc":{"start":{"line":208,"column":15},"end":{"line":208,"column":32}}},"11":{"name":"(anonymous_11)","line":234,"loc":{"start":{"line":234,"column":15},"end":{"line":234,"column":33}}},"12":{"name":"(anonymous_12)","line":261,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":12,"column":0},"end":{"line":47,"column":1}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":52}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":19}},"5":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"6":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}},"7":{"start":{"line":49,"column":0},"end":{"line":271,"column":2}},"8":{"start":{"line":64,"column":8},"end":{"line":64,"column":25}},"9":{"start":{"line":73,"column":8},"end":{"line":73,"column":26}},"10":{"start":{"line":82,"column":8},"end":{"line":82,"column":51}},"11":{"start":{"line":96,"column":8},"end":{"line":96,"column":21}},"12":{"start":{"line":97,"column":8},"end":{"line":97,"column":57}},"13":{"start":{"line":100,"column":8},"end":{"line":104,"column":9}},"14":{"start":{"line":103,"column":12},"end":{"line":103,"column":61}},"15":{"start":{"line":106,"column":8},"end":{"line":106,"column":17}},"16":{"start":{"line":116,"column":8},"end":{"line":116,"column":21}},"17":{"start":{"line":119,"column":8},"end":{"line":132,"column":9}},"18":{"start":{"line":123,"column":12},"end":{"line":128,"column":13}},"19":{"start":{"line":124,"column":16},"end":{"line":124,"column":29}},"20":{"start":{"line":125,"column":16},"end":{"line":125,"column":28}},"21":{"start":{"line":127,"column":16},"end":{"line":127,"column":28}},"22":{"start":{"line":131,"column":12},"end":{"line":131,"column":51}},"23":{"start":{"line":134,"column":8},"end":{"line":134,"column":17}},"24":{"start":{"line":147,"column":8},"end":{"line":151,"column":10}},"25":{"start":{"line":155,"column":8},"end":{"line":160,"column":9}},"26":{"start":{"line":156,"column":12},"end":{"line":156,"column":49}},"27":{"start":{"line":157,"column":12},"end":{"line":157,"column":45}},"28":{"start":{"line":158,"column":12},"end":{"line":158,"column":43}},"29":{"start":{"line":159,"column":12},"end":{"line":159,"column":34}},"30":{"start":{"line":177,"column":8},"end":{"line":178,"column":14}},"31":{"start":{"line":185,"column":8},"end":{"line":192,"column":9}},"32":{"start":{"line":186,"column":12},"end":{"line":186,"column":28}},"33":{"start":{"line":187,"column":12},"end":{"line":191,"column":13}},"34":{"start":{"line":188,"column":16},"end":{"line":188,"column":28}},"35":{"start":{"line":190,"column":16},"end":{"line":190,"column":116}},"36":{"start":{"line":194,"column":8},"end":{"line":194,"column":22}},"37":{"start":{"line":210,"column":8},"end":{"line":211,"column":28}},"38":{"start":{"line":213,"column":8},"end":{"line":216,"column":9}},"39":{"start":{"line":214,"column":12},"end":{"line":214,"column":34}},"40":{"start":{"line":215,"column":12},"end":{"line":215,"column":28}},"41":{"start":{"line":218,"column":8},"end":{"line":218,"column":22}},"42":{"start":{"line":236,"column":8},"end":{"line":237,"column":25}},"43":{"start":{"line":240,"column":8},"end":{"line":248,"column":9}},"44":{"start":{"line":241,"column":12},"end":{"line":243,"column":13}},"45":{"start":{"line":242,"column":16},"end":{"line":242,"column":55}},"46":{"start":{"line":244,"column":15},"end":{"line":248,"column":9}},"47":{"start":{"line":245,"column":12},"end":{"line":247,"column":13}},"48":{"start":{"line":246,"column":16},"end":{"line":246,"column":64}},"49":{"start":{"line":250,"column":8},"end":{"line":250,"column":21}},"50":{"start":{"line":262,"column":8},"end":{"line":262,"column":24}},"51":{"start":{"line":264,"column":8},"end":{"line":266,"column":9}},"52":{"start":{"line":265,"column":12},"end":{"line":265,"column":34}},"53":{"start":{"line":268,"column":8},"end":{"line":268,"column":22}}},"branchMap":{"1":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":47},"end":{"line":97,"column":48}},{"start":{"line":97,"column":51},"end":{"line":97,"column":56}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"3":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"4":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]},"5":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"6":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":45}},{"start":{"line":185,"column":49},"end":{"line":185,"column":111}}]},"7":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":12},"end":{"line":187,"column":12}},{"start":{"line":187,"column":12},"end":{"line":187,"column":12}}]},"8":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":15},"end":{"line":213,"column":25}},{"start":{"line":213,"column":29},"end":{"line":213,"column":38}}]},"9":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"10":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":12},"end":{"line":241,"column":12}},{"start":{"line":241,"column":12},"end":{"line":241,"column":12}}]},"11":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":15},"end":{"line":244,"column":15}},{"start":{"line":244,"column":15},"end":{"line":244,"column":15}}]},"12":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":12},"end":{"line":245,"column":12}},{"start":{"line":245,"column":12},"end":{"line":245,"column":12}}]}},"code":["\"use strict\";","","module.exports = StringReader;","","/**"," * Convenient way to read through strings."," * @namespace parserlib.util"," * @class StringReader"," * @constructor"," * @param {String} text The text to read."," */","function StringReader(text) {","","    /**","     * The input text with line endings normalized.","     * @property _input","     * @type String","     * @private","     */","    this._input = text.replace(/(\\r\\n?|\\n)/g, \"\\n\");","","","    /**","     * The row for the character to be read next.","     * @property _line","     * @type int","     * @private","     */","    this._line = 1;","","","    /**","     * The column for the character to be read next.","     * @property _col","     * @type int","     * @private","     */","    this._col = 1;","","    /**","     * The index of the character in the input to be read next.","     * @property _cursor","     * @type int","     * @private","     */","    this._cursor = 0;","}","","StringReader.prototype = {","","    // restore constructor","    constructor: StringReader,","","    //-------------------------------------------------------------------------","    // Position info","    //-------------------------------------------------------------------------","","    /**","     * Returns the column of the character to be read next.","     * @return {int} The column of the character to be read next.","     * @method getCol","     */","    getCol: function() {","        return this._col;","    },","","    /**","     * Returns the row of the character to be read next.","     * @return {int} The row of the character to be read next.","     * @method getLine","     */","    getLine: function() {","        return this._line;","    },","","    /**","     * Determines if you're at the end of the input.","     * @return {Boolean} True if there's no more input, false otherwise.","     * @method eof","     */","    eof: function() {","        return this._cursor === this._input.length;","    },","","    //-------------------------------------------------------------------------","    // Basic reading","    //-------------------------------------------------------------------------","","    /**","     * Reads the next character without advancing the cursor.","     * @param {int} count How many characters to look ahead (default is 1).","     * @return {String} The next character or null if there is no next character.","     * @method peek","     */","    peek: function(count) {","        var c = null;","        count = typeof count === \"undefined\" ? 1 : count;","","        // if we're not at the end of the input...","        if (this._cursor < this._input.length) {","","            // get character and increment cursor and column","            c = this._input.charAt(this._cursor + count - 1);","        }","","        return c;","    },","","    /**","     * Reads the next character from the input and adjusts the row and column","     * accordingly.","     * @return {String} The next character or null if there is no next character.","     * @method read","     */","    read: function() {","        var c = null;","","        // if we're not at the end of the input...","        if (this._cursor < this._input.length) {","","            // if the last character was a newline, increment row count","            // and reset column count","            if (this._input.charAt(this._cursor) === \"\\n\") {","                this._line++;","                this._col=1;","            } else {","                this._col++;","            }","","            // get character and increment cursor and column","            c = this._input.charAt(this._cursor++);","        }","","        return c;","    },","","    //-------------------------------------------------------------------------","    // Misc","    //-------------------------------------------------------------------------","","    /**","     * Saves the current location so it can be returned to later.","     * @method mark","     * @return {void}","     */","    mark: function() {","        this._bookmark = {","            cursor: this._cursor,","            line:   this._line,","            col:    this._col","        };","    },","","    reset: function() {","        if (this._bookmark) {","            this._cursor = this._bookmark.cursor;","            this._line = this._bookmark.line;","            this._col = this._bookmark.col;","            delete this._bookmark;","        }","    },","","    //-------------------------------------------------------------------------","    // Advanced reading","    //-------------------------------------------------------------------------","","    /**","     * Reads up to and including the given string. Throws an error if that","     * string is not found.","     * @param {String} pattern The string to read.","     * @return {String} The string when it is found.","     * @throws Error when the string pattern is not found.","     * @method readTo","     */","    readTo: function(pattern) {","","        var buffer = \"\",","            c;","","        /*","         * First, buffer must be the same length as the pattern.","         * Then, buffer must end with the pattern or else reach the","         * end of the input.","         */","        while (buffer.length < pattern.length || buffer.lastIndexOf(pattern) !== buffer.length - pattern.length) {","            c = this.read();","            if (c) {","                buffer += c;","            } else {","                throw new Error(\"Expected \\\"\" + pattern + \"\\\" at line \" + this._line  + \", col \" + this._col + \".\");","            }","        }","","        return buffer;","","    },","","    /**","     * Reads characters while each character causes the given","     * filter function to return true. The function is passed","     * in each character and either returns true to continue","     * reading or false to stop.","     * @param {Function} filter The function to read on each character.","     * @return {String} The string made up of all characters that passed the","     *      filter check.","     * @method readWhile","     */","    readWhile: function(filter) {","","        var buffer = \"\",","            c = this.peek();","","        while (c !== null && filter(c)) {","            buffer += this.read();","            c = this.peek();","        }","","        return buffer;","","    },","","    /**","     * Reads characters that match either text or a regular expression and","     * returns those characters. If a match is found, the row and column","     * are adjusted; if no match is found, the reader's state is unchanged.","     * reading or false to stop.","     * @param {String|RegExp} matcher If a string, then the literal string","     *      value is searched for. If a regular expression, then any string","     *      matching the pattern is search for.","     * @return {String} The string made up of all characters that matched or","     *      null if there was no match.","     * @method readMatch","     */","    readMatch: function(matcher) {","","        var source = this._input.substring(this._cursor),","            value = null;","","        // if it's a string, just do a straight match","        if (typeof matcher === \"string\") {","            if (source.slice(0, matcher.length) === matcher) {","                value = this.readCount(matcher.length);","            }","        } else if (matcher instanceof RegExp) {","            if (matcher.test(source)) {","                value = this.readCount(RegExp.lastMatch.length);","            }","        }","","        return value;","    },","","","    /**","     * Reads a given number of characters. If the end of the input is reached,","     * it reads only the remaining characters and does not throw an error.","     * @param {int} count The number of characters to read.","     * @return {String} The string made up the read characters.","     * @method readCount","     */","    readCount: function(count) {","        var buffer = \"\";","","        while (count--) {","            buffer += this.read();","        }","","        return buffer;","    }","","};",""],"l":{"3":1,"12":1,"20":40,"29":40,"38":40,"46":40,"49":1,"64":0,"73":0,"82":39,"96":0,"97":0,"100":0,"103":0,"106":0,"116":2015,"119":2015,"123":2015,"124":0,"125":0,"127":2015,"131":2015,"134":2015,"147":0,"155":0,"156":0,"157":0,"158":0,"159":0,"177":0,"185":0,"186":0,"187":0,"188":0,"190":0,"194":0,"210":0,"213":0,"214":0,"215":0,"218":0,"236":1861,"240":1861,"241":1354,"242":169,"244":507,"245":507,"246":185,"250":1861,"262":354,"264":354,"265":2015,"268":354}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Validation.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Validation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":40}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":20},"end":{"line":44,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"6":{"start":{"line":11,"column":0},"end":{"line":66,"column":2}},"7":{"start":{"line":16,"column":8},"end":{"line":19,"column":17}},"8":{"start":{"line":21,"column":8},"end":{"line":40,"column":9}},"9":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"10":{"start":{"line":23,"column":16},"end":{"line":23,"column":111}},"11":{"start":{"line":25,"column":15},"end":{"line":40,"column":9}},"12":{"start":{"line":29,"column":12},"end":{"line":35,"column":13}},"13":{"start":{"line":30,"column":16},"end":{"line":33,"column":17}},"14":{"start":{"line":31,"column":20},"end":{"line":31,"column":45}},"15":{"start":{"line":32,"column":20},"end":{"line":32,"column":118}},"16":{"start":{"line":34,"column":16},"end":{"line":34,"column":23}},"17":{"start":{"line":38,"column":12},"end":{"line":38,"column":50}},"18":{"start":{"line":46,"column":8},"end":{"line":48,"column":17}},"19":{"start":{"line":50,"column":8},"end":{"line":50,"column":56}},"20":{"start":{"line":52,"column":8},"end":{"line":62,"column":9}},"21":{"start":{"line":53,"column":12},"end":{"line":58,"column":13}},"22":{"start":{"line":54,"column":16},"end":{"line":54,"column":41}},"23":{"start":{"line":55,"column":16},"end":{"line":55,"column":114}},"24":{"start":{"line":57,"column":16},"end":{"line":57,"column":146}},"25":{"start":{"line":59,"column":15},"end":{"line":62,"column":9}},"26":{"start":{"line":60,"column":12},"end":{"line":60,"column":37}},"27":{"start":{"line":61,"column":12},"end":{"line":61,"column":110}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":15}},{"start":{"line":25,"column":15},"end":{"line":25,"column":15}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":12}},{"start":{"line":29,"column":12},"end":{"line":29,"column":12}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":16}},{"start":{"line":30,"column":16},"end":{"line":30,"column":16}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]},"8":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":36}},{"start":{"line":53,"column":40},"end":{"line":53,"column":61}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":15}},{"start":{"line":59,"column":15},"end":{"line":59,"column":15}}]}},"code":["\"use strict\";","","/* exported Validation */","","var Matcher = require(\"./Matcher\");","var Properties = require(\"./Properties\");","var ValidationTypes = require(\"./ValidationTypes\");","var ValidationError = require(\"./ValidationError\");","var PropertyValueIterator = require(\"./PropertyValueIterator\");","","var Validation = module.exports = {","","    validate: function(property, value) {","","        //normalize name","        var name        = property.toString().toLowerCase(),","            expression  = new PropertyValueIterator(value),","            spec        = Properties[name],","            part;","","        if (!spec) {","            if (name.indexOf(\"-\") !== 0) {    //vendor prefixed are ok","                throw new ValidationError(\"Unknown property '\" + property + \"'.\", property.line, property.col);","            }","        } else if (typeof spec !== \"number\") {","","            // All properties accept some CSS-wide values.","            // https://drafts.csswg.org/css-values-3/#common-keywords","            if (ValidationTypes.isAny(expression, \"inherit | initial | unset\")) {","                if (expression.hasNext()) {","                    part = expression.next();","                    throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);","                }","                return;","            }","","            // Property-specific validation.","            this.singleProperty(spec, expression);","","        }","","    },","","    singleProperty: function(types, expression) {","","        var result      = false,","            value       = expression.value,","            part;","","        result = Matcher.parse(types).match(expression);","","        if (!result) {","            if (expression.hasNext() && !expression.isFirst()) {","                part = expression.peek();","                throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);","            } else {","                throw new ValidationError(\"Expected (\" + ValidationTypes.describe(types) + \") but found '\" + value + \"'.\", value.line, value.col);","            }","        } else if (expression.hasNext()) {","            part = expression.next();","            throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);","        }","","    }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"16":0,"21":0,"22":0,"23":0,"25":0,"29":0,"30":0,"31":0,"32":0,"34":0,"38":0,"46":0,"50":0,"52":0,"53":0,"54":0,"55":0,"57":0,"59":0,"60":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Matcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Matcher.js","s":{"1":1,"2":1,"3":1,"4":1,"5":234,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":234,"14":0,"15":1,"16":1,"17":39,"18":39,"19":39,"20":197,"21":197,"22":0,"23":197,"24":39,"25":69,"26":69,"27":70,"28":69,"29":39,"30":139,"31":139,"32":24,"33":139,"34":39,"35":163,"36":163,"37":1,"38":163,"39":39,"40":164,"41":164,"42":13,"43":164,"44":39,"45":177,"46":177,"47":8,"48":169,"49":1,"50":168,"51":1,"52":167,"53":4,"54":163,"55":5,"56":5,"57":5,"58":5,"59":5,"60":158,"61":39,"62":177,"63":30,"64":30,"65":30,"66":147,"67":39,"68":39,"69":0,"70":39,"71":1,"72":195,"73":180,"74":15,"75":1,"76":147,"77":147,"78":0,"79":1,"80":16,"81":16,"82":0,"83":16,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":36,"96":36,"97":0,"98":36,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":13,"111":48,"112":4,"113":4,"114":44,"115":48,"116":13,"117":1,"118":2,"119":13,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":13,"158":13,"159":1,"160":1,"161":1,"162":1,"163":1,"164":10,"165":10,"166":10,"167":1,"168":0,"169":0,"170":0,"171":5,"172":0,"173":0,"174":0,"175":1,"176":1,"177":9,"178":4,"179":22,"180":22,"181":6,"182":22,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0},"b":{"1":[0,0],"2":[87,147],"3":[0,197],"4":[33,36],"5":[130,9],"6":[162,1],"7":[153,11],"8":[8,169],"9":[1,168],"10":[1,167],"11":[4,163],"12":[5,158],"13":[30,147],"14":[0,39],"15":[180,15],"16":[0,0],"17":[0,16],"18":[0,0],"19":[0,0],"20":[0,36],"21":[0,0],"22":[0,0],"23":[4,44],"24":[1,12],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[5,17],"41":[6,16],"42":[0,0],"43":[0,0],"44":[0,0]},"f":{"1":234,"2":0,"3":0,"4":39,"5":197,"6":69,"7":139,"8":163,"9":164,"10":177,"11":177,"12":195,"13":147,"14":0,"15":16,"16":0,"17":0,"18":0,"19":36,"20":0,"21":0,"22":0,"23":13,"24":48,"25":2,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":10,"33":0,"34":0,"35":0,"36":5,"37":0,"38":0,"39":0,"40":1,"41":1,"42":9,"43":4,"44":22,"45":0,"46":0},"fnMap":{"1":{"name":"Matcher","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":38}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":64},"end":{"line":27,"column":75}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":30}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":10},"end":{"line":45,"column":28}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":22}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":22}}},"8":{"name":"(anonymous_8)","line":69,"loc":{"start":{"line":69,"column":13},"end":{"line":69,"column":24}}},"9":{"name":"(anonymous_9)","line":77,"loc":{"start":{"line":77,"column":10},"end":{"line":77,"column":21}}},"10":{"name":"(anonymous_10)","line":85,"loc":{"start":{"line":85,"column":10},"end":{"line":85,"column":21}}},"11":{"name":"(anonymous_11)","line":105,"loc":{"start":{"line":105,"column":11},"end":{"line":105,"column":22}}},"12":{"name":"(anonymous_12)","line":126,"loc":{"start":{"line":126,"column":15},"end":{"line":126,"column":27}}},"13":{"name":"(anonymous_13)","line":136,"loc":{"start":{"line":136,"column":19},"end":{"line":136,"column":34}}},"14":{"name":"(anonymous_14)","line":139,"loc":{"start":{"line":139,"column":23},"end":{"line":139,"column":44}}},"15":{"name":"(anonymous_15)","line":148,"loc":{"start":{"line":148,"column":14},"end":{"line":148,"column":25}}},"16":{"name":"(anonymous_16)","line":153,"loc":{"start":{"line":153,"column":23},"end":{"line":153,"column":44}}},"17":{"name":"(anonymous_17)","line":159,"loc":{"start":{"line":159,"column":7},"end":{"line":159,"column":22}}},"18":{"name":"(anonymous_18)","line":161,"loc":{"start":{"line":161,"column":23},"end":{"line":161,"column":35}}},"19":{"name":"(anonymous_19)","line":175,"loc":{"start":{"line":175,"column":14},"end":{"line":175,"column":25}}},"20":{"name":"(anonymous_20)","line":180,"loc":{"start":{"line":180,"column":23},"end":{"line":180,"column":44}}},"21":{"name":"(anonymous_21)","line":186,"loc":{"start":{"line":186,"column":7},"end":{"line":186,"column":22}}},"22":{"name":"(anonymous_22)","line":188,"loc":{"start":{"line":188,"column":23},"end":{"line":188,"column":35}}},"23":{"name":"(anonymous_23)","line":205,"loc":{"start":{"line":205,"column":15},"end":{"line":205,"column":34}}},"24":{"name":"(anonymous_24)","line":206,"loc":{"start":{"line":206,"column":61},"end":{"line":206,"column":78}}},"25":{"name":"(anonymous_25)","line":219,"loc":{"start":{"line":219,"column":26},"end":{"line":219,"column":37}}},"26":{"name":"(anonymous_26)","line":224,"loc":{"start":{"line":224,"column":29},"end":{"line":224,"column":50}}},"27":{"name":"(anonymous_27)","line":226,"loc":{"start":{"line":226,"column":22},"end":{"line":226,"column":43}}},"28":{"name":"(anonymous_28)","line":234,"loc":{"start":{"line":234,"column":23},"end":{"line":234,"column":44}}},"29":{"name":"(anonymous_29)","line":275,"loc":{"start":{"line":275,"column":7},"end":{"line":275,"column":22}}},"30":{"name":"(anonymous_30)","line":277,"loc":{"start":{"line":277,"column":23},"end":{"line":277,"column":38}}},"31":{"name":"(anonymous_31)","line":296,"loc":{"start":{"line":296,"column":17},"end":{"line":296,"column":28}}},"32":{"name":"(anonymous_32)","line":307,"loc":{"start":{"line":307,"column":15},"end":{"line":307,"column":26}}},"33":{"name":"(anonymous_33)","line":317,"loc":{"start":{"line":317,"column":11},"end":{"line":317,"column":22}}},"34":{"name":"(anonymous_34)","line":318,"loc":{"start":{"line":318,"column":14},"end":{"line":318,"column":25}}},"35":{"name":"(anonymous_35)","line":320,"loc":{"start":{"line":320,"column":10},"end":{"line":320,"column":21}}},"36":{"name":"(anonymous_36)","line":322,"loc":{"start":{"line":322,"column":10},"end":{"line":322,"column":22}}},"37":{"name":"(anonymous_37)","line":323,"loc":{"start":{"line":323,"column":8},"end":{"line":323,"column":20}}},"38":{"name":"(anonymous_38)","line":324,"loc":{"start":{"line":324,"column":12},"end":{"line":324,"column":24}}},"39":{"name":"(anonymous_39)","line":325,"loc":{"start":{"line":325,"column":10},"end":{"line":325,"column":22}}},"40":{"name":"(anonymous_40)","line":327,"loc":{"start":{"line":327,"column":10},"end":{"line":327,"column":21}}},"41":{"name":"(anonymous_41)","line":328,"loc":{"start":{"line":328,"column":10},"end":{"line":328,"column":21}}},"42":{"name":"(anonymous_42)","line":329,"loc":{"start":{"line":329,"column":14},"end":{"line":329,"column":25}}},"43":{"name":"(anonymous_43)","line":330,"loc":{"start":{"line":330,"column":10},"end":{"line":330,"column":21}}},"44":{"name":"(anonymous_44)","line":333,"loc":{"start":{"line":333,"column":12},"end":{"line":333,"column":47}}},"45":{"name":"(anonymous_45)","line":338,"loc":{"start":{"line":338,"column":27},"end":{"line":338,"column":48}}},"46":{"name":"(anonymous_46)","line":351,"loc":{"start":{"line":351,"column":11},"end":{"line":351,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"4":{"start":{"line":13,"column":0},"end":{"line":30,"column":1}},"5":{"start":{"line":14,"column":4},"end":{"line":26,"column":6}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":19}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":39}},"9":{"start":{"line":20,"column":8},"end":{"line":24,"column":9}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":30}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":33}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":22}},"13":{"start":{"line":27,"column":4},"end":{"line":29,"column":6}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":24}},"15":{"start":{"line":33,"column":0},"end":{"line":39,"column":2}},"16":{"start":{"line":42,"column":0},"end":{"line":120,"column":2}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":64}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":35}},"19":{"start":{"line":45,"column":4},"end":{"line":52,"column":6}},"20":{"start":{"line":46,"column":8},"end":{"line":46,"column":47}},"21":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"22":{"start":{"line":48,"column":12},"end":{"line":49,"column":72}},"23":{"start":{"line":51,"column":8},"end":{"line":51,"column":22}},"24":{"start":{"line":53,"column":4},"end":{"line":60,"column":6}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"26":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"27":{"start":{"line":57,"column":12},"end":{"line":57,"column":27}},"28":{"start":{"line":59,"column":8},"end":{"line":59,"column":69}},"29":{"start":{"line":61,"column":4},"end":{"line":68,"column":6}},"30":{"start":{"line":63,"column":8},"end":{"line":63,"column":29}},"31":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"32":{"start":{"line":65,"column":12},"end":{"line":65,"column":29}},"33":{"start":{"line":67,"column":8},"end":{"line":67,"column":70}},"34":{"start":{"line":69,"column":4},"end":{"line":76,"column":6}},"35":{"start":{"line":71,"column":8},"end":{"line":71,"column":26}},"36":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"37":{"start":{"line":73,"column":12},"end":{"line":73,"column":26}},"38":{"start":{"line":75,"column":8},"end":{"line":75,"column":72}},"39":{"start":{"line":77,"column":4},"end":{"line":84,"column":6}},"40":{"start":{"line":79,"column":8},"end":{"line":79,"column":26}},"41":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"42":{"start":{"line":81,"column":12},"end":{"line":81,"column":26}},"43":{"start":{"line":83,"column":8},"end":{"line":83,"column":69}},"44":{"start":{"line":85,"column":4},"end":{"line":104,"column":6}},"45":{"start":{"line":87,"column":8},"end":{"line":87,"column":23}},"46":{"start":{"line":88,"column":8},"end":{"line":102,"column":9}},"47":{"start":{"line":89,"column":12},"end":{"line":89,"column":32}},"48":{"start":{"line":90,"column":15},"end":{"line":102,"column":9}},"49":{"start":{"line":91,"column":12},"end":{"line":91,"column":28}},"50":{"start":{"line":92,"column":15},"end":{"line":102,"column":9}},"51":{"start":{"line":93,"column":12},"end":{"line":93,"column":28}},"52":{"start":{"line":94,"column":15},"end":{"line":102,"column":9}},"53":{"start":{"line":95,"column":12},"end":{"line":95,"column":28}},"54":{"start":{"line":96,"column":15},"end":{"line":102,"column":9}},"55":{"start":{"line":97,"column":12},"end":{"line":97,"column":34}},"56":{"start":{"line":98,"column":12},"end":{"line":98,"column":28}},"57":{"start":{"line":99,"column":12},"end":{"line":99,"column":34}},"58":{"start":{"line":100,"column":12},"end":{"line":100,"column":26}},"59":{"start":{"line":101,"column":12},"end":{"line":101,"column":40}},"60":{"start":{"line":103,"column":8},"end":{"line":103,"column":17}},"61":{"start":{"line":105,"column":4},"end":{"line":113,"column":6}},"62":{"start":{"line":107,"column":8},"end":{"line":111,"column":9}},"63":{"start":{"line":108,"column":12},"end":{"line":108,"column":27}},"64":{"start":{"line":109,"column":12},"end":{"line":109,"column":22}},"65":{"start":{"line":110,"column":12},"end":{"line":110,"column":21}},"66":{"start":{"line":112,"column":8},"end":{"line":112,"column":52}},"67":{"start":{"line":114,"column":4},"end":{"line":114,"column":20}},"68":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"69":{"start":{"line":116,"column":8},"end":{"line":117,"column":73}},"70":{"start":{"line":119,"column":4},"end":{"line":119,"column":18}},"71":{"start":{"line":126,"column":0},"end":{"line":131,"column":2}},"72":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"73":{"start":{"line":128,"column":8},"end":{"line":128,"column":17}},"74":{"start":{"line":130,"column":4},"end":{"line":130,"column":28}},"75":{"start":{"line":136,"column":0},"end":{"line":142,"column":2}},"76":{"start":{"line":138,"column":4},"end":{"line":138,"column":55}},"77":{"start":{"line":139,"column":4},"end":{"line":141,"column":13}},"78":{"start":{"line":140,"column":8},"end":{"line":140,"column":80}},"79":{"start":{"line":148,"column":0},"end":{"line":169,"column":2}},"80":{"start":{"line":149,"column":4},"end":{"line":149,"column":69}},"81":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"82":{"start":{"line":151,"column":8},"end":{"line":151,"column":21}},"83":{"start":{"line":153,"column":4},"end":{"line":168,"column":7}},"84":{"start":{"line":154,"column":8},"end":{"line":154,"column":29}},"85":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"86":{"start":{"line":156,"column":12},"end":{"line":156,"column":45}},"87":{"start":{"line":158,"column":8},"end":{"line":158,"column":22}},"88":{"start":{"line":160,"column":8},"end":{"line":160,"column":33}},"89":{"start":{"line":161,"column":8},"end":{"line":163,"column":21}},"90":{"start":{"line":162,"column":12},"end":{"line":162,"column":33}},"91":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"92":{"start":{"line":165,"column":12},"end":{"line":165,"column":32}},"93":{"start":{"line":167,"column":8},"end":{"line":167,"column":17}},"94":{"start":{"line":175,"column":0},"end":{"line":196,"column":2}},"95":{"start":{"line":176,"column":4},"end":{"line":176,"column":69}},"96":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"97":{"start":{"line":178,"column":8},"end":{"line":178,"column":21}},"98":{"start":{"line":180,"column":4},"end":{"line":195,"column":7}},"99":{"start":{"line":181,"column":8},"end":{"line":181,"column":30}},"100":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"101":{"start":{"line":183,"column":12},"end":{"line":183,"column":45}},"102":{"start":{"line":185,"column":8},"end":{"line":185,"column":22}},"103":{"start":{"line":187,"column":8},"end":{"line":187,"column":33}},"104":{"start":{"line":188,"column":8},"end":{"line":190,"column":23}},"105":{"start":{"line":189,"column":12},"end":{"line":189,"column":33}},"106":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"107":{"start":{"line":192,"column":12},"end":{"line":192,"column":32}},"108":{"start":{"line":194,"column":8},"end":{"line":194,"column":17}},"109":{"start":{"line":205,"column":0},"end":{"line":290,"column":2}},"110":{"start":{"line":206,"column":4},"end":{"line":216,"column":11}},"111":{"start":{"line":207,"column":8},"end":{"line":214,"column":9}},"112":{"start":{"line":210,"column":12},"end":{"line":210,"column":63}},"113":{"start":{"line":211,"column":12},"end":{"line":211,"column":75}},"114":{"start":{"line":213,"column":12},"end":{"line":213,"column":38}},"115":{"start":{"line":215,"column":8},"end":{"line":215,"column":19}},"116":{"start":{"line":218,"column":4},"end":{"line":222,"column":5}},"117":{"start":{"line":219,"column":8},"end":{"line":221,"column":11}},"118":{"start":{"line":220,"column":12},"end":{"line":220,"column":24}},"119":{"start":{"line":224,"column":4},"end":{"line":287,"column":7}},"120":{"start":{"line":225,"column":8},"end":{"line":225,"column":41}},"121":{"start":{"line":226,"column":8},"end":{"line":233,"column":10}},"122":{"start":{"line":227,"column":12},"end":{"line":232,"column":13}},"123":{"start":{"line":228,"column":16},"end":{"line":228,"column":48}},"124":{"start":{"line":229,"column":16},"end":{"line":229,"column":48}},"125":{"start":{"line":231,"column":16},"end":{"line":231,"column":42}},"126":{"start":{"line":234,"column":8},"end":{"line":257,"column":10}},"127":{"start":{"line":235,"column":12},"end":{"line":255,"column":13}},"128":{"start":{"line":236,"column":16},"end":{"line":238,"column":17}},"129":{"start":{"line":237,"column":20},"end":{"line":237,"column":29}},"130":{"start":{"line":239,"column":16},"end":{"line":239,"column":34}},"131":{"start":{"line":240,"column":16},"end":{"line":254,"column":17}},"132":{"start":{"line":241,"column":20},"end":{"line":241,"column":35}},"133":{"start":{"line":244,"column":20},"end":{"line":247,"column":21}},"134":{"start":{"line":245,"column":24},"end":{"line":245,"column":42}},"135":{"start":{"line":246,"column":24},"end":{"line":246,"column":36}},"136":{"start":{"line":250,"column":20},"end":{"line":250,"column":41}},"137":{"start":{"line":251,"column":20},"end":{"line":251,"column":36}},"138":{"start":{"line":253,"column":20},"end":{"line":253,"column":38}},"139":{"start":{"line":256,"column":12},"end":{"line":256,"column":39}},"140":{"start":{"line":258,"column":8},"end":{"line":263,"column":9}},"141":{"start":{"line":261,"column":12},"end":{"line":261,"column":19}},"142":{"start":{"line":262,"column":12},"end":{"line":262,"column":24}},"143":{"start":{"line":265,"column":8},"end":{"line":267,"column":9}},"144":{"start":{"line":266,"column":12},"end":{"line":266,"column":27}},"145":{"start":{"line":269,"column":8},"end":{"line":273,"column":9}},"146":{"start":{"line":270,"column":12},"end":{"line":272,"column":13}},"147":{"start":{"line":271,"column":16},"end":{"line":271,"column":29}},"148":{"start":{"line":274,"column":8},"end":{"line":274,"column":20}},"149":{"start":{"line":276,"column":8},"end":{"line":276,"column":77}},"150":{"start":{"line":277,"column":8},"end":{"line":282,"column":54}},"151":{"start":{"line":278,"column":12},"end":{"line":280,"column":13}},"152":{"start":{"line":279,"column":16},"end":{"line":279,"column":58}},"153":{"start":{"line":281,"column":12},"end":{"line":281,"column":33}},"154":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"155":{"start":{"line":284,"column":12},"end":{"line":284,"column":32}},"156":{"start":{"line":286,"column":8},"end":{"line":286,"column":17}},"157":{"start":{"line":288,"column":4},"end":{"line":288,"column":24}},"158":{"start":{"line":289,"column":4},"end":{"line":289,"column":18}},"159":{"start":{"line":296,"column":0},"end":{"line":300,"column":2}},"160":{"start":{"line":297,"column":4},"end":{"line":297,"column":53}},"161":{"start":{"line":298,"column":4},"end":{"line":298,"column":23}},"162":{"start":{"line":299,"column":4},"end":{"line":299,"column":45}},"163":{"start":{"line":307,"column":0},"end":{"line":311,"column":2}},"164":{"start":{"line":308,"column":4},"end":{"line":308,"column":53}},"165":{"start":{"line":309,"column":4},"end":{"line":309,"column":24}},"166":{"start":{"line":310,"column":4},"end":{"line":310,"column":45}},"167":{"start":{"line":314,"column":0},"end":{"line":355,"column":2}},"168":{"start":{"line":317,"column":24},"end":{"line":317,"column":57}},"169":{"start":{"line":318,"column":27},"end":{"line":318,"column":60}},"170":{"start":{"line":320,"column":23},"end":{"line":320,"column":52}},"171":{"start":{"line":322,"column":24},"end":{"line":322,"column":52}},"172":{"start":{"line":323,"column":22},"end":{"line":323,"column":50}},"173":{"start":{"line":324,"column":26},"end":{"line":324,"column":61}},"174":{"start":{"line":325,"column":24},"end":{"line":325,"column":60}},"175":{"start":{"line":327,"column":23},"end":{"line":327,"column":60}},"176":{"start":{"line":328,"column":23},"end":{"line":328,"column":60}},"177":{"start":{"line":329,"column":27},"end":{"line":329,"column":57}},"178":{"start":{"line":331,"column":8},"end":{"line":331,"column":64}},"179":{"start":{"line":334,"column":8},"end":{"line":334,"column":62}},"180":{"start":{"line":335,"column":8},"end":{"line":337,"column":9}},"181":{"start":{"line":336,"column":12},"end":{"line":336,"column":49}},"182":{"start":{"line":338,"column":8},"end":{"line":353,"column":11}},"183":{"start":{"line":339,"column":12},"end":{"line":339,"column":33}},"184":{"start":{"line":340,"column":12},"end":{"line":349,"column":13}},"185":{"start":{"line":341,"column":16},"end":{"line":345,"column":17}},"186":{"start":{"line":342,"column":20},"end":{"line":342,"column":50}},"187":{"start":{"line":344,"column":20},"end":{"line":344,"column":50}},"188":{"start":{"line":346,"column":16},"end":{"line":348,"column":17}},"189":{"start":{"line":347,"column":20},"end":{"line":347,"column":26}},"190":{"start":{"line":350,"column":12},"end":{"line":350,"column":28}},"191":{"start":{"line":352,"column":12},"end":{"line":352,"column":58}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":53},"end":{"line":27,"column":61}},{"start":{"line":27,"column":64},"end":{"line":29,"column":5}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"4":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":32},"end":{"line":59,"column":36}},{"start":{"line":59,"column":39},"end":{"line":59,"column":68}}]},"5":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":32},"end":{"line":67,"column":36}},{"start":{"line":67,"column":39},"end":{"line":67,"column":69}}]},"6":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":32},"end":{"line":75,"column":36}},{"start":{"line":75,"column":39},"end":{"line":75,"column":71}}]},"7":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":32},"end":{"line":83,"column":36}},{"start":{"line":83,"column":39},"end":{"line":83,"column":68}}]},"8":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"9":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":15},"end":{"line":90,"column":15}},{"start":{"line":90,"column":15},"end":{"line":90,"column":15}}]},"10":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":15},"end":{"line":92,"column":15}},{"start":{"line":92,"column":15},"end":{"line":92,"column":15}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":15},"end":{"line":94,"column":15}},{"start":{"line":94,"column":15},"end":{"line":94,"column":15}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":15},"end":{"line":96,"column":15}},{"start":{"line":96,"column":15},"end":{"line":96,"column":15}}]},"13":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"14":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"15":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"16":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":15},"end":{"line":140,"column":35}},{"start":{"line":140,"column":39},"end":{"line":140,"column":79}}]},"17":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"18":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":20},"end":{"line":155,"column":26}},{"start":{"line":155,"column":30},"end":{"line":155,"column":43}}]},"19":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"20":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"21":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":20},"end":{"line":182,"column":27}},{"start":{"line":182,"column":31},"end":{"line":182,"column":44}}]},"22":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"23":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"24":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"25":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"26":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":16}},{"start":{"line":236,"column":16},"end":{"line":236,"column":16}}]},"27":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":16},"end":{"line":240,"column":16}},{"start":{"line":240,"column":16},"end":{"line":240,"column":16}}]},"28":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":20},"end":{"line":244,"column":20}},{"start":{"line":244,"column":20},"end":{"line":244,"column":20}}]},"29":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":85},"end":{"line":244,"column":86}},{"start":{"line":244,"column":89},"end":{"line":244,"column":90}}]},"30":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":48},"end":{"line":244,"column":66}},{"start":{"line":244,"column":70},"end":{"line":244,"column":81}}]},"31":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8}},{"start":{"line":258,"column":8},"end":{"line":258,"column":8}}]},"32":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":8}},{"start":{"line":265,"column":8},"end":{"line":265,"column":8}}]},"33":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":12},"end":{"line":270,"column":12}},{"start":{"line":270,"column":12},"end":{"line":270,"column":12}}]},"34":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":16},"end":{"line":270,"column":27}},{"start":{"line":270,"column":31},"end":{"line":270,"column":39}}]},"35":{"line":276,"type":"cond-expr","locations":[{"start":{"line":276,"column":37},"end":{"line":276,"column":54}},{"start":{"line":276,"column":57},"end":{"line":276,"column":76}}]},"36":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":12},"end":{"line":278,"column":12}},{"start":{"line":278,"column":12},"end":{"line":278,"column":12}}]},"37":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":16},"end":{"line":278,"column":34}},{"start":{"line":278,"column":38},"end":{"line":278,"column":50}}]},"38":{"line":282,"type":"cond-expr","locations":[{"start":{"line":282,"column":37},"end":{"line":282,"column":43}},{"start":{"line":282,"column":46},"end":{"line":282,"column":52}}]},"39":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"40":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":37},"end":{"line":334,"column":54}},{"start":{"line":334,"column":57},"end":{"line":334,"column":61}}]},"41":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":8},"end":{"line":335,"column":8}},{"start":{"line":335,"column":8},"end":{"line":335,"column":8}}]},"42":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":16},"end":{"line":341,"column":16}},{"start":{"line":341,"column":16},"end":{"line":341,"column":16}}]},"43":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":20},"end":{"line":341,"column":25}},{"start":{"line":341,"column":29},"end":{"line":341,"column":35}}]},"44":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":16}},{"start":{"line":346,"column":16},"end":{"line":346,"column":16}}]}},"code":["\"use strict\";","","module.exports = Matcher;","","var StringReader = require(\"../util/StringReader\");","var SyntaxError = require(\"../util/SyntaxError\");","","/**"," * This class implements a combinator library for matcher functions."," * The combinators are described at:"," * https://developer.mozilla.org/en-US/docs/Web/CSS/Value_definition_syntax#Component_value_combinators"," */","function Matcher(matchFunc, toString) {","    this.match = function(expression) {","        // Save/restore marks to ensure that failed matches always restore","        // the original location in the expression.","        var result;","        expression.mark();","        result = matchFunc(expression);","        if (result) {","            expression.drop();","        } else {","            expression.restore();","        }","        return result;","    };","    this.toString = typeof toString === \"function\" ? toString : function() {","        return toString;","    };","}","","/** Precedence table of combinators. */","Matcher.prec = {","    MOD:    5,","    SEQ:    4,","    ANDAND: 3,","    OROR:   2,","    ALT:    1","};","","/** Simple recursive-descent grammar to build matchers from strings. */","Matcher.parse = function(str) {","    var reader, eat, expr, oror, andand, seq, mod, term, result;","    reader = new StringReader(str);","    eat = function(matcher) {","        var result = reader.readMatch(matcher);","        if (result === null) {","            throw new SyntaxError(","                \"Expected \"+matcher, reader.getLine(), reader.getCol());","        }","        return result;","    };","    expr = function() {","        // expr = oror (\" | \" oror)*","        var m = [ oror() ];","        while (reader.readMatch(\" | \") !== null) {","            m.push(oror());","        }","        return m.length === 1 ? m[0] : Matcher.alt.apply(Matcher, m);","    };","    oror = function() {","        // oror = andand ( \" || \" andand)*","        var m = [ andand() ];","        while (reader.readMatch(\" || \") !== null) {","            m.push(andand());","        }","        return m.length === 1 ? m[0] : Matcher.oror.apply(Matcher, m);","    };","    andand = function() {","        // andand = seq ( \" && \" seq)*","        var m = [ seq() ];","        while (reader.readMatch(\" && \") !== null) {","            m.push(seq());","        }","        return m.length === 1 ? m[0] : Matcher.andand.apply(Matcher, m);","    };","    seq = function() {","        // seq = mod ( \" \" mod)*","        var m = [ mod() ];","        while (reader.readMatch(/^ (?![&|\\]])/) !== null) {","            m.push(mod());","        }","        return m.length === 1 ? m[0] : Matcher.seq.apply(Matcher, m);","    };","    mod = function() {","        // mod = term ( \"?\" | \"*\" | \"+\" | \"#\" | \"{<num>,<num>}\" )?","        var m = term();","        if (reader.readMatch(\"?\") !== null) {","            return m.question();","        } else if (reader.readMatch(\"*\") !== null) {","            return m.star();","        } else if (reader.readMatch(\"+\") !== null) {","            return m.plus();","        } else if (reader.readMatch(\"#\") !== null) {","            return m.hash();","        } else if (reader.readMatch(/^\\{\\s*/) !== null) {","            var min = eat(/^\\d+/);","            eat(/^\\s*,\\s*/);","            var max = eat(/^\\d+/);","            eat(/^\\s*\\}/);","            return m.braces(+min, +max);","        }","        return m;","    };","    term = function() {","        // term = <nt> | literal | \"[ \" expression \" ]\"","        if (reader.readMatch(\"[ \") !== null) {","            var m = expr();","            eat(\" ]\");","            return m;","        }","        return Matcher.fromType(eat(/^[^ ?*+#{]+/));","    };","    result = expr();","    if (!reader.eof()) {","        throw new SyntaxError(","            \"Expected end of string\", reader.getLine(), reader.getCol());","    }","    return result;","};","","/**"," * Convert a string to a matcher (parsing simple alternations),"," * or do nothing if the argument is already a matcher."," */","Matcher.cast = function(m) {","    if (m instanceof Matcher) {","        return m;","    }","    return Matcher.parse(m);","};","","/**"," * Create a matcher for a single type."," */","Matcher.fromType = function(type) {","    // Late require of ValidationTypes to break a dependency cycle.","    var ValidationTypes = require(\"./ValidationTypes\");","    return new Matcher(function(expression) {","        return expression.hasNext() && ValidationTypes.isType(expression, type);","    }, type);","};","","/**"," * Create a matcher for one or more juxtaposed words, which all must"," * occur, in the given order."," */","Matcher.seq = function() {","    var ms = Array.prototype.slice.call(arguments).map(Matcher.cast);","    if (ms.length === 1) {","        return ms[0];","    }","    return new Matcher(function(expression) {","        var i, result = true;","        for (i = 0; result && i < ms.length; i++) {","            result = ms[i].match(expression);","        }","        return result;","    }, function(prec) {","        var p = Matcher.prec.SEQ;","        var s = ms.map(function(m) {","            return m.toString(p);","        }).join(\" \");","        if (prec > p) {","            s = \"[ \" + s + \" ]\";","        }","        return s;","    });","};","","/**"," * Create a matcher for one or more alternatives, where exactly one"," * must occur."," */","Matcher.alt = function() {","    var ms = Array.prototype.slice.call(arguments).map(Matcher.cast);","    if (ms.length === 1) {","        return ms[0];","    }","    return new Matcher(function(expression) {","        var i, result = false;","        for (i = 0; !result && i < ms.length; i++) {","            result = ms[i].match(expression);","        }","        return result;","    }, function(prec) {","        var p = Matcher.prec.ALT;","        var s = ms.map(function(m) {","            return m.toString(p);","        }).join(\" | \");","        if (prec > p) {","            s = \"[ \" + s + \" ]\";","        }","        return s;","    });","};","","/**"," * Create a matcher for two or more options.  This implements the"," * double bar (||) and double ampersand (&&) operators, as well as"," * variants of && where some of the alternatives are optional."," * This will backtrack through even successful matches to try to"," * maximize the number of items matched."," */","Matcher.many = function(required) {","    var ms = Array.prototype.slice.call(arguments, 1).reduce(function(acc, v) {","        if (v.expand) {","            // Insert all of the options for the given complex rule as","            // individual options.","            var ValidationTypes = require(\"./ValidationTypes\");","            acc.push.apply(acc, ValidationTypes.complex[v.expand].options);","        } else {","            acc.push(Matcher.cast(v));","        }","        return acc;","    }, []);","","    if (required === true) {","        required = ms.map(function() {","            return true;","        });","    }","","    var result = new Matcher(function(expression) {","        var seen = [], max = 0, pass = 0;","        var success = function(matchCount) {","            if (pass === 0) {","                max = Math.max(matchCount, max);","                return matchCount === ms.length;","            } else {","                return matchCount === max;","            }","        };","        var tryMatch = function(matchCount) {","            for (var i = 0; i < ms.length; i++) {","                if (seen[i]) {","                    continue;","                }","                expression.mark();","                if (ms[i].match(expression)) {","                    seen[i] = true;","                    // Increase matchCount iff this was a required element","                    // (or if all the elements are optional)","                    if (tryMatch(matchCount + ((required === false || required[i]) ? 1 : 0))) {","                        expression.drop();","                        return true;","                    }","                    // Backtrack: try *not* matching using this rule, and","                    // let's see if it leads to a better overall match.","                    expression.restore();","                    seen[i] = false;","                } else {","                    expression.drop();","                }","            }","            return success(matchCount);","        };","        if (!tryMatch(0)) {","            // Couldn't get a complete match, retrace our steps to make the","            // match with the maximum # of required elements.","            pass++;","            tryMatch(0);","        }","","        if (required === false) {","            return max > 0;","        }","        // Use finer-grained specification of which matchers are required.","        for (var i = 0; i < ms.length; i++) {","            if (required[i] && !seen[i]) {","                return false;","            }","        }","        return true;","    }, function(prec) {","        var p = required === false ? Matcher.prec.OROR : Matcher.prec.ANDAND;","        var s = ms.map(function(m, i) {","            if (required !== false && !required[i]) {","                return m.toString(Matcher.prec.MOD) + \"?\";","            }","            return m.toString(p);","        }).join(required === false ? \" || \" : \" && \");","        if (prec > p) {","            s = \"[ \" + s + \" ]\";","        }","        return s;","    });","    result.options = ms;","    return result;","};","","/**"," * Create a matcher for two or more options, where all options are"," * mandatory but they may appear in any order."," */","Matcher.andand = function() {","    var args = Array.prototype.slice.call(arguments);","    args.unshift(true);","    return Matcher.many.apply(Matcher, args);","};","","/**"," * Create a matcher for two or more options, where options are"," * optional and may appear in any order, but at least one must be"," * present."," */","Matcher.oror = function() {","    var args = Array.prototype.slice.call(arguments);","    args.unshift(false);","    return Matcher.many.apply(Matcher, args);","};","","/** Instance methods on Matchers. */","Matcher.prototype = {","    constructor: Matcher,","    // These are expected to be overridden in every instance.","    match: function() { throw new Error(\"unimplemented\"); },","    toString: function() { throw new Error(\"unimplemented\"); },","    // This returns a standalone function to do the matching.","    func: function() { return this.match.bind(this); },","    // Basic combinators","    then: function(m) { return Matcher.seq(this, m); },","    or: function(m) { return Matcher.alt(this, m); },","    andand: function(m) { return Matcher.many(true, this, m); },","    oror: function(m) { return Matcher.many(false, this, m); },","    // Component value multipliers","    star: function() { return this.braces(0, Infinity, \"*\"); },","    plus: function() { return this.braces(1, Infinity, \"+\"); },","    question: function() { return this.braces(0, 1, \"?\"); },","    hash: function() {","        return this.braces(1, Infinity, \"#\", Matcher.cast(\",\"));","    },","    braces: function(min, max, marker, optSep) {","        var m1 = this, m2 = optSep ? optSep.then(this) : this;","        if (!marker) {","            marker = \"{\" + min + \",\" + max + \"}\";","        }","        return new Matcher(function(expression) {","            var result = true, i;","            for (i = 0; i < max; i++) {","                if (i > 0 && optSep) {","                    result = m2.match(expression);","                } else {","                    result = m1.match(expression);","                }","                if (!result) {","                    break;","                }","            }","            return i >= min;","        }, function() {","            return m1.toString(Matcher.prec.MOD) + marker;","        });","    }","};",""],"l":{"3":1,"5":1,"6":1,"13":1,"14":234,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"25":0,"27":234,"28":0,"33":1,"42":1,"43":39,"44":39,"45":39,"46":197,"47":197,"48":0,"51":197,"53":39,"55":69,"56":69,"57":70,"59":69,"61":39,"63":139,"64":139,"65":24,"67":139,"69":39,"71":163,"72":163,"73":1,"75":163,"77":39,"79":164,"80":164,"81":13,"83":164,"85":39,"87":177,"88":177,"89":8,"90":169,"91":1,"92":168,"93":1,"94":167,"95":4,"96":163,"97":5,"98":5,"99":5,"100":5,"101":5,"103":158,"105":39,"107":177,"108":30,"109":30,"110":30,"112":147,"114":39,"115":39,"116":0,"119":39,"126":1,"127":195,"128":180,"130":15,"136":1,"138":147,"139":147,"140":0,"148":1,"149":16,"150":16,"151":0,"153":16,"154":0,"155":0,"156":0,"158":0,"160":0,"161":0,"162":0,"164":0,"165":0,"167":0,"175":1,"176":36,"177":36,"178":0,"180":36,"181":0,"182":0,"183":0,"185":0,"187":0,"188":0,"189":0,"191":0,"192":0,"194":0,"205":1,"206":13,"207":48,"210":4,"211":4,"213":44,"215":48,"218":13,"219":1,"220":2,"224":13,"225":0,"226":0,"227":0,"228":0,"229":0,"231":0,"234":0,"235":0,"236":0,"237":0,"239":0,"240":0,"241":0,"244":0,"245":0,"246":0,"250":0,"251":0,"253":0,"256":0,"258":0,"261":0,"262":0,"265":0,"266":0,"269":0,"270":0,"271":0,"274":0,"276":0,"277":0,"278":0,"279":0,"281":0,"283":0,"284":0,"286":0,"288":13,"289":13,"296":1,"297":1,"298":1,"299":1,"307":1,"308":10,"309":10,"310":10,"314":1,"317":0,"318":0,"320":0,"322":5,"323":0,"324":0,"325":0,"327":1,"328":1,"329":9,"331":4,"334":22,"335":22,"336":6,"338":22,"339":0,"340":0,"341":0,"342":0,"344":0,"346":0,"347":0,"350":0,"352":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Properties.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/Properties.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":492,"column":2}}},"branchMap":{},"code":["\"use strict\";","","/* exported Properties */","","var Properties = module.exports = {","    __proto__: null,","","    //A","    \"align-items\"                   : \"flex-start | flex-end | center | baseline | stretch\",","    \"align-content\"                 : \"flex-start | flex-end | center | space-between | space-around | stretch\",","    \"align-self\"                    : \"auto | flex-start | flex-end | center | baseline | stretch\",","    \"all\"                           : \"initial | inherit | unset\",","    \"-webkit-align-items\"           : \"flex-start | flex-end | center | baseline | stretch\",","    \"-webkit-align-content\"         : \"flex-start | flex-end | center | space-between | space-around | stretch\",","    \"-webkit-align-self\"            : \"auto | flex-start | flex-end | center | baseline | stretch\",","    \"alignment-adjust\"              : \"auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | <percentage> | <length>\",","    \"alignment-baseline\"            : \"auto | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",","    \"animation\"                     : 1,","    \"animation-delay\"               : \"<time>#\",","    \"animation-direction\"           : \"<single-animation-direction>#\",","    \"animation-duration\"            : \"<time>#\",","    \"animation-fill-mode\"           : \"[ none | forwards | backwards | both ]#\",","    \"animation-iteration-count\"     : \"[ <number> | infinite ]#\",","    \"animation-name\"                : \"[ none | <single-animation-name> ]#\",","    \"animation-play-state\"          : \"[ running | paused ]#\",","    \"animation-timing-function\"     : 1,","","    //vendor prefixed","    \"-moz-animation-delay\"               : \"<time>#\",","    \"-moz-animation-direction\"           : \"[ normal | alternate ]#\",","    \"-moz-animation-duration\"            : \"<time>#\",","    \"-moz-animation-iteration-count\"     : \"[ <number> | infinite ]#\",","    \"-moz-animation-name\"                : \"[ none | <single-animation-name> ]#\",","    \"-moz-animation-play-state\"          : \"[ running | paused ]#\",","","    \"-ms-animation-delay\"               : \"<time>#\",","    \"-ms-animation-direction\"           : \"[ normal | alternate ]#\",","    \"-ms-animation-duration\"            : \"<time>#\",","    \"-ms-animation-iteration-count\"     : \"[ <number> | infinite ]#\",","    \"-ms-animation-name\"                : \"[ none | <single-animation-name> ]#\",","    \"-ms-animation-play-state\"          : \"[ running | paused ]#\",","","    \"-webkit-animation-delay\"               : \"<time>#\",","    \"-webkit-animation-direction\"           : \"[ normal | alternate ]#\",","    \"-webkit-animation-duration\"            : \"<time>#\",","    \"-webkit-animation-fill-mode\"           : \"[ none | forwards | backwards | both ]#\",","    \"-webkit-animation-iteration-count\"     : \"[ <number> | infinite ]#\",","    \"-webkit-animation-name\"                : \"[ none | <single-animation-name> ]#\",","    \"-webkit-animation-play-state\"          : \"[ running | paused ]#\",","","    \"-o-animation-delay\"               : \"<time>#\",","    \"-o-animation-direction\"           : \"[ normal | alternate ]#\",","    \"-o-animation-duration\"            : \"<time>#\",","    \"-o-animation-iteration-count\"     : \"[ <number> | infinite ]#\",","    \"-o-animation-name\"                : \"[ none | <single-animation-name> ]#\",","    \"-o-animation-play-state\"          : \"[ running | paused ]#\",","","    \"appearance\"                    : \"none | auto\",","    \"-moz-appearance\"               : \"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\",","    \"-ms-appearance\"                : \"none | icon | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",","    \"-webkit-appearance\"            : \"none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | listbox\t| listitem | media-fullscreen-button | media-mute-button | media-play-button | media-seek-back-button\t| media-seek-forward-button\t| media-slider | media-sliderthumb | menulist\t| menulist-button\t| menulist-text\t| menulist-textfield | push-button\t| radio\t| searchfield\t| searchfield-cancel-button\t| searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical\t| square-button\t| textarea\t| textfield\t| scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical\",","    \"-o-appearance\"                 : \"none | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",","","    \"azimuth\"                       : \"<azimuth>\",","","    //B","    \"backface-visibility\"           : \"visible | hidden\",","    \"background\"                    : 1,","    \"background-attachment\"         : \"<attachment>#\",","    \"background-clip\"               : \"<box>#\",","    \"background-color\"              : \"<color>\",","    \"background-image\"              : \"<bg-image>#\",","    \"background-origin\"             : \"<box>#\",","    \"background-position\"           : \"<bg-position>\",","    \"background-repeat\"             : \"<repeat-style>#\",","    \"background-size\"               : \"<bg-size>#\",","    \"baseline-shift\"                : \"baseline | sub | super | <percentage> | <length>\",","    \"behavior\"                      : 1,","    \"binding\"                       : 1,","    \"bleed\"                         : \"<length>\",","    \"bookmark-label\"                : \"<content> | <attr> | <string>\",","    \"bookmark-level\"                : \"none | <integer>\",","    \"bookmark-state\"                : \"open | closed\",","    \"bookmark-target\"               : \"none | <uri> | <attr>\",","    \"border\"                        : \"<border-width> || <border-style> || <color>\",","    \"border-bottom\"                 : \"<border-width> || <border-style> || <color>\",","    \"border-bottom-color\"           : \"<color>\",","    \"border-bottom-left-radius\"     :  \"<x-one-radius>\",","    \"border-bottom-right-radius\"    :  \"<x-one-radius>\",","    \"border-bottom-style\"           : \"<border-style>\",","    \"border-bottom-width\"           : \"<border-width>\",","    \"border-collapse\"               : \"collapse | separate\",","    \"border-color\"                  : \"<color>{1,4}\",","    \"border-image\"                  : 1,","    \"border-image-outset\"           : \"[ <length> | <number> ]{1,4}\",","    \"border-image-repeat\"           : \"[ stretch | repeat | round ]{1,2}\",","    \"border-image-slice\"            : \"<border-image-slice>\",","    \"border-image-source\"           : \"<image> | none\",","    \"border-image-width\"            : \"[ <length> | <percentage> | <number> | auto ]{1,4}\",","    \"border-left\"                   : \"<border-width> || <border-style> || <color>\",","    \"border-left-color\"             : \"<color>\",","    \"border-left-style\"             : \"<border-style>\",","    \"border-left-width\"             : \"<border-width>\",","    \"border-radius\"                 : \"<border-radius>\",","    \"border-right\"                  : \"<border-width> || <border-style> || <color>\",","    \"border-right-color\"            : \"<color>\",","    \"border-right-style\"            : \"<border-style>\",","    \"border-right-width\"            : \"<border-width>\",","    \"border-spacing\"                : \"<length>{1,2}\",","    \"border-style\"                  : \"<border-style>{1,4}\",","    \"border-top\"                    : \"<border-width> || <border-style> || <color>\",","    \"border-top-color\"              : \"<color>\",","    \"border-top-left-radius\"        : \"<x-one-radius>\",","    \"border-top-right-radius\"       : \"<x-one-radius>\",","    \"border-top-style\"              : \"<border-style>\",","    \"border-top-width\"              : \"<border-width>\",","    \"border-width\"                  : \"<border-width>{1,4}\",","    \"bottom\"                        : \"<margin-width>\",","    \"-moz-box-align\"                : \"start | end | center | baseline | stretch\",","    \"-moz-box-decoration-break\"     : \"slice | clone\",","    \"-moz-box-direction\"            : \"normal | reverse\",","    \"-moz-box-flex\"                 : \"<number>\",","    \"-moz-box-flex-group\"           : \"<integer>\",","    \"-moz-box-lines\"                : \"single | multiple\",","    \"-moz-box-ordinal-group\"        : \"<integer>\",","    \"-moz-box-orient\"               : \"horizontal | vertical | inline-axis | block-axis\",","    \"-moz-box-pack\"                 : \"start | end | center | justify\",","    \"-o-box-decoration-break\"       : \"slice | clone\",","    \"-webkit-box-align\"             : \"start | end | center | baseline | stretch\",","    \"-webkit-box-decoration-break\"  : \"slice | clone\",","    \"-webkit-box-direction\"         : \"normal | reverse\",","    \"-webkit-box-flex\"              : \"<number>\",","    \"-webkit-box-flex-group\"        : \"<integer>\",","    \"-webkit-box-lines\"             : \"single | multiple\",","    \"-webkit-box-ordinal-group\"     : \"<integer>\",","    \"-webkit-box-orient\"            : \"horizontal | vertical | inline-axis | block-axis\",","    \"-webkit-box-pack\"              : \"start | end | center | justify\",","    \"box-decoration-break\"          : \"slice | clone\",","    \"box-shadow\"                    : \"<box-shadow>\",","    \"box-sizing\"                    : \"content-box | border-box\",","    \"break-after\"                   : \"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",","    \"break-before\"                  : \"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",","    \"break-inside\"                  : \"auto | avoid | avoid-page | avoid-column\",","","    //C","    \"caption-side\"                  : \"top | bottom\",","    \"clear\"                         : \"none | right | left | both\",","    \"clip\"                          : \"<shape> | auto\",","    \"-webkit-clip-path\"             : \"<clip-source> | <clip-path> | none\",","    \"clip-path\"                     : \"<clip-source> | <clip-path> | none\",","    \"clip-rule\"                     : \"nonzero | evenodd\",","    \"color\"                         : \"<color>\",","    \"color-interpolation\"           : \"auto | sRGB | linearRGB\",","    \"color-interpolation-filters\"   : \"auto | sRGB | linearRGB\",","    \"color-profile\"                 : 1,","    \"color-rendering\"               : \"auto | optimizeSpeed | optimizeQuality\",","    \"column-count\"                  : \"<integer> | auto\",                      //https://www.w3.org/TR/css3-multicol/","    \"column-fill\"                   : \"auto | balance\",","    \"column-gap\"                    : \"<length> | normal\",","    \"column-rule\"                   : \"<border-width> || <border-style> || <color>\",","    \"column-rule-color\"             : \"<color>\",","    \"column-rule-style\"             : \"<border-style>\",","    \"column-rule-width\"             : \"<border-width>\",","    \"column-span\"                   : \"none | all\",","    \"column-width\"                  : \"<length> | auto\",","    \"columns\"                       : 1,","    \"content\"                       : 1,","    \"counter-increment\"             : 1,","    \"counter-reset\"                 : 1,","    \"crop\"                          : \"<shape> | auto\",","    \"cue\"                           : \"cue-after | cue-before\",","    \"cue-after\"                     : 1,","    \"cue-before\"                    : 1,","    \"cursor\"                        : 1,","","    //D","    \"direction\"                     : \"ltr | rtl\",","    \"display\"                       : \"inline | block | list-item | inline-block | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | grid | inline-grid | run-in | ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | contents | none | -moz-box | -moz-inline-block | -moz-inline-box | -moz-inline-grid | -moz-inline-stack | -moz-inline-table | -moz-grid | -moz-grid-group | -moz-grid-line | -moz-groupbox | -moz-deck | -moz-popup | -moz-stack | -moz-marker | -webkit-box | -webkit-inline-box | -ms-flexbox | -ms-inline-flexbox | flex | -webkit-flex | inline-flex | -webkit-inline-flex\",","    \"dominant-baseline\"             : \"auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge\",","    \"drop-initial-after-adjust\"     : \"central | middle | after-edge | text-after-edge | ideographic | alphabetic | mathematical | <percentage> | <length>\",","    \"drop-initial-after-align\"      : \"baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",","    \"drop-initial-before-adjust\"    : \"before-edge | text-before-edge | central | middle | hanging | mathematical | <percentage> | <length>\",","    \"drop-initial-before-align\"     : \"caps-height | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",","    \"drop-initial-size\"             : \"auto | line | <length> | <percentage>\",","    \"drop-initial-value\"            : \"<integer>\",","","    //E","    \"elevation\"                     : \"<angle> | below | level | above | higher | lower\",","    \"empty-cells\"                   : \"show | hide\",","    \"enable-background\"             : 1,","","    //F","    \"fill\"                          : \"<paint>\",","    \"fill-opacity\"                  : \"<opacity-value>\",","    \"fill-rule\"                     : \"nonzero | evenodd\",","    \"filter\"                        : \"<filter-function-list> | none\",","    \"fit\"                           : \"fill | hidden | meet | slice\",","    \"fit-position\"                  : 1,","    \"flex\"                          : \"<flex>\",","    \"flex-basis\"                    : \"<width>\",","    \"flex-direction\"                : \"row | row-reverse | column | column-reverse\",","    \"flex-flow\"                     : \"<flex-direction> || <flex-wrap>\",","    \"flex-grow\"                     : \"<number>\",","    \"flex-shrink\"                   : \"<number>\",","    \"flex-wrap\"                     : \"nowrap | wrap | wrap-reverse\",","    \"-webkit-flex\"                  : \"<flex>\",","    \"-webkit-flex-basis\"            : \"<width>\",","    \"-webkit-flex-direction\"        : \"row | row-reverse | column | column-reverse\",","    \"-webkit-flex-flow\"             : \"<flex-direction> || <flex-wrap>\",","    \"-webkit-flex-grow\"             : \"<number>\",","    \"-webkit-flex-shrink\"           : \"<number>\",","    \"-webkit-flex-wrap\"             : \"nowrap | wrap | wrap-reverse\",","    \"-ms-flex\"                      : \"<flex>\",","    \"-ms-flex-align\"                : \"start | end | center | stretch | baseline\",","    \"-ms-flex-direction\"            : \"row | row-reverse | column | column-reverse\",","    \"-ms-flex-order\"                : \"<number>\",","    \"-ms-flex-pack\"                 : \"start | end | center | justify\",","    \"-ms-flex-wrap\"                 : \"nowrap | wrap | wrap-reverse\",","    \"float\"                         : \"left | right | none\",","    \"float-offset\"                  : 1,","    \"flood-color\"                   : 1,","    \"flood-opacity\"                 : \"<opacity-value>\",","    \"font\"                          : \"<font-shorthand> | caption | icon | menu | message-box | small-caption | status-bar\",","    \"font-family\"                   : \"<font-family>\",","    \"font-feature-settings\"         : \"<feature-tag-value> | normal\",","    \"font-kerning\"                  : \"auto | normal | none\",","    \"font-size\"                     : \"<font-size>\",","    \"font-size-adjust\"              : \"<number> | none\",","    \"font-stretch\"                  : \"<font-stretch>\",","    \"font-style\"                    : \"<font-style>\",","    \"font-variant\"                  : \"<font-variant> | normal | none\",","    \"font-variant-alternates\"       : \"<font-variant-alternates> | normal\",","    \"font-variant-caps\"             : \"<font-variant-caps> | normal\",","    \"font-variant-east-asian\"       : \"<font-variant-east-asian> | normal\",","    \"font-variant-ligatures\"        : \"<font-variant-ligatures> | normal | none\",","    \"font-variant-numeric\"          : \"<font-variant-numeric> | normal\",","    \"font-variant-position\"         : \"normal | sub | super\",","    \"font-weight\"                   : \"<font-weight>\",","","    //G","    \"glyph-orientation-horizontal\"  : \"<glyph-angle>\",","    \"glyph-orientation-vertical\"    : \"auto | <glyph-angle>\",","    \"grid\"                          : 1,","    \"grid-area\"                     : 1,","    \"grid-auto-columns\"             : 1,","    \"grid-auto-flow\"                : 1,","    \"grid-auto-position\"            : 1,","    \"grid-auto-rows\"                : 1,","    \"grid-cell-stacking\"            : \"columns | rows | layer\",","    \"grid-column\"                   : 1,","    \"grid-columns\"                  : 1,","    \"grid-column-align\"             : \"start | end | center | stretch\",","    \"grid-column-sizing\"            : 1,","    \"grid-column-start\"             : 1,","    \"grid-column-end\"               : 1,","    \"grid-column-span\"              : \"<integer>\",","    \"grid-flow\"                     : \"none | rows | columns\",","    \"grid-layer\"                    : \"<integer>\",","    \"grid-row\"                      : 1,","    \"grid-rows\"                     : 1,","    \"grid-row-align\"                : \"start | end | center | stretch\",","    \"grid-row-start\"                : 1,","    \"grid-row-end\"                  : 1,","    \"grid-row-span\"                 : \"<integer>\",","    \"grid-row-sizing\"               : 1,","    \"grid-template\"                 : 1,","    \"grid-template-areas\"           : 1,","    \"grid-template-columns\"         : 1,","    \"grid-template-rows\"            : 1,","","    //H","    \"hanging-punctuation\"           : 1,","    \"height\"                        : \"<margin-width> | <content-sizing>\",","    \"hyphenate-after\"               : \"<integer> | auto\",","    \"hyphenate-before\"              : \"<integer> | auto\",","    \"hyphenate-character\"           : \"<string> | auto\",","    \"hyphenate-lines\"               : \"no-limit | <integer>\",","    \"hyphenate-resource\"            : 1,","    \"hyphens\"                       : \"none | manual | auto\",","","    //I","    \"icon\"                          : 1,","    \"image-orientation\"             : \"angle | auto\",","    \"image-rendering\"               : \"auto | optimizeSpeed | optimizeQuality\",","    \"image-resolution\"              : 1,","    \"ime-mode\"                      : \"auto | normal | active | inactive | disabled\",","    \"inline-box-align\"              : \"last | <integer>\",","","    //J","    \"justify-content\"               : \"flex-start | flex-end | center | space-between | space-around\",","    \"-webkit-justify-content\"       : \"flex-start | flex-end | center | space-between | space-around\",","","    //K","    \"kerning\"                       : \"auto | <length>\",","","    //L","    \"left\"                          : \"<margin-width>\",","    \"letter-spacing\"                : \"<length> | normal\",","    \"line-height\"                   : \"<line-height>\",","    \"line-break\"                    : \"auto | loose | normal | strict\",","    \"line-stacking\"                 : 1,","    \"line-stacking-ruby\"            : \"exclude-ruby | include-ruby\",","    \"line-stacking-shift\"           : \"consider-shifts | disregard-shifts\",","    \"line-stacking-strategy\"        : \"inline-line-height | block-line-height | max-height | grid-height\",","    \"list-style\"                    : 1,","    \"list-style-image\"              : \"<uri> | none\",","    \"list-style-position\"           : \"inside | outside\",","    \"list-style-type\"               : \"disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none\",","","    //M","    \"margin\"                        : \"<margin-width>{1,4}\",","    \"margin-bottom\"                 : \"<margin-width>\",","    \"margin-left\"                   : \"<margin-width>\",","    \"margin-right\"                  : \"<margin-width>\",","    \"margin-top\"                    : \"<margin-width>\",","    \"mark\"                          : 1,","    \"mark-after\"                    : 1,","    \"mark-before\"                   : 1,","    \"marker\"                        : 1,","    \"marker-end\"                    : 1,","    \"marker-mid\"                    : 1,","    \"marker-start\"                  : 1,","    \"marks\"                         : 1,","    \"marquee-direction\"             : 1,","    \"marquee-play-count\"            : 1,","    \"marquee-speed\"                 : 1,","    \"marquee-style\"                 : 1,","    \"mask\"                          : 1,","    \"max-height\"                    : \"<length> | <percentage> | <content-sizing> | none\",","    \"max-width\"                     : \"<length> | <percentage> | <content-sizing> | none\",","    \"min-height\"                    : \"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",","    \"min-width\"                     : \"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",","    \"move-to\"                       : 1,","","    //N","    \"nav-down\"                      : 1,","    \"nav-index\"                     : 1,","    \"nav-left\"                      : 1,","    \"nav-right\"                     : 1,","    \"nav-up\"                        : 1,","","    //O","    \"object-fit\"                    : \"fill | contain | cover | none | scale-down\",","    \"object-position\"               : \"<position>\",","    \"opacity\"                       : \"<opacity-value>\",","    \"order\"                         : \"<integer>\",","    \"-webkit-order\"                 : \"<integer>\",","    \"orphans\"                       : \"<integer>\",","    \"outline\"                       : 1,","    \"outline-color\"                 : \"<color> | invert\",","    \"outline-offset\"                : 1,","    \"outline-style\"                 : \"<border-style>\",","    \"outline-width\"                 : \"<border-width>\",","    \"overflow\"                      : \"visible | hidden | scroll | auto\",","    \"overflow-style\"                : 1,","    \"overflow-wrap\"                 : \"normal | break-word\",","    \"overflow-x\"                    : 1,","    \"overflow-y\"                    : 1,","","    //P","    \"padding\"                       : \"<padding-width>{1,4}\",","    \"padding-bottom\"                : \"<padding-width>\",","    \"padding-left\"                  : \"<padding-width>\",","    \"padding-right\"                 : \"<padding-width>\",","    \"padding-top\"                   : \"<padding-width>\",","    \"page\"                          : 1,","    \"page-break-after\"              : \"auto | always | avoid | left | right\",","    \"page-break-before\"             : \"auto | always | avoid | left | right\",","    \"page-break-inside\"             : \"auto | avoid\",","    \"page-policy\"                   : 1,","    \"pause\"                         : 1,","    \"pause-after\"                   : 1,","    \"pause-before\"                  : 1,","    \"perspective\"                   : 1,","    \"perspective-origin\"            : 1,","    \"phonemes\"                      : 1,","    \"pitch\"                         : 1,","    \"pitch-range\"                   : 1,","    \"play-during\"                   : 1,","    \"pointer-events\"                : \"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all\",","    \"position\"                      : \"static | relative | absolute | fixed\",","    \"presentation-level\"            : 1,","    \"punctuation-trim\"              : 1,","","    //Q","    \"quotes\"                        : 1,","","    //R","    \"rendering-intent\"              : 1,","    \"resize\"                        : 1,","    \"rest\"                          : 1,","    \"rest-after\"                    : 1,","    \"rest-before\"                   : 1,","    \"richness\"                      : 1,","    \"right\"                         : \"<margin-width>\",","    \"rotation\"                      : 1,","    \"rotation-point\"                : 1,","    \"ruby-align\"                    : 1,","    \"ruby-overhang\"                 : 1,","    \"ruby-position\"                 : 1,","    \"ruby-span\"                     : 1,","","    //S","    \"shape-rendering\"               : \"auto | optimizeSpeed | crispEdges | geometricPrecision\",","    \"size\"                          : 1,","    \"speak\"                         : \"normal | none | spell-out\",","    \"speak-header\"                  : \"once | always\",","    \"speak-numeral\"                 : \"digits | continuous\",","    \"speak-punctuation\"             : \"code | none\",","    \"speech-rate\"                   : 1,","    \"src\"                           : 1,","    \"stop-color\"                    : 1,","    \"stop-opacity\"                  : \"<opacity-value>\",","    \"stress\"                        : 1,","    \"string-set\"                    : 1,","    \"stroke\"                        : \"<paint>\",","    \"stroke-dasharray\"              : \"none | <dasharray>\",","    \"stroke-dashoffset\"             : \"<percentage> | <length>\",","    \"stroke-linecap\"                : \"butt | round | square\",","    \"stroke-linejoin\"               : \"miter | round | bevel\",","    \"stroke-miterlimit\"             : \"<miterlimit>\",","    \"stroke-opacity\"                : \"<opacity-value>\",","    \"stroke-width\"                  : \"<percentage> | <length>\",","","    \"table-layout\"                  : \"auto | fixed\",","    \"tab-size\"                      : \"<integer> | <length>\",","    \"target\"                        : 1,","    \"target-name\"                   : 1,","    \"target-new\"                    : 1,","    \"target-position\"               : 1,","    \"text-align\"                    : \"left | right | center | justify | match-parent | start | end\",","    \"text-align-last\"               : 1,","    \"text-anchor\"                   : \"start | middle | end\",","    \"text-decoration\"               : \"<text-decoration-line> || <text-decoration-style> || <text-decoration-color>\",","    \"text-decoration-color\"         : \"<text-decoration-color>\",","    \"text-decoration-line\"          : \"<text-decoration-line>\",","    \"text-decoration-style\"         : \"<text-decoration-style>\",","    \"text-emphasis\"                 : 1,","    \"text-height\"                   : 1,","    \"text-indent\"                   : \"<length> | <percentage>\",","    \"text-justify\"                  : \"auto | none | inter-word | inter-ideograph | inter-cluster | distribute | kashida\",","    \"text-outline\"                  : 1,","    \"text-overflow\"                 : 1,","    \"text-rendering\"                : \"auto | optimizeSpeed | optimizeLegibility | geometricPrecision\",","    \"text-shadow\"                   : 1,","    \"text-transform\"                : \"capitalize | uppercase | lowercase | none\",","    \"text-wrap\"                     : \"normal | none | avoid\",","    \"top\"                           : \"<margin-width>\",","    \"-ms-touch-action\"              : \"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",","    \"touch-action\"                  : \"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",","    \"transform\"                     : 1,","    \"transform-origin\"              : 1,","    \"transform-style\"               : 1,","    \"transition\"                    : 1,","    \"transition-delay\"              : 1,","    \"transition-duration\"           : 1,","    \"transition-property\"           : 1,","    \"transition-timing-function\"    : 1,","","    //U","    \"unicode-bidi\"                  : \"normal | embed | isolate | bidi-override | isolate-override | plaintext\",","    \"user-modify\"                   : \"read-only | read-write | write-only\",","    \"user-select\"                   : \"none | text | toggle | element | elements | all\",","","    //V","    \"vertical-align\"                : \"auto | use-script | baseline | sub | super | top | text-top | central | middle | bottom | text-bottom | <percentage> | <length>\",","    \"visibility\"                    : \"visible | hidden | collapse\",","    \"voice-balance\"                 : 1,","    \"voice-duration\"                : 1,","    \"voice-family\"                  : 1,","    \"voice-pitch\"                   : 1,","    \"voice-pitch-range\"             : 1,","    \"voice-rate\"                    : 1,","    \"voice-stress\"                  : 1,","    \"voice-volume\"                  : 1,","    \"volume\"                        : 1,","","    //W","    \"white-space\"                   : \"normal | pre | nowrap | pre-wrap | pre-line | -pre-wrap | -o-pre-wrap | -moz-pre-wrap | -hp-pre-wrap\",   // https://perishablepress.com/wrapping-content/","    \"white-space-collapse\"          : 1,","    \"widows\"                        : \"<integer>\",","    \"width\"                         : \"<length> | <percentage> | <content-sizing> | auto\",","    \"will-change\"                   : \"<will-change>\",","    \"word-break\"                    : \"normal | keep-all | break-all\",","    \"word-spacing\"                  : \"<length> | normal\",","    \"word-wrap\"                     : \"normal | break-word\",","    \"writing-mode\"                  : \"horizontal-tb | vertical-rl | vertical-lr | lr-tb | rl-tb | tb-rl | bt-rl | tb-lr | bt-lr | lr-bt | rl-bt | lr | rl | tb\",","","    //Z","    \"z-index\"                       : \"<integer> | auto\",","    \"zoom\"                          : \"<number> | <percentage> | normal\"","};",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/ValidationTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/ValidationTypes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":9,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":58,"68":58,"69":36,"70":0,"71":1,"72":27,"73":27,"74":24,"75":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0,0,0,0],"27":[0,0,0,0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0,0],"32":[36,22],"33":[24,3]},"f":{"1":1,"2":9,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":58,"33":0,"34":27},"fnMap":{"1":{"name":"copy","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":30},"end":{"line":8,"column":45}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":41}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":29}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":30}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":29}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":11},"end":{"line":52,"column":40}}},"8":{"name":"(anonymous_8)","line":67,"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":46}}},"9":{"name":"(anonymous_9)","line":82,"loc":{"start":{"line":82,"column":12},"end":{"line":82,"column":40}}},"10":{"name":"(anonymous_10)","line":115,"loc":{"start":{"line":115,"column":38},"end":{"line":115,"column":53}}},"11":{"name":"(anonymous_11)","line":120,"loc":{"start":{"line":120,"column":19},"end":{"line":120,"column":34}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":19},"end":{"line":146,"column":34}}},"13":{"name":"(anonymous_13)","line":151,"loc":{"start":{"line":151,"column":23},"end":{"line":151,"column":38}}},"14":{"name":"(anonymous_14)","line":164,"loc":{"start":{"line":164,"column":31},"end":{"line":164,"column":46}}},"15":{"name":"(anonymous_15)","line":209,"loc":{"start":{"line":209,"column":25},"end":{"line":209,"column":40}}},"16":{"name":"(anonymous_16)","line":213,"loc":{"start":{"line":213,"column":22},"end":{"line":213,"column":37}}},"17":{"name":"(anonymous_17)","line":222,"loc":{"start":{"line":222,"column":19},"end":{"line":222,"column":34}}},"18":{"name":"(anonymous_18)","line":226,"loc":{"start":{"line":226,"column":38},"end":{"line":226,"column":53}}},"19":{"name":"(anonymous_19)","line":232,"loc":{"start":{"line":232,"column":21},"end":{"line":232,"column":36}}},"20":{"name":"(anonymous_20)","line":236,"loc":{"start":{"line":236,"column":20},"end":{"line":236,"column":35}}},"21":{"name":"(anonymous_21)","line":244,"loc":{"start":{"line":244,"column":18},"end":{"line":244,"column":33}}},"22":{"name":"(anonymous_22)","line":252,"loc":{"start":{"line":252,"column":24},"end":{"line":252,"column":39}}},"23":{"name":"(anonymous_23)","line":256,"loc":{"start":{"line":256,"column":46},"end":{"line":256,"column":61}}},"24":{"name":"(anonymous_24)","line":261,"loc":{"start":{"line":261,"column":46},"end":{"line":261,"column":61}}},"25":{"name":"(anonymous_25)","line":266,"loc":{"start":{"line":266,"column":20},"end":{"line":266,"column":35}}},"26":{"name":"(anonymous_26)","line":270,"loc":{"start":{"line":270,"column":27},"end":{"line":270,"column":42}}},"27":{"name":"(anonymous_27)","line":276,"loc":{"start":{"line":276,"column":24},"end":{"line":276,"column":39}}},"28":{"name":"(anonymous_28)","line":289,"loc":{"start":{"line":289,"column":35},"end":{"line":289,"column":50}}},"29":{"name":"(anonymous_29)","line":295,"loc":{"start":{"line":295,"column":20},"end":{"line":295,"column":35}}},"30":{"name":"(anonymous_30)","line":299,"loc":{"start":{"line":299,"column":18},"end":{"line":299,"column":33}}},"31":{"name":"(anonymous_31)","line":303,"loc":{"start":{"line":303,"column":17},"end":{"line":303,"column":32}}},"32":{"name":"(anonymous_32)","line":454,"loc":{"start":{"line":454,"column":44},"end":{"line":454,"column":57}}},"33":{"name":"(anonymous_33)","line":457,"loc":{"start":{"line":457,"column":37},"end":{"line":457,"column":52}}},"34":{"name":"(anonymous_34)","line":463,"loc":{"start":{"line":463,"column":45},"end":{"line":463,"column":58}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":7}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"6":{"start":{"line":12,"column":0},"end":{"line":452,"column":3}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":34}},"8":{"start":{"line":19,"column":8},"end":{"line":28,"column":9}},"9":{"start":{"line":20,"column":12},"end":{"line":27,"column":13}},"10":{"start":{"line":21,"column":16},"end":{"line":21,"column":51}},"11":{"start":{"line":22,"column":19},"end":{"line":27,"column":13}},"12":{"start":{"line":23,"column":16},"end":{"line":24,"column":61}},"13":{"start":{"line":25,"column":19},"end":{"line":27,"column":13}},"14":{"start":{"line":26,"column":16},"end":{"line":26,"column":29}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":21}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":42}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":43}},"18":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"19":{"start":{"line":43,"column":12},"end":{"line":43,"column":50}},"20":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"21":{"start":{"line":53,"column":8},"end":{"line":54,"column":34}},"22":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"23":{"start":{"line":57,"column":12},"end":{"line":57,"column":53}},"24":{"start":{"line":60,"column":8},"end":{"line":60,"column":21}},"25":{"start":{"line":68,"column":8},"end":{"line":69,"column":34}},"26":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"27":{"start":{"line":72,"column":12},"end":{"line":72,"column":53}},"28":{"start":{"line":75,"column":8},"end":{"line":75,"column":41}},"29":{"start":{"line":83,"column":8},"end":{"line":84,"column":27}},"30":{"start":{"line":86,"column":8},"end":{"line":100,"column":9}},"31":{"start":{"line":87,"column":12},"end":{"line":87,"column":48}},"32":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"33":{"start":{"line":89,"column":16},"end":{"line":89,"column":34}},"34":{"start":{"line":91,"column":15},"end":{"line":100,"column":9}},"35":{"start":{"line":92,"column":12},"end":{"line":92,"column":45}},"36":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"37":{"start":{"line":94,"column":16},"end":{"line":94,"column":34}},"38":{"start":{"line":96,"column":15},"end":{"line":100,"column":9}},"39":{"start":{"line":97,"column":12},"end":{"line":97,"column":58}},"40":{"start":{"line":99,"column":12},"end":{"line":99,"column":52}},"41":{"start":{"line":102,"column":8},"end":{"line":102,"column":22}},"42":{"start":{"line":116,"column":12},"end":{"line":117,"column":99}},"43":{"start":{"line":121,"column":12},"end":{"line":121,"column":41}},"44":{"start":{"line":147,"column":12},"end":{"line":147,"column":110}},"45":{"start":{"line":152,"column":12},"end":{"line":152,"column":41}},"46":{"start":{"line":165,"column":12},"end":{"line":165,"column":75}},"47":{"start":{"line":210,"column":12},"end":{"line":210,"column":65}},"48":{"start":{"line":214,"column":12},"end":{"line":214,"column":137}},"49":{"start":{"line":223,"column":12},"end":{"line":223,"column":63}},"50":{"start":{"line":227,"column":12},"end":{"line":227,"column":76}},"51":{"start":{"line":233,"column":12},"end":{"line":233,"column":43}},"52":{"start":{"line":237,"column":12},"end":{"line":241,"column":13}},"53":{"start":{"line":238,"column":16},"end":{"line":238,"column":28}},"54":{"start":{"line":240,"column":16},"end":{"line":240,"column":123}},"55":{"start":{"line":245,"column":12},"end":{"line":245,"column":43}},"56":{"start":{"line":253,"column":12},"end":{"line":253,"column":61}},"57":{"start":{"line":257,"column":12},"end":{"line":258,"column":88}},"58":{"start":{"line":262,"column":12},"end":{"line":263,"column":88}},"59":{"start":{"line":267,"column":12},"end":{"line":267,"column":69}},"60":{"start":{"line":271,"column":12},"end":{"line":271,"column":80}},"61":{"start":{"line":277,"column":12},"end":{"line":277,"column":70}},"62":{"start":{"line":290,"column":12},"end":{"line":292,"column":62}},"63":{"start":{"line":296,"column":12},"end":{"line":296,"column":42}},"64":{"start":{"line":300,"column":12},"end":{"line":300,"column":40}},"65":{"start":{"line":304,"column":12},"end":{"line":304,"column":39}},"66":{"start":{"line":454,"column":0},"end":{"line":461,"column":3}},"67":{"start":{"line":455,"column":4},"end":{"line":455,"column":42}},"68":{"start":{"line":456,"column":4},"end":{"line":460,"column":5}},"69":{"start":{"line":457,"column":8},"end":{"line":459,"column":10}},"70":{"start":{"line":458,"column":12},"end":{"line":458,"column":57}},"71":{"start":{"line":463,"column":0},"end":{"line":468,"column":3}},"72":{"start":{"line":464,"column":4},"end":{"line":464,"column":43}},"73":{"start":{"line":465,"column":4},"end":{"line":467,"column":5}},"74":{"start":{"line":466,"column":8},"end":{"line":466,"column":58}},"75":{"start":{"line":472,"column":0},"end":{"line":477,"column":58}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":35},"end":{"line":19,"column":42}},{"start":{"line":19,"column":46},"end":{"line":19,"column":52}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":19},"end":{"line":22,"column":19}},{"start":{"line":22,"column":19},"end":{"line":22,"column":19}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":25},"end":{"line":23,"column":49}},{"start":{"line":24,"column":25},"end":{"line":24,"column":59}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":19}},{"start":{"line":25,"column":19},"end":{"line":25,"column":19}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":35},"end":{"line":56,"column":42}},{"start":{"line":56,"column":46},"end":{"line":56,"column":52}},{"start":{"line":56,"column":56},"end":{"line":56,"column":76}}]},"8":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":35},"end":{"line":71,"column":42}},{"start":{"line":71,"column":46},"end":{"line":71,"column":52}}]},"9":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":23},"end":{"line":75,"column":32}},{"start":{"line":75,"column":35},"end":{"line":75,"column":40}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"11":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":12}},{"start":{"line":88,"column":12},"end":{"line":88,"column":12}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":15},"end":{"line":91,"column":15}},{"start":{"line":91,"column":15},"end":{"line":91,"column":15}}]},"13":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":12}},{"start":{"line":93,"column":12},"end":{"line":93,"column":12}}]},"14":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":15},"end":{"line":96,"column":15}},{"start":{"line":96,"column":15},"end":{"line":96,"column":15}}]},"15":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":19},"end":{"line":116,"column":40}},{"start":{"line":117,"column":16},"end":{"line":117,"column":98}}]},"16":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":19},"end":{"line":147,"column":40}},{"start":{"line":147,"column":44},"end":{"line":147,"column":74}},{"start":{"line":147,"column":78},"end":{"line":147,"column":109}}]},"17":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":19},"end":{"line":165,"column":43}},{"start":{"line":165,"column":47},"end":{"line":165,"column":74}}]},"18":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":19},"end":{"line":210,"column":40}},{"start":{"line":210,"column":44},"end":{"line":210,"column":64}}]},"19":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":19},"end":{"line":214,"column":43}},{"start":{"line":214,"column":47},"end":{"line":214,"column":136}}]},"20":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":19},"end":{"line":223,"column":45}},{"start":{"line":223,"column":49},"end":{"line":223,"column":62}}]},"21":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":19},"end":{"line":227,"column":40}},{"start":{"line":227,"column":44},"end":{"line":227,"column":75}}]},"22":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":12}},{"start":{"line":237,"column":12},"end":{"line":237,"column":12}}]},"23":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":16},"end":{"line":237,"column":40}},{"start":{"line":237,"column":44},"end":{"line":237,"column":91}}]},"24":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":23},"end":{"line":240,"column":45}},{"start":{"line":240,"column":49},"end":{"line":240,"column":71}},{"start":{"line":240,"column":75},"end":{"line":240,"column":98}},{"start":{"line":240,"column":102},"end":{"line":240,"column":122}}]},"25":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":19},"end":{"line":253,"column":41}},{"start":{"line":253,"column":45},"end":{"line":253,"column":60}}]},"26":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":20},"end":{"line":257,"column":42}},{"start":{"line":257,"column":46},"end":{"line":257,"column":72}},{"start":{"line":258,"column":17},"end":{"line":258,"column":37}},{"start":{"line":258,"column":41},"end":{"line":258,"column":65}},{"start":{"line":258,"column":69},"end":{"line":258,"column":86}}]},"27":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":20},"end":{"line":262,"column":42}},{"start":{"line":262,"column":46},"end":{"line":262,"column":72}},{"start":{"line":263,"column":17},"end":{"line":263,"column":37}},{"start":{"line":263,"column":41},"end":{"line":263,"column":65}},{"start":{"line":263,"column":69},"end":{"line":263,"column":86}}]},"28":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":19},"end":{"line":267,"column":41}},{"start":{"line":267,"column":45},"end":{"line":267,"column":68}}]},"29":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":19},"end":{"line":271,"column":41}},{"start":{"line":271,"column":45},"end":{"line":271,"column":60}},{"start":{"line":271,"column":64},"end":{"line":271,"column":79}}]},"30":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":19},"end":{"line":277,"column":45}},{"start":{"line":277,"column":49},"end":{"line":277,"column":69}}]},"31":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":19},"end":{"line":290,"column":40}},{"start":{"line":291,"column":16},"end":{"line":291,"column":51}},{"start":{"line":292,"column":16},"end":{"line":292,"column":61}}]},"32":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":456,"column":4}},{"start":{"line":456,"column":4},"end":{"line":456,"column":4}}]},"33":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]}},"code":["\"use strict\";","","var ValidationTypes = module.exports;","","var Matcher = require(\"./Matcher\");","","function copy(to, from) {","    Object.keys(from).forEach(function(prop) {","        to[prop] = from[prop];","    });","}","copy(ValidationTypes, {","","    isLiteral: function (part, literals) {","        var text = part.text.toString().toLowerCase(),","            args = literals.split(\" | \"),","            i, len, found = false;","","        for (i=0, len=args.length; i < len && !found; i++) {","            if (args[i].charAt(0) === \"<\") {","                found = this.simple[args[i]](part);","            } else if (args[i].slice(-2) === \"()\") {","                found = (part.type === \"function\" &&","                         part.name === args[i].slice(0, -2));","            } else if (text === args[i].toLowerCase()) {","                found = true;","            }","        }","","        return found;","    },","","    isSimple: function(type) {","        return Boolean(this.simple[type]);","    },","","    isComplex: function(type) {","        return Boolean(this.complex[type]);","    },","","    describe: function(type) {","        if (this.complex[type] instanceof Matcher) {","            return this.complex[type].toString(0);","        }","        return type;","    },","","    /**","     * Determines if the next part(s) of the given expression","     * are any of the given types.","     */","    isAny: function (expression, types) {","        var args = types.split(\" | \"),","            i, len, found = false;","","        for (i=0, len=args.length; i < len && !found && expression.hasNext(); i++) {","            found = this.isType(expression, args[i]);","        }","","        return found;","    },","","    /**","     * Determines if the next part(s) of the given expression","     * are one of a group.","     */","    isAnyOfGroup: function(expression, types) {","        var args = types.split(\" || \"),","            i, len, found = false;","","        for (i=0, len=args.length; i < len && !found; i++) {","            found = this.isType(expression, args[i]);","        }","","        return found ? args[i-1] : false;","    },","","    /**","     * Determines if the next part(s) of the given expression","     * are of a given type.","     */","    isType: function (expression, type) {","        var part = expression.peek(),","            result = false;","","        if (type.charAt(0) !== \"<\") {","            result = this.isLiteral(part, type);","            if (result) {","                expression.next();","            }","        } else if (this.simple[type]) {","            result = this.simple[type](part);","            if (result) {","                expression.next();","            }","        } else if (this.complex[type] instanceof Matcher) {","            result = this.complex[type].match(expression);","        } else {","            result = this.complex[type](expression);","        }","","        return result;","    },","","","    simple: {","        __proto__: null,","","        \"<absolute-size>\":","            \"xx-small | x-small | small | medium | large | x-large | xx-large\",","","        \"<animateable-feature>\":","            \"scroll-position | contents | <animateable-feature-name>\",","","        \"<animateable-feature-name>\": function(part) {","            return this[\"<ident>\"](part) &&","                !/^(unset|initial|inherit|will-change|auto|scroll-position|contents)$/i.test(part);","        },","","        \"<angle>\": function(part) {","            return part.type === \"angle\";","        },","","        \"<attachment>\": \"scroll | fixed | local\",","","        \"<attr>\": \"attr()\",","","        // inset() = inset( <shape-arg>{1,4} [round <border-radius>]? )","        // circle() = circle( [<shape-radius>]? [at <position>]? )","        // ellipse() = ellipse( [<shape-radius>{2}]? [at <position>]? )","        // polygon() = polygon( [<fill-rule>,]? [<shape-arg> <shape-arg>]# )","        \"<basic-shape>\": \"inset() | circle() | ellipse() | polygon()\",","","        \"<bg-image>\": \"<image> | <gradient> | none\",","","        \"<border-style>\":","            \"none | hidden | dotted | dashed | solid | double | groove | \" +","            \"ridge | inset | outset\",","","        \"<border-width>\": \"<length> | thin | medium | thick\",","","        \"<box>\": \"padding-box | border-box | content-box\",","","        \"<clip-source>\": \"<uri>\",","","        \"<color>\": function(part) {","            return part.type === \"color\" || String(part) === \"transparent\" || String(part) === \"currentColor\";","        },","","        // The SVG <color> spec doesn't include \"currentColor\" or \"transparent\" as a color.","        \"<color-svg>\": function(part) {","            return part.type === \"color\";","        },","","        \"<content>\": \"content()\",","","        // https://www.w3.org/TR/css3-sizing/#width-height-keywords","        \"<content-sizing>\":","            \"fill-available | -moz-available | -webkit-fill-available | \" +","            \"max-content | -moz-max-content | -webkit-max-content | \" +","            \"min-content | -moz-min-content | -webkit-min-content | \" +","            \"fit-content | -moz-fit-content | -webkit-fit-content\",","","        \"<feature-tag-value>\": function(part) {","            return part.type === \"function\" && /^[A-Z0-9]{4}$/i.test(part);","        },","","        // custom() isn't actually in the spec","        \"<filter-function>\":","            \"blur() | brightness() | contrast() | custom() | \" +","            \"drop-shadow() | grayscale() | hue-rotate() | invert() | \" +","            \"opacity() | saturate() | sepia()\",","","        \"<flex-basis>\": \"<width>\",","","        \"<flex-direction>\": \"row | row-reverse | column | column-reverse\",","","        \"<flex-grow>\": \"<number>\",","","        \"<flex-shrink>\": \"<number>\",","","        \"<flex-wrap>\": \"nowrap | wrap | wrap-reverse\",","","        \"<font-size>\":","            \"<absolute-size> | <relative-size> | <length> | <percentage>\",","","        \"<font-stretch>\":","            \"normal | ultra-condensed | extra-condensed | condensed | \" +","            \"semi-condensed | semi-expanded | expanded | extra-expanded | \" +","            \"ultra-expanded\",","","        \"<font-style>\": \"normal | italic | oblique\",","","        \"<font-variant-caps>\":","            \"small-caps | all-small-caps | petite-caps | all-petite-caps | \" +","            \"unicase | titling-caps\",","","        \"<font-variant-css21>\": \"normal | small-caps\",","","        \"<font-weight>\":","            \"normal | bold | bolder | lighter | \" +","            \"100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\",","","        \"<generic-family>\":","            \"serif | sans-serif | cursive | fantasy | monospace\",","","        \"<geometry-box>\": \"<shape-box> | fill-box | stroke-box | view-box\",","","        \"<glyph-angle>\": function(part) {","            return part.type === \"angle\" && part.units === \"deg\";","        },","","        \"<gradient>\": function(part) {","            return part.type === \"function\" && /^(?:\\-(?:ms|moz|o|webkit)\\-)?(?:repeating\\-)?(?:radial\\-|linear\\-)?gradient/i.test(part);","        },","","        \"<icccolor>\":","            \"cielab() | cielch() | cielchab() | \" +","            \"icc-color() | icc-named-color()\",","","        //any identifier","        \"<ident>\": function(part) {","            return part.type === \"identifier\" || part.wasIdent;","        },","","        \"<ident-not-generic-family>\": function(part) {","            return this[\"<ident>\"](part) && !this[\"<generic-family>\"](part);","        },","","        \"<image>\": \"<uri>\",","","        \"<integer>\": function(part) {","            return part.type === \"integer\";","        },","","        \"<length>\": function(part) {","            if (part.type === \"function\" && /^(?:\\-(?:ms|moz|o|webkit)\\-)?calc/i.test(part)) {","                return true;","            } else {","                return part.type === \"length\" || part.type === \"number\" || part.type === \"integer\" || String(part) === \"0\";","            }","        },","","        \"<line>\": function(part) {","            return part.type === \"integer\";","        },","","        \"<line-height>\": \"<number> | <length> | <percentage> | normal\",","","        \"<margin-width>\": \"<length> | <percentage> | auto\",","","        \"<miterlimit>\": function(part) {","            return this[\"<number>\"](part) && part.value >= 1;","        },","","        \"<nonnegative-length-or-percentage>\": function(part) {","            return (this[\"<length>\"](part) || this[\"<percentage>\"](part)) &&","                (String(part) === \"0\" || part.type === \"function\" || (part.value) >= 0);","        },","","        \"<nonnegative-number-or-percentage>\": function(part) {","            return (this[\"<number>\"](part) || this[\"<percentage>\"](part)) &&","                (String(part) === \"0\" || part.type === \"function\" || (part.value) >= 0);","        },","","        \"<number>\": function(part) {","            return part.type === \"number\" || this[\"<integer>\"](part);","        },","","        \"<opacity-value>\": function(part) {","            return this[\"<number>\"](part) && part.value >= 0 && part.value <= 1;","        },","","        \"<padding-width>\": \"<nonnegative-length-or-percentage>\",","","        \"<percentage>\": function(part) {","            return part.type === \"percentage\" || String(part) === \"0\";","        },","","        \"<relative-size>\": \"smaller | larger\",","","        \"<shape>\": \"rect() | inset-rect()\",","","        \"<shape-box>\": \"<box> | margin-box\",","","        \"<single-animation-direction>\":","            \"normal | reverse | alternate | alternate-reverse\",","","        \"<single-animation-name>\": function(part) {","            return this[\"<ident>\"](part) &&","                /^-?[a-z_][-a-z0-9_]+$/i.test(part) &&","                !/^(none|unset|initial|inherit)$/i.test(part);","        },","","        \"<string>\": function(part) {","            return part.type === \"string\";","        },","","        \"<time>\": function(part) {","            return part.type === \"time\";","        },","","        \"<uri>\": function(part) {","            return part.type === \"uri\";","        },","","        \"<width>\": \"<margin-width>\"","    },","","    complex: {","        __proto__: null,","","        \"<azimuth>\":","            \"<angle>\" +","            \" | \" +","            \"[ [ left-side | far-left | left | center-left | center | \" +","            \"center-right | right | far-right | right-side ] || behind ]\" +","            \" | \"+","            \"leftwards | rightwards\",","","        \"<bg-position>\": \"<position>#\",","","        \"<bg-size>\":","            \"[ <length> | <percentage> | auto ]{1,2} | cover | contain\",","","        \"<border-image-slice>\":","        // [<number> | <percentage>]{1,4} && fill?","        // *but* fill can appear between any of the numbers","        Matcher.many([true /* first element is required */],","                     Matcher.cast(\"<nonnegative-number-or-percentage>\"),","                     Matcher.cast(\"<nonnegative-number-or-percentage>\"),","                     Matcher.cast(\"<nonnegative-number-or-percentage>\"),","                     Matcher.cast(\"<nonnegative-number-or-percentage>\"),","                     \"fill\"),","","        \"<border-radius>\":","            \"<nonnegative-length-or-percentage>{1,4} \" +","            \"[ / <nonnegative-length-or-percentage>{1,4} ]?\",","","        \"<box-shadow>\": \"none | <shadow>#\",","","        \"<clip-path>\": \"<basic-shape> || <geometry-box>\",","","        \"<dasharray>\":","        // \"list of comma and/or white space separated <length>s and","        // <percentage>s\".  There is a non-negative constraint.","        Matcher.cast(\"<nonnegative-length-or-percentage>\")","            .braces(1, Infinity, \"#\", Matcher.cast(\",\").question()),","","        \"<family-name>\":","            // <string> | <IDENT>+","            \"<string> | <ident-not-generic-family> <ident>*\",","","        \"<filter-function-list>\": \"[ <filter-function> | <uri> ]+\",","","        // https://www.w3.org/TR/2014/WD-css-flexbox-1-20140325/#flex-property","        \"<flex>\":","            \"none | [ <flex-grow> <flex-shrink>? || <flex-basis> ]\",","","        \"<font-family>\": \"[ <generic-family> | <family-name> ]#\",","","        \"<font-shorthand>\":","            \"[ <font-style> || <font-variant-css21> || \" +","            \"<font-weight> || <font-stretch> ]? <font-size> \" +","            \"[ / <line-height> ]? <font-family>\",","","        \"<font-variant-alternates>\":","            // stylistic(<feature-value-name>)","            \"stylistic() || \" +","            \"historical-forms || \" +","            // styleset(<feature-value-name> #)","            \"styleset() || \" +","            // character-variant(<feature-value-name> #)","            \"character-variant() || \" +","            // swash(<feature-value-name>)","            \"swash() || \" +","            // ornaments(<feature-value-name>)","            \"ornaments() || \" +","            // annotation(<feature-value-name>)","            \"annotation()\",","","        \"<font-variant-ligatures>\":","            // <common-lig-values>","            \"[ common-ligatures | no-common-ligatures ] || \" +","            // <discretionary-lig-values>","            \"[ discretionary-ligatures | no-discretionary-ligatures ] || \" +","            // <historical-lig-values>","            \"[ historical-ligatures | no-historical-ligatures ] || \" +","            // <contextual-alt-values>","            \"[ contextual | no-contextual ]\",","","        \"<font-variant-numeric>\":","            // <numeric-figure-values>","            \"[ lining-nums | oldstyle-nums ] || \" +","            // <numeric-spacing-values>","            \"[ proportional-nums | tabular-nums ] || \" +","            // <numeric-fraction-values>","            \"[ diagonal-fractions | stacked-fractions ] || \" +","            \"ordinal || slashed-zero\",","","        \"<font-variant-east-asian>\":","            // <east-asian-variant-values>","            \"[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || \" +","            // <east-asian-width-values>","            \"[ full-width | proportional-width ] || \" +","            \"ruby\",","","        // Note that <color> here is \"as defined in the SVG spec\", which","        // is more restrictive that the <color> defined in the CSS spec.","        // none | currentColor | <color> [<icccolor>]? |","        // <funciri> [ none | currentColor | <color> [<icccolor>]? ]?","        \"<paint>\": \"<paint-basic> | <uri> <paint-basic>?\",","","        // Helper definition for <paint> above.","        \"<paint-basic>\": \"none | currentColor | <color-svg> <icccolor>?\",","","        \"<position>\":","            // Because our `alt` combinator is ordered, we need to test these","            // in order from longest possible match to shortest.","            \"[ center | [ left | right ] [ <percentage> | <length> ]? ] && \" +","            \"[ center | [ top | bottom ] [ <percentage> | <length> ]? ]\" +","            \" | \" +","            \"[ left | center | right | <percentage> | <length> ] \" +","            \"[ top | center | bottom | <percentage> | <length> ]\" +","            \" | \" +","            \"[ left | center | right | top | bottom | <percentage> | <length> ]\",","","        \"<repeat-style>\":","            \"repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}\",","","        \"<shadow>\":","        //inset? && [ <length>{2,4} && <color>? ]","        Matcher.many([true /* length is required */],","                     Matcher.cast(\"<length>\").braces(2, 4), \"inset\", \"<color>\"),","","        \"<text-decoration-color>\":","           \"<color>\",","","        \"<text-decoration-line>\":","            \"none | [ underline || overline || line-through || blink ]\",","","        \"<text-decoration-style>\":","            \"solid | double | dotted | dashed | wavy\",","","        \"<will-change>\":","            \"auto | <animateable-feature>#\",","","        \"<x-one-radius>\":","            //[ <length> | <percentage> ] [ <length> | <percentage> ]?","            \"[ <length> | <percentage> ]{1,2}\"","    }","});","","Object.keys(ValidationTypes.simple).forEach(function(nt) {","    var rule = ValidationTypes.simple[nt];","    if (typeof rule === \"string\") {","        ValidationTypes.simple[nt] = function(part) {","            return ValidationTypes.isLiteral(part, rule);","        };","    }","});","","Object.keys(ValidationTypes.complex).forEach(function(nt) {","    var rule = ValidationTypes.complex[nt];","    if (typeof rule === \"string\") {","        ValidationTypes.complex[nt] = Matcher.parse(rule);","    }","});","","// Because this is defined relative to other complex validation types,","// we need to define it *after* the rest of the types are initialized.","ValidationTypes.complex[\"<font-variant>\"] =","    Matcher.oror({ expand: \"<font-variant-ligatures>\" },","                 { expand: \"<font-variant-alternates>\" },","                 \"<font-variant-caps>\",","                 { expand: \"<font-variant-numeric>\" },","                 { expand: \"<font-variant-east-asian>\" });",""],"l":{"3":1,"5":1,"7":1,"8":1,"9":9,"12":1,"15":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"30":0,"34":0,"38":0,"42":0,"43":0,"45":0,"53":0,"56":0,"57":0,"60":0,"68":0,"71":0,"72":0,"75":0,"83":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"99":0,"102":0,"116":0,"121":0,"147":0,"152":0,"165":0,"210":0,"214":0,"223":0,"227":0,"233":0,"237":0,"238":0,"240":0,"245":0,"253":0,"257":0,"262":0,"267":0,"271":0,"277":0,"290":0,"296":0,"300":0,"304":0,"454":1,"455":58,"456":58,"457":36,"458":0,"463":1,"464":27,"465":27,"466":24,"472":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/ValidationError.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/ValidationError.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"ValidationError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":14,"column":0},"end":{"line":37,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}}},"branchMap":{},"code":["\"use strict\";","","module.exports = ValidationError;","","/**"," * Type to use when a validation error occurs."," * @class ValidationError"," * @namespace parserlib.util"," * @constructor"," * @param {String} message The error message."," * @param {int} line The line at which the error occurred."," * @param {int} col The column at which the error occurred."," */","function ValidationError(message, line, col) {","","    /**","     * The column at which the error occurred.","     * @type int","     * @property col","     */","    this.col = col;","","    /**","     * The line at which the error occurred.","     * @type int","     * @property line","     */","    this.line = line;","","    /**","     * The text representation of the unit.","     * @type String","     * @property text","     */","    this.message = message;","","}","","//inherit from Error","ValidationError.prototype = new Error();",""],"l":{"3":1,"14":1,"21":0,"28":0,"35":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValueIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/css/PropertyValueIterator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"PropertyValueIterator","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":40},"end":{"line":53,"column":51}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":42},"end":{"line":62,"column":53}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":42},"end":{"line":71,"column":53}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":39},"end":{"line":81,"column":50}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":39},"end":{"line":92,"column":55}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":39},"end":{"line":103,"column":50}}},"8":{"name":"(anonymous_8)","line":114,"loc":{"start":{"line":114,"column":43},"end":{"line":114,"column":54}}},"9":{"name":"(anonymous_9)","line":123,"loc":{"start":{"line":123,"column":42},"end":{"line":123,"column":53}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":39},"end":{"line":134,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":13,"column":0},"end":{"line":46,"column":1}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":30}},"5":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"6":{"start":{"line":44,"column":4},"end":{"line":44,"column":23}},"7":{"start":{"line":53,"column":0},"end":{"line":55,"column":2}},"8":{"start":{"line":54,"column":4},"end":{"line":54,"column":30}},"9":{"start":{"line":62,"column":0},"end":{"line":64,"column":2}},"10":{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},"11":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"12":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}},"13":{"start":{"line":81,"column":0},"end":{"line":83,"column":2}},"14":{"start":{"line":82,"column":4},"end":{"line":82,"column":30}},"15":{"start":{"line":92,"column":0},"end":{"line":94,"column":2}},"16":{"start":{"line":93,"column":4},"end":{"line":93,"column":71}},"17":{"start":{"line":103,"column":0},"end":{"line":105,"column":2}},"18":{"start":{"line":104,"column":4},"end":{"line":104,"column":58}},"19":{"start":{"line":114,"column":0},"end":{"line":116,"column":2}},"20":{"start":{"line":115,"column":4},"end":{"line":115,"column":55}},"21":{"start":{"line":123,"column":0},"end":{"line":127,"column":2}},"22":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"23":{"start":{"line":125,"column":8},"end":{"line":125,"column":36}},"24":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"25":{"start":{"line":135,"column":4},"end":{"line":135,"column":22}}},"branchMap":{"1":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":28},"end":{"line":93,"column":63}},{"start":{"line":93,"column":66},"end":{"line":93,"column":70}}]},"2":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":51},"end":{"line":93,"column":56}},{"start":{"line":93,"column":60},"end":{"line":93,"column":61}}]},"3":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":28},"end":{"line":104,"column":50}},{"start":{"line":104,"column":53},"end":{"line":104,"column":57}}]},"4":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":25},"end":{"line":115,"column":47}},{"start":{"line":115,"column":50},"end":{"line":115,"column":54}}]},"5":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]}},"code":["\"use strict\";","","module.exports = PropertyValueIterator;","","/**"," * A utility class that allows for easy iteration over the various parts of a"," * property value."," * @param {parserlib.css.PropertyValue} value The property value to iterate over."," * @namespace parserlib.css"," * @class PropertyValueIterator"," * @constructor"," */","function PropertyValueIterator(value) {","","    /**","     * Iterator value","     * @type int","     * @property _i","     * @private","     */","    this._i = 0;","","    /**","     * The parts that make up the value.","     * @type Array","     * @property _parts","     * @private","     */","    this._parts = value.parts;","","    /**","     * Keeps track of bookmarks along the way.","     * @type Array","     * @property _marks","     * @private","     */","    this._marks = [];","","    /**","     * Holds the original property value.","     * @type parserlib.css.PropertyValue","     * @property value","     */","    this.value = value;","","}","","/**"," * Returns the total number of parts in the value."," * @return {int} The total number of parts in the value."," * @method count"," */","PropertyValueIterator.prototype.count = function() {","    return this._parts.length;","};","","/**"," * Indicates if the iterator is positioned at the first item."," * @return {Boolean} True if positioned at first item, false if not."," * @method isFirst"," */","PropertyValueIterator.prototype.isFirst = function() {","    return this._i === 0;","};","","/**"," * Indicates if there are more parts of the property value."," * @return {Boolean} True if there are more parts, false if not."," * @method hasNext"," */","PropertyValueIterator.prototype.hasNext = function() {","    return this._i < this._parts.length;","};","","/**"," * Marks the current spot in the iteration so it can be restored to"," * later on."," * @return {void}"," * @method mark"," */","PropertyValueIterator.prototype.mark = function() {","    this._marks.push(this._i);","};","","/**"," * Returns the next part of the property value or null if there is no next"," * part. Does not move the internal counter forward."," * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next"," * part."," * @method peek"," */","PropertyValueIterator.prototype.peek = function(count) {","    return this.hasNext() ? this._parts[this._i + (count || 0)] : null;","};","","/**"," * Returns the next part of the property value or null if there is no next"," * part."," * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next"," * part."," * @method next"," */","PropertyValueIterator.prototype.next = function() {","    return this.hasNext() ? this._parts[this._i++] : null;","};","","/**"," * Returns the previous part of the property value or null if there is no"," * previous part."," * @return {parserlib.css.PropertyValuePart} The previous part of the"," * property value or null if there is no previous part."," * @method previous"," */","PropertyValueIterator.prototype.previous = function() {","    return this._i > 0 ? this._parts[--this._i] : null;","};","","/**"," * Restores the last saved bookmark."," * @return {void}"," * @method restore"," */","PropertyValueIterator.prototype.restore = function() {","    if (this._marks.length) {","        this._i = this._marks.pop();","    }","};","","/**"," * Drops the last saved bookmark."," * @return {void}"," * @method drop"," */","PropertyValueIterator.prototype.drop = function() {","    this._marks.pop();","};",""],"l":{"3":1,"13":1,"21":0,"29":0,"37":0,"44":0,"53":1,"54":0,"62":1,"63":0,"71":1,"72":0,"81":1,"82":0,"92":1,"93":0,"103":1,"104":0,"114":1,"115":0,"123":1,"124":0,"125":0,"134":1,"135":0}},"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-parserlib/node_modules/parserlib/src/util/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":2}}},"branchMap":{},"code":["\"use strict\";","","module.exports = {","    StringReader    : require(\"./StringReader\"),","    SyntaxError     : require(\"./SyntaxError\"),","    SyntaxUnit      : require(\"./SyntaxUnit\"),","    EventTarget     : require(\"./EventTarget\"),","    TokenStreamBase : require(\"./TokenStreamBase\")","};",""],"l":{"3":1}}}